{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47","program":"C:\\Users\\aarav_gupta\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","backtrace","--edition=2018","C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"addr2line\"","--cfg","feature=\"default\"","--cfg","feature=\"gimli-symbolize\"","--cfg","feature=\"object\"","--cfg","feature=\"std\"","-C","metadata=476c69403e0c3a1d","-C","extra-filename=-476c69403e0c3a1d","--out-dir","c:\\Users\\aarav_gupta\\Chip8Emu\\C8Emu\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\aarav_gupta\\Chip8Emu\\C8Emu\\target\\rls\\debug\\deps","--extern","addr2line=c:\\Users\\aarav_gupta\\Chip8Emu\\C8Emu\\target\\rls\\debug\\deps\\libaddr2line-86a22d105396f3e4.rmeta","--extern","cfg_if=c:\\Users\\aarav_gupta\\Chip8Emu\\C8Emu\\target\\rls\\debug\\deps\\libcfg_if-5cfd424562734452.rmeta","--extern","libc=c:\\Users\\aarav_gupta\\Chip8Emu\\C8Emu\\target\\rls\\debug\\deps\\liblibc-56c4066cc16a4d4c.rmeta","--extern","object=c:\\Users\\aarav_gupta\\Chip8Emu\\C8Emu\\target\\rls\\debug\\deps\\libobject-1316ee796c3370ee.rmeta","--extern","rustc_demangle=c:\\Users\\aarav_gupta\\Chip8Emu\\C8Emu\\target\\rls\\debug\\deps\\librustc_demangle-781870f201b41ecf.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\aarav_gupta\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\aarav_gupta\\Chip8Emu\\C8Emu\\target\\rls\\debug\\deps\\libbacktrace-476c69403e0c3a1d.rmeta"},"prelude":{"crate_id":{"name":"backtrace","disambiguator":[18290838242440363840,13949018202499225804]},"crate_root":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src","external_crates":[{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[4886921161452974022,9452701908620647308]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3203561457090851205,4632072058037203867]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[3169376498131592849,9803978538207206865]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","num":4,"id":{"name":"std","disambiguator":[2953284957370121905,516218847044108999]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9199649512872691809,295485750221223515]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8443236399884245798,5222098755004489868]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6875631416372754603,10839808870381595949]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1502820548942319655,12324332090615114041]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[430706850608609257,9838809896428719127]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14503357713055743246,17731918345561731946]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[5693586899772496405,17220236988479499600]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1060170945230123807,4750192540160149325]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[5837979218880944404,14867613958503134191]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[324672670124702294,15557430334348673179]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","num":15,"id":{"name":"cfg_if","disambiguator":[10643051297448615467,16998885562627461641]}}],"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":0,"byte_end":4528,"line_start":1,"line_end":159,"column_start":1,"column_end":13}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":13},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":2566,"byte_end":2586,"line_start":79,"line_end":79,"column_start":28,"column_end":48},"alias_span":null,"name":"trace_unsynchronized","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":2588,"byte_end":2593,"line_start":79,"line_end":79,"column_start":50,"column_end":55},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":2638,"byte_end":2666,"line_start":82,"line_end":82,"column_start":27,"column_end":55},"alias_span":null,"name":"resolve_frame_unsynchronized","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":2695,"byte_end":2717,"line_start":83,"line_end":83,"column_start":28,"column_end":50},"alias_span":null,"name":"resolve_unsynchronized","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":2719,"byte_end":2725,"line_start":83,"line_end":83,"column_start":52,"column_end":58},"alias_span":null,"name":"Symbol","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":2727,"byte_end":2737,"line_start":83,"line_end":83,"column_start":60,"column_end":70},"alias_span":null,"name":"SymbolName","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":2778,"byte_end":2795,"line_start":86,"line_end":86,"column_start":23,"column_end":40},"alias_span":null,"name":"BytesOrWideString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":2859,"byte_end":2877,"line_start":90,"line_end":90,"column_start":27,"column_end":45},"alias_span":null,"name":"clear_symbol_cache","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":2907,"byte_end":2919,"line_start":93,"line_end":93,"column_start":17,"column_end":29},"alias_span":null,"name":"BacktraceFmt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":2921,"byte_end":2938,"line_start":93,"line_end":93,"column_start":31,"column_end":48},"alias_span":null,"name":"BacktraceFrameFmt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":2940,"byte_end":2948,"line_start":93,"line_end":93,"column_start":50,"column_end":58},"alias_span":null,"name":"PrintFmt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":3037,"byte_end":3042,"line_start":97,"line_end":97,"column_start":35,"column_end":40},"alias_span":null,"name":"trace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":3079,"byte_end":3086,"line_start":98,"line_end":98,"column_start":36,"column_end":43},"alias_span":null,"name":"resolve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":3088,"byte_end":3101,"line_start":98,"line_end":98,"column_start":45,"column_end":58},"alias_span":null,"name":"resolve_frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":3137,"byte_end":3146,"line_start":99,"line_end":99,"column_start":34,"column_end":43},"alias_span":null,"name":"Backtrace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":3148,"byte_end":3162,"line_start":99,"line_end":99,"column_start":45,"column_end":59},"alias_span":null,"name":"BacktraceFrame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":3164,"byte_end":3179,"line_start":99,"line_end":99,"column_start":61,"column_end":76},"alias_span":null,"name":"BacktraceSymbol","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":0,"byte_end":4528,"line_start":1,"line_end":159,"column_start":1,"column_end":13},"name":"","qualname":"::","value":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":25},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":130},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":321},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":157},{"krate":0,"index":173}],"decl_id":null,"docs":" A library for acquiring a backtrace at runtime","sig":null,"attributes":[{"value":"! A library for acquiring a backtrace at runtime","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":0,"byte_end":50,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":51,"byte_end":54,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This library is meant to supplement the `RUST_BACKTRACE=1` support of the","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":55,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"! standard library by allowing an acquisition of a backtrace at runtime","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":133,"byte_end":206,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"! programmatically. The backtraces generated by this library do not need to be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":207,"byte_end":287,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"! parsed, for example, and expose the functionality of multiple backend","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":288,"byte_end":361,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"! implementations.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":362,"byte_end":382,"line_start":7,"line_end":7,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":383,"byte_end":386,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # Implementation","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":387,"byte_end":407,"line_start":9,"line_end":9,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":408,"byte_end":411,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! This library makes use of a number of strategies for actually acquiring a","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":412,"byte_end":489,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"! backtrace. For example unix uses libgcc's libunwind bindings by default to","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":490,"byte_end":568,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"! acquire a backtrace, but coresymbolication or dladdr is used on OSX to","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":569,"byte_end":643,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"! acquire symbol names while linux uses gcc's libbacktrace.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":644,"byte_end":705,"line_start":14,"line_end":14,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":706,"byte_end":709,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! When using the default feature set of this library the \"most reasonable\" set","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":710,"byte_end":790,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"! of defaults is chosen for the current platform, but the features activated","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":791,"byte_end":869,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"! can also be controlled at a finer granularity.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":870,"byte_end":920,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":921,"byte_end":924,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! # API Principles","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":925,"byte_end":945,"line_start":20,"line_end":20,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":946,"byte_end":949,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! This library attempts to be as flexible as possible to accommodate different","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":950,"byte_end":1030,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"! backend implementations of acquiring a backtrace. Consequently the currently","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1031,"byte_end":1111,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"! exported functions are closure-based as opposed to the likely expected","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1112,"byte_end":1186,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"! iterator-based versions. This is done due to limitations of the underlying","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1187,"byte_end":1265,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"! APIs used from the system.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1266,"byte_end":1296,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1297,"byte_end":1300,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1301,"byte_end":1312,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1313,"byte_end":1316,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! First, add this to your Cargo.toml","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1317,"byte_end":1355,"line_start":30,"line_end":30,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1356,"byte_end":1359,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1360,"byte_end":1371,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"! [dependencies]","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1372,"byte_end":1390,"line_start":33,"line_end":33,"column_start":1,"column_end":19}},{"value":"! backtrace = \"0.3\"","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1391,"byte_end":1412,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"! ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1413,"byte_end":1420,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1421,"byte_end":1424,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! Next:","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1425,"byte_end":1434,"line_start":37,"line_end":37,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1435,"byte_end":1438,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1439,"byte_end":1446,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"! extern crate backtrace;","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1447,"byte_end":1474,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1475,"byte_end":1478,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1479,"byte_end":1494,"line_start":42,"line_end":42,"column_start":1,"column_end":16}},{"value":"! # // Unsafe here so test passes on no_std.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1495,"byte_end":1541,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"! # #[cfg(feature = \"std\")] {","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1542,"byte_end":1573,"line_start":44,"line_end":44,"column_start":1,"column_end":32}},{"value":"!     backtrace::trace(|frame| {","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1574,"byte_end":1608,"line_start":45,"line_end":45,"column_start":1,"column_end":35}},{"value":"!         let ip = frame.ip();","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1609,"byte_end":1641,"line_start":46,"line_end":46,"column_start":1,"column_end":33}},{"value":"!         let symbol_address = frame.symbol_address();","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1642,"byte_end":1698,"line_start":47,"line_end":47,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1699,"byte_end":1702,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"!         // Resolve this instruction pointer to a symbol name","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1703,"byte_end":1767,"line_start":49,"line_end":49,"column_start":1,"column_end":65}},{"value":"!         backtrace::resolve_frame(frame, |symbol| {","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1768,"byte_end":1822,"line_start":50,"line_end":50,"column_start":1,"column_end":55}},{"value":"!             if let Some(name) = symbol.name() {","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1823,"byte_end":1874,"line_start":51,"line_end":51,"column_start":1,"column_end":52}},{"value":"!                 // ...","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1875,"byte_end":1901,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"!             }","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1902,"byte_end":1919,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"!             if let Some(filename) = symbol.filename() {","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1920,"byte_end":1979,"line_start":54,"line_end":54,"column_start":1,"column_end":60}},{"value":"!                 // ...","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":1980,"byte_end":2006,"line_start":55,"line_end":55,"column_start":1,"column_end":27}},{"value":"!             }","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":2007,"byte_end":2024,"line_start":56,"line_end":56,"column_start":1,"column_end":18}},{"value":"!         });","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":2025,"byte_end":2040,"line_start":57,"line_end":57,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":2041,"byte_end":2044,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"!         true // keep going to the next frame","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":2045,"byte_end":2093,"line_start":59,"line_end":59,"column_start":1,"column_end":49}},{"value":"!     });","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":2094,"byte_end":2105,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"! }","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":2106,"byte_end":2111,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"! # }","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":2112,"byte_end":2119,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":2120,"byte_end":2127,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":2182,"byte_end":2204,"line_start":66,"line_end":66,"column_start":1,"column_end":23}},{"value":"no_std","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":2205,"byte_end":2215,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"allow(bare_trait_objects)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":2332,"byte_end":2361,"line_start":72,"line_end":72,"column_start":1,"column_end":30}},{"value":"allow(rust_2018_idioms)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":2408,"byte_end":2435,"line_start":73,"line_end":73,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6356,"byte_end":6361,"line_start":51,"line_end":51,"column_start":8,"column_end":13},"name":"trace","qualname":"::backtrace::trace","value":"fn <F> (cb: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inspects the current call-stack, passing all active frames into the closure\n provided to calculate a stack trace.","sig":null,"attributes":[{"value":"/ Inspects the current call-stack, passing all active frames into the closure","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":4569,"byte_end":4648,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ provided to calculate a stack trace.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":4649,"byte_end":4689,"line_start":5,"line_end":5,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":4690,"byte_end":4693,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is the workhorse of this library in calculating the stack","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":4694,"byte_end":4769,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ traces for a program. The given closure `cb` is yielded instances of a","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":4770,"byte_end":4844,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ `Frame` which represent information about that call frame on the stack. The","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":4845,"byte_end":4924,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ closure is yielded frames in a top-down fashion (most recently called","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":4925,"byte_end":4998,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ functions first).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":4999,"byte_end":5020,"line_start":11,"line_end":11,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":5021,"byte_end":5024,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The closure's return value is an indication of whether the backtrace should","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":5025,"byte_end":5104,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ continue. A return value of `false` will terminate the backtrace and return","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":5105,"byte_end":5184,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ immediately.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":5185,"byte_end":5201,"line_start":15,"line_end":15,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":5202,"byte_end":5205,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Once a `Frame` is acquired you will likely want to call `backtrace::resolve`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":5206,"byte_end":5286,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ to convert the `ip` (instruction pointer) or symbol address to a `Symbol`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":5287,"byte_end":5364,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ through which the name and/or filename/line number can be learned.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":5365,"byte_end":5435,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":5436,"byte_end":5439,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this is a relatively low-level function and if you'd like to, for","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":5440,"byte_end":5519,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ example, capture a backtrace to be inspected later, then the `Backtrace`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":5520,"byte_end":5596,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ type may be more appropriate.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":5597,"byte_end":5630,"line_start":23,"line_end":23,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":5631,"byte_end":5634,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Required features","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":5635,"byte_end":5658,"line_start":25,"line_end":25,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":5659,"byte_end":5662,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":5663,"byte_end":5738,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":5739,"byte_end":5796,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":5797,"byte_end":5800,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":5801,"byte_end":5813,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":5814,"byte_end":5817,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This function strives to never panic, but if the `cb` provided panics then","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":5818,"byte_end":5896,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ some platforms will force a double panic to abort the process. Some","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":5897,"byte_end":5968,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ platforms use a C library which internally uses callbacks which cannot be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":5969,"byte_end":6046,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ unwound through, so panicking from `cb` may trigger a process abort.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6047,"byte_end":6119,"line_start":35,"line_end":35,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6120,"byte_end":6123,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6124,"byte_end":6137,"line_start":37,"line_end":37,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6138,"byte_end":6141,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6142,"byte_end":6149,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ extern crate backtrace;","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6150,"byte_end":6177,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6178,"byte_end":6181,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6182,"byte_end":6197,"line_start":42,"line_end":42,"column_start":1,"column_end":16}},{"value":"/     backtrace::trace(|frame| {","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6198,"byte_end":6232,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6233,"byte_end":6251,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6252,"byte_end":6255,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/         true // continue the backtrace","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6256,"byte_end":6298,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6299,"byte_end":6310,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6311,"byte_end":6316,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6317,"byte_end":6324,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6325,"byte_end":6348,"line_start":50,"line_end":50,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":13},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6838,"byte_end":6858,"line_start":65,"line_end":65,"column_start":15,"column_end":35},"name":"trace_unsynchronized","qualname":"::backtrace::trace_unsynchronized","value":"fn <F> (mut cb: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Same as `trace`, only unsafe as it's unsynchronized.","sig":null,"attributes":[{"value":"/ Same as `trace`, only unsafe as it's unsynchronized.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6478,"byte_end":6534,"line_start":56,"line_end":56,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6535,"byte_end":6538,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ This function does not have synchronization guarentees but is available","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6539,"byte_end":6614,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ when the `std` feature of this crate isn't compiled in. See the `trace`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6615,"byte_end":6690,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ function for more documentation and examples.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6691,"byte_end":6740,"line_start":60,"line_end":60,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6741,"byte_end":6744,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6745,"byte_end":6757,"line_start":62,"line_end":62,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6758,"byte_end":6761,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ See information on `trace` for caveats on `cb` panicking.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6762,"byte_end":6823,"line_start":64,"line_end":64,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":7231,"byte_end":7236,"line_start":76,"line_end":76,"column_start":12,"column_end":17},"name":"Frame","qualname":"::backtrace::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":176}],"decl_id":null,"docs":" A trait representing one frame of a backtrace, yielded to the `trace`\n function of this crate.","sig":null,"attributes":[{"value":"/ A trait representing one frame of a backtrace, yielded to the `trace`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6924,"byte_end":6997,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/ function of this crate.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":6998,"byte_end":7025,"line_start":70,"line_end":70,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":7026,"byte_end":7029,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ The tracing function's closure will be yielded frames, and the frame is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":7030,"byte_end":7105,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ virtually dispatched as the underlying implementation is not always known","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":7106,"byte_end":7183,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ until runtime.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":7184,"byte_end":7202,"line_start":74,"line_end":74,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":7664,"byte_end":7666,"line_start":89,"line_end":89,"column_start":12,"column_end":14},"name":"ip","qualname":"<Frame>::ip","value":"fn (&self) -> *mut c_void","parent":null,"children":[],"decl_id":null,"docs":" Returns the current instruction pointer of this frame.","sig":null,"attributes":[{"value":"/ Returns the current instruction pointer of this frame.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":7291,"byte_end":7349,"line_start":81,"line_end":81,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":7354,"byte_end":7357,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This is normally the next instruction to execute in the frame, but not","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":7362,"byte_end":7436,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/ all implementations list this with 100% accuracy (but it's generally","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":7441,"byte_end":7513,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ pretty close).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":7518,"byte_end":7536,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":7541,"byte_end":7544,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ It is recommended to pass this value to `backtrace::resolve` to turn it","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":7549,"byte_end":7624,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ into a symbol name.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":7629,"byte_end":7652,"line_start":88,"line_end":88,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":8157,"byte_end":8171,"line_start":101,"line_end":101,"column_start":12,"column_end":26},"name":"symbol_address","qualname":"<Frame>::symbol_address","value":"fn (&self) -> *mut c_void","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting symbol address of the frame of this function.","sig":null,"attributes":[{"value":"/ Returns the starting symbol address of the frame of this function.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":7726,"byte_end":7796,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":7801,"byte_end":7804,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This will attempt to rewind the instruction pointer returned by `ip` to","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":7809,"byte_end":7884,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/ the start of the function, returning that value. In some cases, however,","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":7889,"byte_end":7965,"line_start":96,"line_end":96,"column_start":5,"column_end":81}},{"value":"/ backends will just return `ip` from this function.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":7970,"byte_end":8024,"line_start":97,"line_end":97,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":8029,"byte_end":8032,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The returned value can sometimes be used if `backtrace::resolve` failed","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":8037,"byte_end":8112,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/ on the `ip` given above.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":8117,"byte_end":8145,"line_start":100,"line_end":100,"column_start":5,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":11118,"byte_end":11125,"line_start":61,"line_end":61,"column_start":8,"column_end":15},"name":"resolve","qualname":"::symbolize::resolve","value":"fn <F> (addr: *mut c_void, cb: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resolve an address to a symbol, passing the symbol to the specified\n closure.","sig":null,"attributes":[{"value":"/ Resolve an address to a symbol, passing the symbol to the specified","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":9572,"byte_end":9643,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ closure.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":9644,"byte_end":9656,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":9657,"byte_end":9660,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will look up the given address in areas such as the local","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":9661,"byte_end":9736,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ symbol table, dynamic symbol table, or DWARF debug info (depending on the","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":9737,"byte_end":9814,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ activated implementation) to find symbols to yield.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":9815,"byte_end":9870,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":9871,"byte_end":9874,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The closure may not be called if resolution could not be performed, and it","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":9875,"byte_end":9953,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ also may be called more than once in the case of inlined functions.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":9954,"byte_end":10025,"line_start":23,"line_end":23,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10026,"byte_end":10029,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Symbols yielded represent the execution at the specified `addr`, returning","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10030,"byte_end":10108,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ file/line pairs for that address (if available).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10109,"byte_end":10161,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10162,"byte_end":10165,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Note that if you have a `Frame` then it's recommended to use the","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10166,"byte_end":10234,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ `resolve_frame` function instead of this one.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10235,"byte_end":10284,"line_start":29,"line_end":29,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10285,"byte_end":10288,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Required features","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10289,"byte_end":10312,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10313,"byte_end":10316,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10317,"byte_end":10392,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10393,"byte_end":10450,"line_start":34,"line_end":34,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10451,"byte_end":10454,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10455,"byte_end":10467,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10468,"byte_end":10471,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This function strives to never panic, but if the `cb` provided panics then","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10472,"byte_end":10550,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ some platforms will force a double panic to abort the process. Some","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10551,"byte_end":10622,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ platforms use a C library which internally uses callbacks which cannot be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10623,"byte_end":10700,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ unwound through, so panicking from `cb` may trigger a process abort.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10701,"byte_end":10773,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10774,"byte_end":10777,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10778,"byte_end":10791,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10792,"byte_end":10795,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10796,"byte_end":10803,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ extern crate backtrace;","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10804,"byte_end":10831,"line_start":46,"line_end":46,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10832,"byte_end":10835,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10836,"byte_end":10851,"line_start":48,"line_end":48,"column_start":1,"column_end":16}},{"value":"/     backtrace::trace(|frame| {","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10852,"byte_end":10886,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"/         let ip = frame.ip();","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10887,"byte_end":10919,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10920,"byte_end":10923,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/         backtrace::resolve(ip, |symbol| {","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10924,"byte_end":10969,"line_start":52,"line_end":52,"column_start":1,"column_end":46}},{"value":"/             // ...","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10970,"byte_end":10992,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/         });","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":10993,"byte_end":11008,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":11009,"byte_end":11012,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/         false // only look at the top frame","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":11013,"byte_end":11060,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/     });","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":11061,"byte_end":11072,"line_start":57,"line_end":57,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":11073,"byte_end":11078,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":11079,"byte_end":11086,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":11087,"byte_end":11110,"line_start":60,"line_end":60,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":12507,"byte_end":12520,"line_start":103,"line_end":103,"column_start":8,"column_end":21},"name":"resolve_frame","qualname":"::symbolize::resolve_frame","value":"fn <F> (frame: &Frame, cb: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resolve a previously capture frame to a symbol, passing the symbol to the\n specified closure.","sig":null,"attributes":[{"value":"/ Resolve a previously capture frame to a symbol, passing the symbol to the","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":11262,"byte_end":11339,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/ specified closure.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":11340,"byte_end":11362,"line_start":67,"line_end":67,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":11363,"byte_end":11366,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ This functin performs the same function as `resolve` except that it takes a","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":11367,"byte_end":11446,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ `Frame` as an argument instead of an address. This can allow some platform","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":11447,"byte_end":11525,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ implementations of backtracing to provide more accurate symbol information","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":11526,"byte_end":11604,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ or information about inline frames for example. It's recommended to use this","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":11605,"byte_end":11685,"line_start":72,"line_end":72,"column_start":1,"column_end":81}},{"value":"/ if you can.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":11686,"byte_end":11701,"line_start":73,"line_end":73,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":11702,"byte_end":11705,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ # Required features","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":11706,"byte_end":11729,"line_start":75,"line_end":75,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":11730,"byte_end":11733,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":11734,"byte_end":11809,"line_start":77,"line_end":77,"column_start":1,"column_end":76}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":11810,"byte_end":11867,"line_start":78,"line_end":78,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":11868,"byte_end":11871,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":11872,"byte_end":11884,"line_start":80,"line_end":80,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":11885,"byte_end":11888,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This function strives to never panic, but if the `cb` provided panics then","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":11889,"byte_end":11967,"line_start":82,"line_end":82,"column_start":1,"column_end":79}},{"value":"/ some platforms will force a double panic to abort the process. Some","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":11968,"byte_end":12039,"line_start":83,"line_end":83,"column_start":1,"column_end":72}},{"value":"/ platforms use a C library which internally uses callbacks which cannot be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":12040,"byte_end":12117,"line_start":84,"line_end":84,"column_start":1,"column_end":78}},{"value":"/ unwound through, so panicking from `cb` may trigger a process abort.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":12118,"byte_end":12190,"line_start":85,"line_end":85,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":12191,"byte_end":12194,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":12195,"byte_end":12208,"line_start":87,"line_end":87,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":12209,"byte_end":12212,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":12213,"byte_end":12220,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ extern crate backtrace;","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":12221,"byte_end":12248,"line_start":90,"line_end":90,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":12249,"byte_end":12252,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":12253,"byte_end":12268,"line_start":92,"line_end":92,"column_start":1,"column_end":16}},{"value":"/     backtrace::trace(|frame| {","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":12269,"byte_end":12303,"line_start":93,"line_end":93,"column_start":1,"column_end":35}},{"value":"/         backtrace::resolve_frame(frame, |symbol| {","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":12304,"byte_end":12358,"line_start":94,"line_end":94,"column_start":1,"column_end":55}},{"value":"/             // ...","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":12359,"byte_end":12381,"line_start":95,"line_end":95,"column_start":1,"column_end":23}},{"value":"/         });","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":12382,"byte_end":12397,"line_start":96,"line_end":96,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":12398,"byte_end":12401,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/         false // only look at the top frame","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":12402,"byte_end":12449,"line_start":98,"line_end":98,"column_start":1,"column_end":48}},{"value":"/     });","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":12450,"byte_end":12461,"line_start":99,"line_end":99,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":12462,"byte_end":12467,"line_start":100,"line_end":100,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":12468,"byte_end":12475,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":12476,"byte_end":12499,"line_start":102,"line_end":102,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":14487,"byte_end":14509,"line_start":158,"line_end":158,"column_start":15,"column_end":37},"name":"resolve_unsynchronized","qualname":"::symbolize::resolve_unsynchronized","value":"fn <F> (addr: *mut c_void, mut cb: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Same as `resolve`, only unsafe as it's unsynchronized.","sig":null,"attributes":[{"value":"/ Same as `resolve`, only unsafe as it's unsynchronized.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":14121,"byte_end":14179,"line_start":149,"line_end":149,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":14180,"byte_end":14183,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ This function does not have synchronization guarentees but is available when","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":14184,"byte_end":14264,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ the `std` feature of this crate isn't compiled in. See the `resolve`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":14265,"byte_end":14337,"line_start":152,"line_end":152,"column_start":1,"column_end":73}},{"value":"/ function for more documentation and examples.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":14338,"byte_end":14387,"line_start":153,"line_end":153,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":14388,"byte_end":14391,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":14392,"byte_end":14404,"line_start":155,"line_end":155,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":14405,"byte_end":14408,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ See information on `resolve` for caveats on `cb` panicking.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":14409,"byte_end":14472,"line_start":157,"line_end":157,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":15014,"byte_end":15042,"line_start":174,"line_end":174,"column_start":15,"column_end":43},"name":"resolve_frame_unsynchronized","qualname":"::symbolize::resolve_frame_unsynchronized","value":"fn <F> (frame: &Frame, mut cb: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Same as `resolve_frame`, only unsafe as it's unsynchronized.","sig":null,"attributes":[{"value":"/ Same as `resolve_frame`, only unsafe as it's unsynchronized.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":14630,"byte_end":14694,"line_start":165,"line_end":165,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":14695,"byte_end":14698,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ This function does not have synchronization guarentees but is available","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":14699,"byte_end":14774,"line_start":167,"line_end":167,"column_start":1,"column_end":76}},{"value":"/ when the `std` feature of this crate isn't compiled in. See the","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":14775,"byte_end":14842,"line_start":168,"line_end":168,"column_start":1,"column_end":68}},{"value":"/ `resolve_frame` function for more documentation and examples.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":14843,"byte_end":14908,"line_start":169,"line_end":169,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":14909,"byte_end":14912,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":14913,"byte_end":14925,"line_start":171,"line_end":171,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":14926,"byte_end":14929,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ See information on `resolve_frame` for caveats on `cb` panicking.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":14930,"byte_end":14999,"line_start":173,"line_end":173,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":15668,"byte_end":15674,"line_start":190,"line_end":190,"column_start":12,"column_end":18},"name":"Symbol","qualname":"::symbolize::Symbol","value":"Symbol {  }","parent":null,"children":[{"krate":0,"index":56}],"decl_id":null,"docs":" A trait representing the resolution of a symbol in a file.","sig":null,"attributes":[{"value":"/ A trait representing the resolution of a symbol in a file.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":15158,"byte_end":15220,"line_start":181,"line_end":181,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":15221,"byte_end":15224,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ This trait is yielded as a trait object to the closure given to the","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":15225,"byte_end":15296,"line_start":183,"line_end":183,"column_start":1,"column_end":72}},{"value":"/ `backtrace::resolve` function, and it is virtually dispatched as it's","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":15297,"byte_end":15370,"line_start":184,"line_end":184,"column_start":1,"column_end":74}},{"value":"/ unknown which implementation is behind it.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":15371,"byte_end":15417,"line_start":185,"line_end":185,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":15418,"byte_end":15421,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ A symbol can give contextual information about a function, for example the","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":15422,"byte_end":15500,"line_start":187,"line_end":187,"column_start":1,"column_end":79}},{"value":"/ name, filename, line number, precise address, etc. Not all information is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":15501,"byte_end":15578,"line_start":188,"line_end":188,"column_start":1,"column_end":78}},{"value":"/ always available in a symbol, however, so all methods return an `Option`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":15579,"byte_end":15656,"line_start":189,"line_end":189,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":16354,"byte_end":16358,"line_start":207,"line_end":207,"column_start":12,"column_end":16},"name":"name","qualname":"<Symbol>::name","value":"fn (&self) -> Option<SymbolName>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of this function.","sig":null,"attributes":[{"value":"/ Returns the name of this function.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":15956,"byte_end":15994,"line_start":198,"line_end":198,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":15999,"byte_end":16002,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The returned structure can be used to query various properties about the","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":16007,"byte_end":16083,"line_start":200,"line_end":200,"column_start":5,"column_end":81}},{"value":"/ symbol name:","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":16088,"byte_end":16104,"line_start":201,"line_end":201,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":16109,"byte_end":16112,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ * The `Display` implementation will print out the demangled symbol.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":16117,"byte_end":16188,"line_start":203,"line_end":203,"column_start":5,"column_end":76}},{"value":"/ * The raw `str` value of the symbol can be accessed (if it's valid","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":16193,"byte_end":16263,"line_start":204,"line_end":204,"column_start":5,"column_end":75}},{"value":"/   utf-8).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":16268,"byte_end":16281,"line_start":205,"line_end":205,"column_start":5,"column_end":18}},{"value":"/ * The raw bytes for the symbol name can be accessed.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":16286,"byte_end":16342,"line_start":206,"line_end":206,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":16489,"byte_end":16493,"line_start":212,"line_end":212,"column_start":12,"column_end":16},"name":"addr","qualname":"<Symbol>::addr","value":"fn (&self) -> Option<*mut c_void>","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting address of this function.\n","sig":null,"attributes":[{"value":"/ Returns the starting address of this function.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":16427,"byte_end":16477,"line_start":211,"line_end":211,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":16693,"byte_end":16705,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"filename_raw","qualname":"<Symbol>::filename_raw","value":"fn (&self) -> Option<BytesOrWideString>","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw filename as a slice. This is mainly useful for `no_std`\n environments.\n","sig":null,"attributes":[{"value":"/ Returns the raw filename as a slice. This is mainly useful for `no_std`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":16584,"byte_end":16659,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ environments.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":16664,"byte_end":16681,"line_start":217,"line_end":217,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":17014,"byte_end":17020,"line_start":226,"line_end":226,"column_start":12,"column_end":18},"name":"lineno","qualname":"<Symbol>::lineno","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the line number for where this symbol is currently executing.","sig":null,"attributes":[{"value":"/ Returns the line number for where this symbol is currently executing.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":16789,"byte_end":16862,"line_start":222,"line_end":222,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":16867,"byte_end":16870,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This return value is typically `Some` if `filename` returns `Some`, and","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":16875,"byte_end":16950,"line_start":224,"line_end":224,"column_start":5,"column_end":80}},{"value":"/ is consequently subject to similar caveats.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":16955,"byte_end":17002,"line_start":225,"line_end":225,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":17662,"byte_end":17670,"line_start":243,"line_end":243,"column_start":12,"column_end":20},"name":"filename","qualname":"<Symbol>::filename","value":"fn (&self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the file name where this function was defined.","sig":null,"attributes":[{"value":"/ Returns the file name where this function was defined.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":17084,"byte_end":17142,"line_start":230,"line_end":230,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":17147,"byte_end":17150,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ This is currently only available when libbacktrace is being used (e.g.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":17155,"byte_end":17229,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/ unix platforms other than OSX) and when a binary is compiled with","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":17234,"byte_end":17303,"line_start":233,"line_end":233,"column_start":5,"column_end":74}},{"value":"/ debuginfo. If neither of these conditions is met then this will likely","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":17308,"byte_end":17382,"line_start":234,"line_end":234,"column_start":5,"column_end":79}},{"value":"/ return `None`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":17387,"byte_end":17405,"line_start":235,"line_end":235,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":17410,"byte_end":17413,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":17418,"byte_end":17441,"line_start":237,"line_end":237,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":17446,"byte_end":17449,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":17454,"byte_end":17529,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":17534,"byte_end":17591,"line_start":240,"line_end":240,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":17596,"byte_end":17619,"line_start":241,"line_end":241,"column_start":5,"column_end":28}},{"value":"allow(unreachable_code)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":17624,"byte_end":17650,"line_start":242,"line_end":242,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":19627,"byte_end":19637,"line_start":310,"line_end":310,"column_start":12,"column_end":22},"name":"SymbolName","qualname":"::symbolize::SymbolName","value":"SymbolName {  }","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"decl_id":null,"docs":" A wrapper around a symbol name to provide ergonomic accessors to the\n demangled name, the raw bytes, the raw string, etc.\n","sig":null,"attributes":[{"value":"/ A wrapper around a symbol name to provide ergonomic accessors to the","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":19396,"byte_end":19468,"line_start":306,"line_end":306,"column_start":1,"column_end":73}},{"value":"/ demangled name, the raw bytes, the raw string, etc.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":19469,"byte_end":19524,"line_start":307,"line_end":307,"column_start":1,"column_end":56}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":19596,"byte_end":19615,"line_start":309,"line_end":309,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":19847,"byte_end":19850,"line_start":318,"line_end":318,"column_start":12,"column_end":15},"name":"new","qualname":"<SymbolName>::new","value":"fn (bytes: &'a [u8]) -> SymbolName<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new symbol name from the raw underlying bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new symbol name from the raw underlying bytes.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":19775,"byte_end":19835,"line_start":317,"line_end":317,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":20473,"byte_end":20479,"line_start":338,"line_end":338,"column_start":12,"column_end":18},"name":"as_str","qualname":"<SymbolName>::as_str","value":"fn (&self) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw (mangled) symbol name as a `str` if the symbol is valid utf-8.","sig":null,"attributes":[{"value":"/ Returns the raw (mangled) symbol name as a `str` if the symbol is valid utf-8.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":20295,"byte_end":20377,"line_start":335,"line_end":335,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":20382,"byte_end":20385,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ Use the `Display` implementation if you want the demangled version.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":20390,"byte_end":20461,"line_start":337,"line_end":337,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":20716,"byte_end":20724,"line_start":346,"line_end":346,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<SymbolName>::as_bytes","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw symbol name as a list of bytes\n","sig":null,"attributes":[{"value":"/ Returns the raw symbol name as a list of bytes","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":20654,"byte_end":20704,"line_start":345,"line_end":345,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":24119,"byte_end":24137,"line_start":451,"line_end":451,"column_start":8,"column_end":26},"name":"clear_symbol_cache","qualname":"::symbolize::clear_symbol_cache","value":"fn () -> ()","parent":null,"children":[],"decl_id":null,"docs":" Attempt to reclaim that cached memory used to symbolicate addresses.","sig":null,"attributes":[{"value":"/ Attempt to reclaim that cached memory used to symbolicate addresses.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":23450,"byte_end":23522,"line_start":437,"line_end":437,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":23523,"byte_end":23526,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ This method will attempt to release any global data structures that have","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":23527,"byte_end":23603,"line_start":439,"line_end":439,"column_start":1,"column_end":77}},{"value":"/ otherwise been cached globally or in the thread which typically represent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":23604,"byte_end":23681,"line_start":440,"line_end":440,"column_start":1,"column_end":78}},{"value":"/ parsed DWARF information or similar.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":23682,"byte_end":23722,"line_start":441,"line_end":441,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":23723,"byte_end":23726,"line_start":442,"line_end":442,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":23727,"byte_end":23740,"line_start":443,"line_end":443,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":23741,"byte_end":23744,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ While this function is always available it doesn't actually do anything on","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":23745,"byte_end":23823,"line_start":445,"line_end":445,"column_start":1,"column_end":79}},{"value":"/ most implementations. Libraries like dbghelp or libbacktrace do not provide","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":23824,"byte_end":23903,"line_start":446,"line_end":446,"column_start":1,"column_end":80}},{"value":"/ facilities to deallocate state and manage the allocated memory. For now the","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":23904,"byte_end":23983,"line_start":447,"line_end":447,"column_start":1,"column_end":80}},{"value":"/ `gimli-symbolize` feature of this crate is the only feature where this","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":23984,"byte_end":24058,"line_start":448,"line_end":448,"column_start":1,"column_end":75}},{"value":"/ function has any effect.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":24059,"byte_end":24087,"line_start":449,"line_end":449,"column_start":1,"column_end":29}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":24088,"byte_end":24111,"line_start":450,"line_end":450,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":25990,"byte_end":25995,"line_start":19,"line_end":19,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::types::BytesOrWideString::Bytes","value":"BytesOrWideString::Bytes(&'a [u8])","parent":{"krate":0,"index":286},"children":[],"decl_id":null,"docs":" A slice, typically provided on Unix platforms.\n","sig":null,"attributes":[{"value":"/ A slice, typically provided on Unix platforms.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":25935,"byte_end":25985,"line_start":18,"line_end":18,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":26056,"byte_end":26060,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Wide","qualname":"::types::BytesOrWideString::Wide","value":"BytesOrWideString::Wide(&'a [u16])","parent":{"krate":0,"index":286},"children":[],"decl_id":null,"docs":" Wide strings typically from Windows.\n","sig":null,"attributes":[{"value":"/ Wide strings typically from Windows.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":26011,"byte_end":26051,"line_start":20,"line_end":20,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":25907,"byte_end":25924,"line_start":17,"line_end":17,"column_start":10,"column_end":27},"name":"BytesOrWideString","qualname":"::types::BytesOrWideString","value":"BytesOrWideString::{Bytes, Wide}","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":291}],"decl_id":null,"docs":" A platform independent representation of a string. When working with `std`\n enabled it is recommended to the convenience methods for providing\n conversions to `std` types.\n","sig":null,"attributes":[{"value":"/ A platform independent representation of a string. When working with `std`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":25699,"byte_end":25777,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ enabled it is recommended to the convenience methods for providing","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":25778,"byte_end":25848,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ conversions to `std` types.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":25849,"byte_end":25880,"line_start":15,"line_end":15,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":26459,"byte_end":26471,"line_start":33,"line_end":33,"column_start":12,"column_end":24},"name":"to_str_lossy","qualname":"<BytesOrWideString>::to_str_lossy","value":"fn (&self) -> Cow<'a, str>","parent":null,"children":[],"decl_id":null,"docs":" Lossy converts to a `Cow<str>`, will allocate if `Bytes` is not valid\n UTF-8 or if `BytesOrWideString` is `Wide`.","sig":null,"attributes":[{"value":"/ Lossy converts to a `Cow<str>`, will allocate if `Bytes` is not valid","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":26137,"byte_end":26210,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ UTF-8 or if `BytesOrWideString` is `Wide`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":26215,"byte_end":26261,"line_start":27,"line_end":27,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":26266,"byte_end":26269,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":26274,"byte_end":26297,"line_start":29,"line_end":29,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":26302,"byte_end":26305,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":26310,"byte_end":26385,"line_start":31,"line_end":31,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":26390,"byte_end":26447,"line_start":32,"line_end":32,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":26970,"byte_end":26983,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"into_path_buf","qualname":"<BytesOrWideString>::into_path_buf","value":"fn (self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Provides a `Path` representation of `BytesOrWideString`.","sig":null,"attributes":[{"value":"/ Provides a `Path` representation of `BytesOrWideString`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":26712,"byte_end":26772,"line_start":42,"line_end":42,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":26777,"byte_end":26780,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":26785,"byte_end":26808,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":26813,"byte_end":26816,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":26821,"byte_end":26896,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":26901,"byte_end":26958,"line_start":47,"line_end":47,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":28340,"byte_end":28352,"line_start":15,"line_end":15,"column_start":12,"column_end":24},"name":"BacktraceFmt","qualname":"::print::BacktraceFmt","value":"BacktraceFmt {  }","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"decl_id":null,"docs":" A formatter for backtraces.","sig":null,"attributes":[{"value":"/ A formatter for backtraces.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":28087,"byte_end":28118,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":28119,"byte_end":28122,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type can be used to print a backtrace regardless of where the backtrace","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":28123,"byte_end":28203,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ itself comes from. If you have a `Backtrace` type then its `Debug`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":28204,"byte_end":28274,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ implementation already uses this printing format.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":28275,"byte_end":28328,"line_start":14,"line_end":14,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":28732,"byte_end":28737,"line_start":26,"line_end":26,"column_start":5,"column_end":10},"name":"Short","qualname":"::print::PrintFmt::Short","value":"PrintFmt::Short","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Prints a terser backtrace which ideally only contains relevant information\n","sig":null,"attributes":[{"value":"/ Prints a terser backtrace which ideally only contains relevant information","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":28649,"byte_end":28727,"line_start":25,"line_end":25,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":28809,"byte_end":28813,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"name":"Full","qualname":"::print::PrintFmt::Full","value":"PrintFmt::Full","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Prints a backtrace that contains all possible information\n","sig":null,"attributes":[{"value":"/ Prints a backtrace that contains all possible information","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":28743,"byte_end":28804,"line_start":27,"line_end":27,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":28838,"byte_end":28853,"line_start":30,"line_end":30,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::print::PrintFmt::__Nonexhaustive","value":"PrintFmt::__Nonexhaustive","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":28634,"byte_end":28642,"line_start":24,"line_end":24,"column_start":10,"column_end":18},"name":"PrintFmt","qualname":"::print::PrintFmt","value":"PrintFmt::{Short, Full, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302}],"decl_id":null,"docs":" The styles of printing that we can print\n","sig":null,"attributes":[{"value":"/ The styles of printing that we can print","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":28542,"byte_end":28586,"line_start":22,"line_end":22,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":29311,"byte_end":29314,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<BacktraceFmt>::new","value":"fn (fmt: &'a mut fmt::Formatter<'b>, format: PrintFmt, print_path:\n    &'a mut (FnMut(&mut fmt::Formatter, BytesOrWideString) -> fmt::Result +\n             'b)) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BacktraceFmt` which will write output to the provided\n `fmt`.","sig":null,"attributes":[{"value":"/ Create a new `BacktraceFmt` which will write output to the provided","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":28898,"byte_end":28969,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ `fmt`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":28974,"byte_end":28984,"line_start":35,"line_end":35,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":28989,"byte_end":28992,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The `format` argument will control the style in which the backtrace is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":28997,"byte_end":29071,"line_start":37,"line_end":37,"column_start":5,"column_end":79}},{"value":"/ printed, and the `print_path` argument will be used to print the","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":29076,"byte_end":29144,"line_start":38,"line_end":38,"column_start":5,"column_end":73}},{"value":"/ `BytesOrWideString` instances of filenames. This type itself doesn't do","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":29149,"byte_end":29224,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ any printing of filenames, but this callback is required to do so.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":29229,"byte_end":29299,"line_start":40,"line_end":40,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":29908,"byte_end":29919,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"add_context","qualname":"<BacktraceFmt>::add_context","value":"fn (&mut self) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Prints a preamble for the backtrace about to be printed.","sig":null,"attributes":[{"value":"/ Prints a preamble for the backtrace about to be printed.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":29629,"byte_end":29689,"line_start":54,"line_end":54,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":29694,"byte_end":29697,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This is required on some platforms for backtraces to be fully","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":29702,"byte_end":29767,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/ sumbolicated later, and otherwise this should just be the first method","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":29772,"byte_end":29846,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ you call after creating a `BacktraceFmt`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":29851,"byte_end":29896,"line_start":58,"line_end":58,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":30307,"byte_end":30312,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"frame","qualname":"<BacktraceFmt>::frame","value":"fn (&mut self) -> BacktraceFrameFmt<'_, 'a, 'b>","parent":null,"children":[],"decl_id":null,"docs":" Adds a frame to the backtrace output.","sig":null,"attributes":[{"value":"/ Adds a frame to the backtrace output.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":30059,"byte_end":30100,"line_start":65,"line_end":65,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":30105,"byte_end":30108,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This commit returns an RAII instance of a `BacktraceFrameFmt` which can be used","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":30113,"byte_end":30196,"line_start":67,"line_end":67,"column_start":5,"column_end":88}},{"value":"/ to actually print a frame, and on destruction it will increment the","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":30201,"byte_end":30272,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ frame counter.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":30277,"byte_end":30295,"line_start":69,"line_end":69,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":30619,"byte_end":30625,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"finish","qualname":"<BacktraceFmt>::finish","value":"fn (&mut self) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Completes the backtrace output.","sig":null,"attributes":[{"value":"/ Completes the backtrace output.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":30460,"byte_end":30495,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":30500,"byte_end":30503,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This is currently a no-op but is added for future compatibility with","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":30508,"byte_end":30580,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/ backtrace formats.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":30585,"byte_end":30607,"line_start":80,"line_end":80,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":30890,"byte_end":30907,"line_start":90,"line_end":90,"column_start":12,"column_end":29},"name":"BacktraceFrameFmt","qualname":"::print::BacktraceFrameFmt","value":"BacktraceFrameFmt {  }","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"decl_id":null,"docs":" A formatter for just one frame of a backtrace.","sig":null,"attributes":[{"value":"/ A formatter for just one frame of a backtrace.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":30760,"byte_end":30810,"line_start":87,"line_end":87,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":30811,"byte_end":30814,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ This type is created by the `BacktraceFmt::frame` function.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":30815,"byte_end":30878,"line_start":89,"line_end":89,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":31429,"byte_end":31444,"line_start":106,"line_end":106,"column_start":12,"column_end":27},"name":"backtrace_frame","qualname":"<BacktraceFrameFmt>::backtrace_frame","value":"fn (&mut self, frame: &crate::BacktraceFrame) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Prints a `BacktraceFrame` with this frame formatter.","sig":null,"attributes":[{"value":"/ Prints a `BacktraceFrame` with this frame formatter.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":31034,"byte_end":31090,"line_start":96,"line_end":96,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":31095,"byte_end":31098,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ This will recusrively print all `BacktraceSymbol` instances within the","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":31103,"byte_end":31177,"line_start":98,"line_end":98,"column_start":5,"column_end":79}},{"value":"/ `BacktraceFrame`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":31182,"byte_end":31203,"line_start":99,"line_end":99,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":31208,"byte_end":31211,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":31216,"byte_end":31239,"line_start":101,"line_end":101,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":31244,"byte_end":31247,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":31252,"byte_end":31327,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":31332,"byte_end":31389,"line_start":104,"line_end":104,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":31394,"byte_end":31417,"line_start":105,"line_end":105,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":32046,"byte_end":32062,"line_start":124,"line_end":124,"column_start":12,"column_end":28},"name":"backtrace_symbol","qualname":"<BacktraceFrameFmt>::backtrace_symbol","value":"fn (&mut self, frame: &crate::BacktraceFrame, symbol: &crate::BacktraceSymbol) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Prints a `BacktraceSymbol` within a `BacktraceFrame`.","sig":null,"attributes":[{"value":"/ Prints a `BacktraceSymbol` within a `BacktraceFrame`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":31763,"byte_end":31820,"line_start":117,"line_end":117,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":31825,"byte_end":31828,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":31833,"byte_end":31856,"line_start":119,"line_end":119,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":31861,"byte_end":31864,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":31869,"byte_end":31944,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":31949,"byte_end":32006,"line_start":122,"line_end":122,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":32011,"byte_end":32034,"line_start":123,"line_end":123,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":32785,"byte_end":32791,"line_start":145,"line_end":145,"column_start":12,"column_end":18},"name":"symbol","qualname":"<BacktraceFrameFmt>::symbol","value":"fn (&mut self, frame: &crate::Frame, symbol: &crate::Symbol) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Prints a raw traced `Frame` and `Symbol`, typically from within the raw\n callbacks of this crate.\n","sig":null,"attributes":[{"value":"/ Prints a raw traced `Frame` and `Symbol`, typically from within the raw","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":32665,"byte_end":32740,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"/ callbacks of this crate.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":32745,"byte_end":32773,"line_start":144,"line_end":144,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":33304,"byte_end":33313,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"print_raw","qualname":"<BacktraceFrameFmt>::print_raw","value":"fn (&mut self, frame_ip: *mut c_void, symbol_name: Option<crate::SymbolName>, filename: Option<BytesOrWideString>, lineno: Option<u32>) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Adds a raw frame to the backtrace output.","sig":null,"attributes":[{"value":"/ Adds a raw frame to the backtrace output.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":33043,"byte_end":33088,"line_start":155,"line_end":155,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":33093,"byte_end":33096,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This method, unlike the previous, takes the raw arguments in case","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":33101,"byte_end":33170,"line_start":157,"line_end":157,"column_start":5,"column_end":74}},{"value":"/ they're being source from different locations. Note that this may be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":33175,"byte_end":33247,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ called multiple times for one frame.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":33252,"byte_end":33292,"line_start":159,"line_end":159,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7730700,"byte_end":7730709,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"Backtrace","qualname":"::capture::Backtrace","value":"Backtrace {  }","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382}],"decl_id":null,"docs":" Representation of an owned and self-contained backtrace.","sig":null,"attributes":[{"value":"/ Representation of an owned and self-contained backtrace.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7730046,"byte_end":7730106,"line_start":11,"line_end":11,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7730107,"byte_end":7730110,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This structure can be used to capture a backtrace at various points in a","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7730111,"byte_end":7730187,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ program and later used to inspect what the backtrace was at that time.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7730188,"byte_end":7730262,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7730263,"byte_end":7730266,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `Backtrace` supports pretty-printing of backtraces through its `Debug`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7730267,"byte_end":7730341,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ implementation.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7730342,"byte_end":7730361,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7730362,"byte_end":7730365,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Required features","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7730366,"byte_end":7730389,"line_start":19,"line_end":19,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7730390,"byte_end":7730393,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7730394,"byte_end":7730469,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7730470,"byte_end":7730527,"line_start":22,"line_end":22,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7731435,"byte_end":7731449,"line_start":49,"line_end":49,"column_start":12,"column_end":26},"name":"BacktraceFrame","qualname":"::capture::BacktraceFrame","value":"BacktraceFrame {  }","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387}],"decl_id":null,"docs":" Captured version of a frame in a backtrace.","sig":null,"attributes":[{"value":"/ Captured version of a frame in a backtrace.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7731068,"byte_end":7731115,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7731116,"byte_end":7731119,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This type is returned as a list from `Backtrace::frames` and represents one","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7731120,"byte_end":7731199,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ stack frame in a captured backtrace.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7731200,"byte_end":7731240,"line_start":42,"line_end":42,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7731241,"byte_end":7731244,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Required features","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7731245,"byte_end":7731268,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7731269,"byte_end":7731272,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7731273,"byte_end":7731348,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7731349,"byte_end":7731406,"line_start":47,"line_end":47,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7732612,"byte_end":7732627,"line_start":92,"line_end":92,"column_start":12,"column_end":27},"name":"BacktraceSymbol","qualname":"::capture::BacktraceSymbol","value":"BacktraceSymbol {  }","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403}],"decl_id":null,"docs":" Captured version of a symbol in a backtrace.","sig":null,"attributes":[{"value":"/ Captured version of a symbol in a backtrace.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7732093,"byte_end":7732141,"line_start":80,"line_end":80,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7732142,"byte_end":7732145,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This type is returned as a list from `BacktraceFrame::symbols` and","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7732146,"byte_end":7732216,"line_start":82,"line_end":82,"column_start":1,"column_end":71}},{"value":"/ represents the metadata for a symbol in a backtrace.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7732217,"byte_end":7732273,"line_start":83,"line_end":83,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7732274,"byte_end":7732277,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # Required features","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7732278,"byte_end":7732301,"line_start":85,"line_end":85,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7732302,"byte_end":7732305,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7732306,"byte_end":7732381,"line_start":87,"line_end":87,"column_start":1,"column_end":76}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7732382,"byte_end":7732439,"line_start":88,"line_end":88,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7733908,"byte_end":7733911,"line_start":127,"line_end":127,"column_start":12,"column_end":15},"name":"new","qualname":"<Backtrace>::new","value":"fn () -> Backtrace","parent":null,"children":[],"decl_id":null,"docs":" Captures a backtrace at the callsite of this function, returning an\n owned representation.","sig":null,"attributes":[{"value":"/ Captures a backtrace at the callsite of this function, returning an","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7732762,"byte_end":7732833,"line_start":100,"line_end":100,"column_start":5,"column_end":76}},{"value":"/ owned representation.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7732838,"byte_end":7732863,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7732868,"byte_end":7732871,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This function is useful for representing a backtrace as an object in","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7732876,"byte_end":7732948,"line_start":103,"line_end":103,"column_start":5,"column_end":77}},{"value":"/ Rust. This returned value can be sent across threads and printed","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7732953,"byte_end":7733021,"line_start":104,"line_end":104,"column_start":5,"column_end":73}},{"value":"/ elsewhere, and the purpose of this value is to be entirely self","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7733026,"byte_end":7733093,"line_start":105,"line_end":105,"column_start":5,"column_end":72}},{"value":"/ contained.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7733098,"byte_end":7733112,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7733117,"byte_end":7733120,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Note that on some platforms acquiring a full backtrace and resolving it","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7733125,"byte_end":7733200,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"/ can be extremely expensive. If the cost is too much for your application","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7733205,"byte_end":7733281,"line_start":109,"line_end":109,"column_start":5,"column_end":81}},{"value":"/ it's recommended to instead use `Backtrace::new_unresolved()` which","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7733286,"byte_end":7733357,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ avoids the symbol resolution step (which typically takes the longest)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7733362,"byte_end":7733435,"line_start":111,"line_end":111,"column_start":5,"column_end":78}},{"value":"/ and allows deferring that to a later date.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7733440,"byte_end":7733486,"line_start":112,"line_end":112,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7733491,"byte_end":7733494,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7733499,"byte_end":7733513,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7733518,"byte_end":7733521,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7733526,"byte_end":7733533,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use backtrace::Backtrace;","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7733538,"byte_end":7733567,"line_start":117,"line_end":117,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7733572,"byte_end":7733575,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let current_backtrace = Backtrace::new();","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7733580,"byte_end":7733625,"line_start":119,"line_end":119,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7733630,"byte_end":7733637,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7733642,"byte_end":7733645,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7733650,"byte_end":7733673,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7733678,"byte_end":7733681,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7733686,"byte_end":7733761,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7733766,"byte_end":7733823,"line_start":125,"line_end":125,"column_start":5,"column_end":62}},{"value":"inline(never)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7733828,"byte_end":7733844,"line_start":126,"line_end":126,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7735077,"byte_end":7735091,"line_start":157,"line_end":157,"column_start":12,"column_end":26},"name":"new_unresolved","qualname":"<Backtrace>::new_unresolved","value":"fn () -> Backtrace","parent":null,"children":[],"decl_id":null,"docs":" Similar to `new` except that this does not resolve any symbols, this\n simply captures the backtrace as a list of addresses.","sig":null,"attributes":[{"value":"/ Similar to `new` except that this does not resolve any symbols, this","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7734028,"byte_end":7734100,"line_start":133,"line_end":133,"column_start":5,"column_end":77}},{"value":"/ simply captures the backtrace as a list of addresses.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7734105,"byte_end":7734162,"line_start":134,"line_end":134,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7734167,"byte_end":7734170,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ At a later time the `resolve` function can be called to resolve this","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7734175,"byte_end":7734247,"line_start":136,"line_end":136,"column_start":5,"column_end":77}},{"value":"/ backtrace's symbols into readable names. This function exists because","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7734252,"byte_end":7734325,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ the resolution process can sometimes take a significant amount of time","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7734330,"byte_end":7734404,"line_start":138,"line_end":138,"column_start":5,"column_end":79}},{"value":"/ whereas any one backtrace may only be rarely printed.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7734409,"byte_end":7734466,"line_start":139,"line_end":139,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7734471,"byte_end":7734474,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7734479,"byte_end":7734493,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7734498,"byte_end":7734501,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7734506,"byte_end":7734513,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ use backtrace::Backtrace;","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7734518,"byte_end":7734547,"line_start":144,"line_end":144,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7734552,"byte_end":7734555,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ let mut current_backtrace = Backtrace::new_unresolved();","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7734560,"byte_end":7734620,"line_start":146,"line_end":146,"column_start":5,"column_end":65}},{"value":"/ println!(\"{:?}\", current_backtrace); // no symbol names","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7734625,"byte_end":7734684,"line_start":147,"line_end":147,"column_start":5,"column_end":64}},{"value":"/ current_backtrace.resolve();","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7734689,"byte_end":7734721,"line_start":148,"line_end":148,"column_start":5,"column_end":37}},{"value":"/ println!(\"{:?}\", current_backtrace); // symbol names now present","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7734726,"byte_end":7734794,"line_start":149,"line_end":149,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7734799,"byte_end":7734806,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7734811,"byte_end":7734814,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7734819,"byte_end":7734842,"line_start":152,"line_end":152,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7734847,"byte_end":7734850,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7734855,"byte_end":7734930,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7734935,"byte_end":7734992,"line_start":155,"line_end":155,"column_start":5,"column_end":62}},{"value":"inline(never)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7734997,"byte_end":7735013,"line_start":156,"line_end":156,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7736218,"byte_end":7736224,"line_start":192,"line_end":192,"column_start":12,"column_end":18},"name":"frames","qualname":"<Backtrace>::frames","value":"fn (&self) -> &[BacktraceFrame]","parent":null,"children":[],"decl_id":null,"docs":" Returns the frames from when this backtrace was captured.","sig":null,"attributes":[{"value":"/ Returns the frames from when this backtrace was captured.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7735765,"byte_end":7735826,"line_start":182,"line_end":182,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7735831,"byte_end":7735834,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The first entry of this slice is likely the function `Backtrace::new`,","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7735839,"byte_end":7735913,"line_start":184,"line_end":184,"column_start":5,"column_end":79}},{"value":"/ and the last frame is likely something about how this thread or the main","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7735918,"byte_end":7735994,"line_start":185,"line_end":185,"column_start":5,"column_end":81}},{"value":"/ function started.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7735999,"byte_end":7736020,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7736025,"byte_end":7736028,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7736033,"byte_end":7736056,"line_start":188,"line_end":188,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7736061,"byte_end":7736064,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7736069,"byte_end":7736144,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7736149,"byte_end":7736206,"line_start":191,"line_end":191,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7736792,"byte_end":7736799,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"resolve","qualname":"<Backtrace>::resolve","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" If this backtrace was created from `new_unresolved` then this function\n will resolve all addresses in the backtrace to their symbolic names.","sig":null,"attributes":[{"value":"/ If this backtrace was created from `new_unresolved` then this function","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7736314,"byte_end":7736388,"line_start":196,"line_end":196,"column_start":5,"column_end":79}},{"value":"/ will resolve all addresses in the backtrace to their symbolic names.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7736393,"byte_end":7736465,"line_start":197,"line_end":197,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7736470,"byte_end":7736473,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ If this backtrace has been previously resolved or was created through","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7736478,"byte_end":7736551,"line_start":199,"line_end":199,"column_start":5,"column_end":78}},{"value":"/ `new`, this function does nothing.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7736556,"byte_end":7736594,"line_start":200,"line_end":200,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7736599,"byte_end":7736602,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7736607,"byte_end":7736630,"line_start":202,"line_end":202,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7736635,"byte_end":7736638,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7736643,"byte_end":7736718,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7736723,"byte_end":7736780,"line_start":205,"line_end":205,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7738239,"byte_end":7738241,"line_start":252,"line_end":252,"column_start":12,"column_end":14},"name":"ip","qualname":"<BacktraceFrame>::ip","value":"fn (&self) -> *mut c_void","parent":null,"children":[],"decl_id":null,"docs":" Same as `Frame::ip`","sig":null,"attributes":[{"value":"/ Same as `Frame::ip`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7738018,"byte_end":7738041,"line_start":246,"line_end":246,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7738046,"byte_end":7738049,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7738054,"byte_end":7738077,"line_start":248,"line_end":248,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7738082,"byte_end":7738085,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7738090,"byte_end":7738165,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7738170,"byte_end":7738227,"line_start":251,"line_end":251,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7738549,"byte_end":7738563,"line_start":262,"line_end":262,"column_start":12,"column_end":26},"name":"symbol_address","qualname":"<BacktraceFrame>::symbol_address","value":"fn (&self) -> *mut c_void","parent":null,"children":[],"decl_id":null,"docs":" Same as `Frame::symbol_address`","sig":null,"attributes":[{"value":"/ Same as `Frame::symbol_address`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7738316,"byte_end":7738351,"line_start":256,"line_end":256,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7738356,"byte_end":7738359,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7738364,"byte_end":7738387,"line_start":258,"line_end":258,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7738392,"byte_end":7738395,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7738400,"byte_end":7738475,"line_start":260,"line_end":260,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7738480,"byte_end":7738537,"line_start":261,"line_end":261,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7739330,"byte_end":7739337,"line_start":280,"line_end":280,"column_start":12,"column_end":19},"name":"symbols","qualname":"<BacktraceFrame>::symbols","value":"fn (&self) -> &[BacktraceSymbol]","parent":null,"children":[],"decl_id":null,"docs":" Returns the list of symbols that this frame corresponds to.","sig":null,"attributes":[{"value":"/ Returns the list of symbols that this frame corresponds to.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7738650,"byte_end":7738713,"line_start":266,"line_end":266,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7738718,"byte_end":7738721,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Normally there is only one symbol per frame, but sometimes if a number","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7738726,"byte_end":7738800,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of functions are inlined into one frame then multiple symbols will be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7738805,"byte_end":7738878,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ returned. The first symbol listed is the \"innermost function\", whereas","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7738883,"byte_end":7738957,"line_start":270,"line_end":270,"column_start":5,"column_end":79}},{"value":"/ the last symbol is the outermost (last caller).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7738962,"byte_end":7739013,"line_start":271,"line_end":271,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7739018,"byte_end":7739021,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ Note that if this frame came from an unresolved backtrace then this will","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7739026,"byte_end":7739102,"line_start":273,"line_end":273,"column_start":5,"column_end":81}},{"value":"/ return an empty list.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7739107,"byte_end":7739132,"line_start":274,"line_end":274,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7739137,"byte_end":7739140,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7739145,"byte_end":7739168,"line_start":276,"line_end":276,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7739173,"byte_end":7739176,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7739181,"byte_end":7739256,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7739261,"byte_end":7739318,"line_start":279,"line_end":279,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7739690,"byte_end":7739694,"line_start":292,"line_end":292,"column_start":12,"column_end":16},"name":"name","qualname":"<BacktraceSymbol>::name","value":"fn (&self) -> Option<SymbolName>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Symbol::name`","sig":null,"attributes":[{"value":"/ Same as `Symbol::name`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7739466,"byte_end":7739492,"line_start":286,"line_end":286,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7739497,"byte_end":7739500,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7739505,"byte_end":7739528,"line_start":288,"line_end":288,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7739533,"byte_end":7739536,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7739541,"byte_end":7739616,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7739621,"byte_end":7739678,"line_start":291,"line_end":291,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7740016,"byte_end":7740020,"line_start":302,"line_end":302,"column_start":12,"column_end":16},"name":"addr","qualname":"<BacktraceSymbol>::addr","value":"fn (&self) -> Option<*mut c_void>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Symbol::addr`","sig":null,"attributes":[{"value":"/ Same as `Symbol::addr`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7739792,"byte_end":7739818,"line_start":296,"line_end":296,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7739823,"byte_end":7739826,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7739831,"byte_end":7739854,"line_start":298,"line_end":298,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7739859,"byte_end":7739862,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7739867,"byte_end":7739942,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7739947,"byte_end":7740004,"line_start":301,"line_end":301,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7740336,"byte_end":7740344,"line_start":312,"line_end":312,"column_start":12,"column_end":20},"name":"filename","qualname":"<BacktraceSymbol>::filename","value":"fn (&self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Symbol::filename`","sig":null,"attributes":[{"value":"/ Same as `Symbol::filename`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7740108,"byte_end":7740138,"line_start":306,"line_end":306,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7740143,"byte_end":7740146,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7740151,"byte_end":7740174,"line_start":308,"line_end":308,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7740179,"byte_end":7740182,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7740187,"byte_end":7740262,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7740267,"byte_end":7740324,"line_start":311,"line_end":311,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7740653,"byte_end":7740659,"line_start":322,"line_end":322,"column_start":12,"column_end":18},"name":"lineno","qualname":"<BacktraceSymbol>::lineno","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Symbol::lineno`","sig":null,"attributes":[{"value":"/ Same as `Symbol::lineno`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7740427,"byte_end":7740455,"line_start":316,"line_end":316,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7740460,"byte_end":7740463,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7740468,"byte_end":7740491,"line_start":318,"line_end":318,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7740496,"byte_end":7740499,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7740504,"byte_end":7740579,"line_start":320,"line_end":320,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7740584,"byte_end":7740641,"line_start":321,"line_end":321,"column_start":5,"column_end":62}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":7279,"byte_end":7284,"line_start":80,"line_end":80,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":8261,"byte_end":8266,"line_start":106,"line_end":106,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\dbghelp.rs","byte_start":7715213,"byte_end":7715218,"line_start":37,"line_end":37,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\dbghelp.rs","byte_start":7715243,"byte_end":7715248,"line_start":38,"line_end":38,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\dbghelp.rs","byte_start":7715258,"byte_end":7715263,"line_start":40,"line_end":40,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":12747,"byte_end":12758,"line_start":113,"line_end":113,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":15943,"byte_end":15949,"line_start":197,"line_end":197,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":17756,"byte_end":17762,"line_start":248,"line_end":248,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":19130,"byte_end":19145,"line_start":294,"line_end":294,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":19754,"byte_end":19764,"line_start":316,"line_end":316,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":21906,"byte_end":21916,"line_start":389,"line_end":389,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":23136,"byte_end":23146,"line_start":425,"line_end":425,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\dbghelp.rs","byte_start":7724340,"byte_end":7724346,"line_start":55,"line_end":55,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":26109,"byte_end":26126,"line_start":25,"line_end":25,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":27782,"byte_end":27799,"line_start":79,"line_end":79,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":28871,"byte_end":28883,"line_start":33,"line_end":33,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":30998,"byte_end":31015,"line_start":95,"line_end":95,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":37471,"byte_end":37488,"line_start":263,"line_end":263,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7731677,"byte_end":7731682,"line_start":64,"line_end":64,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7732746,"byte_end":7732755,"line_start":99,"line_end":99,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":347},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7737716,"byte_end":7737725,"line_start":230,"line_end":230,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7737908,"byte_end":7737917,"line_start":239,"line_end":239,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7737997,"byte_end":7738011,"line_start":245,"line_end":245,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7739444,"byte_end":7739459,"line_start":285,"line_end":285,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7740733,"byte_end":7740742,"line_start":327,"line_end":327,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7742031,"byte_end":7742040,"line_start":363,"line_end":363,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7742129,"byte_end":7742143,"line_start":369,"line_end":369,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7742399,"byte_end":7742414,"line_start":378,"line_end":378,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":3302,"byte_end":3306,"line_start":110,"line_end":110,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":3832,"byte_end":3841,"line_start":131,"line_end":131,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\dbghelp.rs","byte_start":51972,"byte_end":51976,"line_start":362,"line_end":362,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":7279,"byte_end":7284,"line_start":80,"line_end":80,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\mod.rs","byte_start":8261,"byte_end":8266,"line_start":106,"line_end":106,"column_start":21,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":175},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\dbghelp.rs","byte_start":7715213,"byte_end":7715218,"line_start":37,"line_end":37,"column_start":22,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":200},"to":{"krate":1,"index":1852}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\dbghelp.rs","byte_start":7715243,"byte_end":7715248,"line_start":38,"line_end":38,"column_start":22,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":200},"to":{"krate":1,"index":1864}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\backtrace\\dbghelp.rs","byte_start":7715258,"byte_end":7715263,"line_start":40,"line_end":40,"column_start":6,"column_end":11},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":12747,"byte_end":12758,"line_start":113,"line_end":113,"column_start":10,"column_end":21},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":39},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":15943,"byte_end":15949,"line_start":197,"line_end":197,"column_start":6,"column_end":12},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":55},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":17756,"byte_end":17762,"line_start":248,"line_end":248,"column_start":21,"column_end":27},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":55},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":19130,"byte_end":19145,"line_start":294,"line_end":294,"column_start":18,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":19754,"byte_end":19764,"line_start":316,"line_end":316,"column_start":10,"column_end":20},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":66},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":21906,"byte_end":21916,"line_start":389,"line_end":389,"column_start":35,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":66},"to":{"krate":1,"index":5928}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\mod.rs","byte_start":23136,"byte_end":23146,"line_start":425,"line_end":425,"column_start":33,"column_end":43},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":66},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\symbolize\\dbghelp.rs","byte_start":7724340,"byte_end":7724346,"line_start":55,"line_end":55,"column_start":6,"column_end":12},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":26109,"byte_end":26126,"line_start":25,"line_end":25,"column_start":10,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\types.rs","byte_start":27782,"byte_end":27799,"line_start":79,"line_end":79,"column_start":27,"column_end":44},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":286},"to":{"krate":1,"index":5928}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":28871,"byte_end":28883,"line_start":33,"line_end":33,"column_start":14,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":99},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":30998,"byte_end":31015,"line_start":95,"line_end":95,"column_start":6,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\print.rs","byte_start":37471,"byte_end":37488,"line_start":263,"line_end":263,"column_start":15,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":113},"to":{"krate":1,"index":2045}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7731677,"byte_end":7731682,"line_start":64,"line_end":64,"column_start":6,"column_end":11},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7732746,"byte_end":7732755,"line_start":99,"line_end":99,"column_start":6,"column_end":15},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7737716,"byte_end":7737725,"line_start":230,"line_end":230,"column_start":36,"column_end":45},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7737908,"byte_end":7737917,"line_start":239,"line_end":239,"column_start":36,"column_end":45},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":1773}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7737997,"byte_end":7738011,"line_start":245,"line_end":245,"column_start":6,"column_end":20},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7739444,"byte_end":7739459,"line_start":285,"line_end":285,"column_start":6,"column_end":21},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7740733,"byte_end":7740742,"line_start":327,"line_end":327,"column_start":21,"column_end":30},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7742031,"byte_end":7742040,"line_start":363,"line_end":363,"column_start":18,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":1843}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7742129,"byte_end":7742143,"line_start":369,"line_end":369,"column_start":21,"column_end":35},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":385},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\capture.rs","byte_start":7742399,"byte_end":7742414,"line_start":378,"line_end":378,"column_start":21,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":399},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":3302,"byte_end":3306,"line_start":110,"line_end":110,"column_start":15,"column_end":19},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":134},"to":{"krate":1,"index":2045}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\lib.rs","byte_start":3832,"byte_end":3841,"line_start":131,"line_end":131,"column_start":19,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":145},"to":{"krate":1,"index":2045}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.47\\src\\dbghelp.rs","byte_start":51972,"byte_end":51976,"line_start":362,"line_end":362,"column_start":15,"column_end":19},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":163},"to":{"krate":1,"index":2045}}]}