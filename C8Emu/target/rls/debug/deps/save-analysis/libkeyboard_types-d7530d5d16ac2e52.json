{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0","program":"C:\\Users\\aarav_gupta\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","keyboard_types","C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"serde\"","--cfg","feature=\"unicode-segmentation\"","--cfg","feature=\"webdriver\"","-C","metadata=d7530d5d16ac2e52","-C","extra-filename=-d7530d5d16ac2e52","--out-dir","c:\\Users\\aarav_gupta\\Chip8Emu\\C8Emu\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\aarav_gupta\\Chip8Emu\\C8Emu\\target\\rls\\debug\\deps","--extern","bitflags=c:\\Users\\aarav_gupta\\Chip8Emu\\C8Emu\\target\\rls\\debug\\deps\\libbitflags-46a4fd313c39a2cd.rmeta","--extern","serde=c:\\Users\\aarav_gupta\\Chip8Emu\\C8Emu\\target\\rls\\debug\\deps\\libserde-769cf13d3ed38997.rmeta","--extern","unicode_segmentation=c:\\Users\\aarav_gupta\\Chip8Emu\\C8Emu\\target\\rls\\debug\\deps\\libunicode_segmentation-2e22bc64377c39ad.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\aarav_gupta\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\aarav_gupta\\Chip8Emu\\C8Emu\\target\\rls\\debug\\deps\\libkeyboard_types-d7530d5d16ac2e52.rmeta"},"prelude":{"crate_id":{"name":"keyboard_types","disambiguator":[16822141699204160897,2570875244918404725]},"crate_root":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src","external_crates":[{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2953284957370121905,516218847044108999]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[4886921161452974022,9452701908620647308]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3203561457090851205,4632072058037203867]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[3169376498131592849,9803978538207206865]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9199649512872691809,295485750221223515]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8443236399884245798,5222098755004489868]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6875631416372754603,10839808870381595949]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1502820548942319655,12324332090615114041]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[430706850608609257,9838809896428719127]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14503357713055743246,17731918345561731946]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[5693586899772496405,17220236988479499600]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1060170945230123807,4750192540160149325]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[5837979218880944404,14867613958503134191]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","num":14,"id":{"name":"bitflags","disambiguator":[11985080761276747392,4643061300198991506]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","num":15,"id":{"name":"serde","disambiguator":[5335570892249780292,1794745066859341770]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","num":16,"id":{"name":"serde_derive","disambiguator":[7206142584467240393,3301017610499643711]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","num":17,"id":{"name":"unicode_segmentation","disambiguator":[6766145549568100529,16572892441228458041]}}],"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":0,"byte_end":6217,"line_start":1,"line_end":212,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":258,"byte_end":262,"line_start":9,"line_end":9,"column_start":15,"column_end":19},"alias_span":null,"name":"Code","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":869},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":277,"byte_end":280,"line_start":10,"line_end":10,"column_start":14,"column_end":17},"alias_span":null,"name":"Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2076},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":300,"byte_end":308,"line_start":11,"line_end":11,"column_start":19,"column_end":27},"alias_span":null,"name":"Location","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2152},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":329,"byte_end":338,"line_start":12,"line_end":12,"column_start":20,"column_end":29},"alias_span":null,"name":"Modifiers","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":359,"byte_end":374,"line_start":13,"line_end":13,"column_start":20,"column_end":35},"alias_span":null,"name":"ShortcutMatcher","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":0,"byte_end":6217,"line_start":1,"line_end":212,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":19},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":72},{"krate":0,"index":2476},{"krate":0,"index":2539},{"krate":0,"index":2537},{"krate":0,"index":2535},{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2529},{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":2520},{"krate":0,"index":2481},{"krate":0,"index":2540},{"krate":0,"index":2621},{"krate":0,"index":2619},{"krate":0,"index":2617},{"krate":0,"index":2614},{"krate":0,"index":2615},{"krate":0,"index":2611},{"krate":0,"index":2607},{"krate":0,"index":2608},{"krate":0,"index":2601},{"krate":0,"index":2548},{"krate":0,"index":2623},{"krate":0,"index":2690},{"krate":0,"index":2688},{"krate":0,"index":2686},{"krate":0,"index":2683},{"krate":0,"index":2684},{"krate":0,"index":2680},{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2671},{"krate":0,"index":2630},{"krate":0,"index":105},{"krate":0,"index":2691},{"krate":0,"index":2755},{"krate":0,"index":2753},{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2747},{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2737},{"krate":0,"index":2694},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120}],"decl_id":null,"docs":" Contains types to define keyboard related events.","sig":null,"attributes":[{"value":"! Contains types to define keyboard related events.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":0,"byte_end":53,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":54,"byte_end":57,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The naming and conventions follow the UI Events specification","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":58,"byte_end":123,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"! but this crate should be useful for anyone implementing keyboard","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":124,"byte_end":192,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"! input in a cross-platform way.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":193,"byte_end":227,"line_start":5,"line_end":5,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":6865,"byte_end":6874,"line_start":18,"line_end":18,"column_start":5,"column_end":14},"name":"Backquote","qualname":"::code::Code::Backquote","value":"Code::Backquote","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">`~</code> on a US keyboard. This is the <code class=\"keycap\">半角/全角/漢字</code> (<span class=\"unicode\">hankaku/zenkaku/kanji</span>) key on Japanese keyboards\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">`~</code> on a US keyboard. This is the <code class=\"keycap\">半角/全角/漢字</code> (<span class=\"unicode\">hankaku/zenkaku/kanji</span>) key on Japanese keyboards","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":6668,"byte_end":6860,"line_start":17,"line_end":17,"column_start":5,"column_end":185}}]},{"kind":"TupleVariant","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":7214,"byte_end":7223,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"name":"Backslash","qualname":"::code::Code::Backslash","value":"Code::Backslash","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Used for both the US <code class=\"keycap\">\\|</code> (on the 101-key layout) and also for the key\n located between the <code class=\"keycap\">\"</code> and <code class=\"keycap\">Enter</code> keys on row C of the 102-,\n 104- and 106-key layouts.\n Labelled <code class=\"keycap\">#~</code> on a UK (102) keyboard.\n","sig":null,"attributes":[{"value":"/ Used for both the US <code class=\"keycap\">\\|</code> (on the 101-key layout) and also for the key","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":6880,"byte_end":6980,"line_start":19,"line_end":19,"column_start":5,"column_end":105}},{"value":"/ located between the <code class=\"keycap\">\"</code> and <code class=\"keycap\">Enter</code> keys on row C of the 102-,","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":6985,"byte_end":7103,"line_start":20,"line_end":20,"column_start":5,"column_end":123}},{"value":"/ 104- and 106-key layouts.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":7108,"byte_end":7137,"line_start":21,"line_end":21,"column_start":5,"column_end":34}},{"value":"/ Labelled <code class=\"keycap\">#~</code> on a UK (102) keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":7142,"byte_end":7209,"line_start":22,"line_end":22,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":7286,"byte_end":7297,"line_start":25,"line_end":25,"column_start":5,"column_end":16},"name":"BracketLeft","qualname":"::code::Code::BracketLeft","value":"Code::BracketLeft","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">[{</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">[{</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":7229,"byte_end":7281,"line_start":24,"line_end":24,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":7360,"byte_end":7372,"line_start":27,"line_end":27,"column_start":5,"column_end":17},"name":"BracketRight","qualname":"::code::Code::BracketRight","value":"Code::BracketRight","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">]}</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">]}</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":7303,"byte_end":7355,"line_start":26,"line_end":26,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":7438,"byte_end":7443,"line_start":29,"line_end":29,"column_start":5,"column_end":10},"name":"Comma","qualname":"::code::Code::Comma","value":"Code::Comma","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">,&lt;</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">,&lt;</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":7378,"byte_end":7433,"line_start":28,"line_end":28,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":7506,"byte_end":7512,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Digit0","qualname":"::code::Code::Digit0","value":"Code::Digit0","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">0)</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">0)</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":7449,"byte_end":7501,"line_start":30,"line_end":30,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":7575,"byte_end":7581,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"name":"Digit1","qualname":"::code::Code::Digit1","value":"Code::Digit1","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">1!</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">1!</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":7518,"byte_end":7570,"line_start":32,"line_end":32,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":7644,"byte_end":7650,"line_start":35,"line_end":35,"column_start":5,"column_end":11},"name":"Digit2","qualname":"::code::Code::Digit2","value":"Code::Digit2","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">2@</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">2@</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":7587,"byte_end":7639,"line_start":34,"line_end":34,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":7713,"byte_end":7719,"line_start":37,"line_end":37,"column_start":5,"column_end":11},"name":"Digit3","qualname":"::code::Code::Digit3","value":"Code::Digit3","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">3#</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">3#</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":7656,"byte_end":7708,"line_start":36,"line_end":36,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":7782,"byte_end":7788,"line_start":39,"line_end":39,"column_start":5,"column_end":11},"name":"Digit4","qualname":"::code::Code::Digit4","value":"Code::Digit4","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">4$</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">4$</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":7725,"byte_end":7777,"line_start":38,"line_end":38,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":7851,"byte_end":7857,"line_start":41,"line_end":41,"column_start":5,"column_end":11},"name":"Digit5","qualname":"::code::Code::Digit5","value":"Code::Digit5","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">5%</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">5%</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":7794,"byte_end":7846,"line_start":40,"line_end":40,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":7920,"byte_end":7926,"line_start":43,"line_end":43,"column_start":5,"column_end":11},"name":"Digit6","qualname":"::code::Code::Digit6","value":"Code::Digit6","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">6^</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">6^</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":7863,"byte_end":7915,"line_start":42,"line_end":42,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":7993,"byte_end":7999,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"name":"Digit7","qualname":"::code::Code::Digit7","value":"Code::Digit7","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">7&amp;</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">7&amp;</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":7932,"byte_end":7988,"line_start":44,"line_end":44,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":8062,"byte_end":8068,"line_start":47,"line_end":47,"column_start":5,"column_end":11},"name":"Digit8","qualname":"::code::Code::Digit8","value":"Code::Digit8","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">8*</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">8*</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":8005,"byte_end":8057,"line_start":46,"line_end":46,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":8131,"byte_end":8137,"line_start":49,"line_end":49,"column_start":5,"column_end":11},"name":"Digit9","qualname":"::code::Code::Digit9","value":"Code::Digit9","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">9(</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">9(</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":8074,"byte_end":8126,"line_start":48,"line_end":48,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":8200,"byte_end":8205,"line_start":51,"line_end":51,"column_start":5,"column_end":10},"name":"Equal","qualname":"::code::Code::Equal","value":"Code::Equal","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">=+</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">=+</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":8143,"byte_end":8195,"line_start":50,"line_end":50,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":8384,"byte_end":8397,"line_start":54,"line_end":54,"column_start":5,"column_end":18},"name":"IntlBackslash","qualname":"::code::Code::IntlBackslash","value":"Code::IntlBackslash","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Located between the left <code class=\"keycap\">Shift</code> and <code class=\"keycap\">Z</code> keys.\n Labelled <code class=\"keycap\">\\|</code> on a UK keyboard.\n","sig":null,"attributes":[{"value":"/ Located between the left <code class=\"keycap\">Shift</code> and <code class=\"keycap\">Z</code> keys.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":8211,"byte_end":8313,"line_start":52,"line_end":52,"column_start":5,"column_end":107}},{"value":"/ Labelled <code class=\"keycap\">\\|</code> on a UK keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":8318,"byte_end":8379,"line_start":53,"line_end":53,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":8619,"byte_end":8625,"line_start":57,"line_end":57,"column_start":5,"column_end":11},"name":"IntlRo","qualname":"::code::Code::IntlRo","value":"Code::IntlRo","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Located between the <code class=\"keycap\">/</code> and right <code class=\"keycap\">Shift</code> keys.\n Labelled <code class=\"keycap\">\\ろ</code> (<span class=\"unicode\">ro</span>) on a Japanese keyboard.\n","sig":null,"attributes":[{"value":"/ Located between the <code class=\"keycap\">/</code> and right <code class=\"keycap\">Shift</code> keys.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":8403,"byte_end":8506,"line_start":55,"line_end":55,"column_start":5,"column_end":108}},{"value":"/ Labelled <code class=\"keycap\">\\ろ</code> (<span class=\"unicode\">ro</span>) on a Japanese keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":8511,"byte_end":8614,"line_start":56,"line_end":56,"column_start":5,"column_end":106}}]},{"kind":"TupleVariant","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":8906,"byte_end":8913,"line_start":61,"line_end":61,"column_start":5,"column_end":12},"name":"IntlYen","qualname":"::code::Code::IntlYen","value":"Code::IntlYen","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Located between the <code class=\"keycap\">=</code> and <code class=\"keycap\">Backspace</code> keys.\n Labelled <code class=\"keycap\">¥</code> (<span class=\"unicode\">yen</span>) on a Japanese keyboard. <code class=\"keycap\">\\/</code> on a\n Russian keyboard.\n","sig":null,"attributes":[{"value":"/ Located between the <code class=\"keycap\">=</code> and <code class=\"keycap\">Backspace</code> keys.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":8631,"byte_end":8732,"line_start":58,"line_end":58,"column_start":5,"column_end":106}},{"value":"/ Labelled <code class=\"keycap\">¥</code> (<span class=\"unicode\">yen</span>) on a Japanese keyboard. <code class=\"keycap\">\\/</code> on a","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":8737,"byte_end":8875,"line_start":59,"line_end":59,"column_start":5,"column_end":142}},{"value":"/ Russian keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":8880,"byte_end":8901,"line_start":60,"line_end":60,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9060,"byte_end":9064,"line_start":64,"line_end":64,"column_start":5,"column_end":9},"name":"KeyA","qualname":"::code::Code::KeyA","value":"Code::KeyA","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">a</code> on a US keyboard.\n Labelled <code class=\"keycap\">q</code> on an AZERTY (e.g., French) keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">a</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":8919,"byte_end":8970,"line_start":62,"line_end":62,"column_start":5,"column_end":56}},{"value":"/ Labelled <code class=\"keycap\">q</code> on an AZERTY (e.g., French) keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":8975,"byte_end":9055,"line_start":63,"line_end":63,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9126,"byte_end":9130,"line_start":66,"line_end":66,"column_start":5,"column_end":9},"name":"KeyB","qualname":"::code::Code::KeyB","value":"Code::KeyB","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">b</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">b</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9070,"byte_end":9121,"line_start":65,"line_end":65,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9192,"byte_end":9196,"line_start":68,"line_end":68,"column_start":5,"column_end":9},"name":"KeyC","qualname":"::code::Code::KeyC","value":"Code::KeyC","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">c</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">c</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9136,"byte_end":9187,"line_start":67,"line_end":67,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9258,"byte_end":9262,"line_start":70,"line_end":70,"column_start":5,"column_end":9},"name":"KeyD","qualname":"::code::Code::KeyD","value":"Code::KeyD","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">d</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">d</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9202,"byte_end":9253,"line_start":69,"line_end":69,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9324,"byte_end":9328,"line_start":72,"line_end":72,"column_start":5,"column_end":9},"name":"KeyE","qualname":"::code::Code::KeyE","value":"Code::KeyE","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">e</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">e</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9268,"byte_end":9319,"line_start":71,"line_end":71,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9390,"byte_end":9394,"line_start":74,"line_end":74,"column_start":5,"column_end":9},"name":"KeyF","qualname":"::code::Code::KeyF","value":"Code::KeyF","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">f</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">f</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9334,"byte_end":9385,"line_start":73,"line_end":73,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9456,"byte_end":9460,"line_start":76,"line_end":76,"column_start":5,"column_end":9},"name":"KeyG","qualname":"::code::Code::KeyG","value":"Code::KeyG","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">g</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">g</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9400,"byte_end":9451,"line_start":75,"line_end":75,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9522,"byte_end":9526,"line_start":78,"line_end":78,"column_start":5,"column_end":9},"name":"KeyH","qualname":"::code::Code::KeyH","value":"Code::KeyH","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">h</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">h</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9466,"byte_end":9517,"line_start":77,"line_end":77,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9588,"byte_end":9592,"line_start":80,"line_end":80,"column_start":5,"column_end":9},"name":"KeyI","qualname":"::code::Code::KeyI","value":"Code::KeyI","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">i</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">i</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9532,"byte_end":9583,"line_start":79,"line_end":79,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9654,"byte_end":9658,"line_start":82,"line_end":82,"column_start":5,"column_end":9},"name":"KeyJ","qualname":"::code::Code::KeyJ","value":"Code::KeyJ","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">j</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">j</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9598,"byte_end":9649,"line_start":81,"line_end":81,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9720,"byte_end":9724,"line_start":84,"line_end":84,"column_start":5,"column_end":9},"name":"KeyK","qualname":"::code::Code::KeyK","value":"Code::KeyK","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">k</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">k</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9664,"byte_end":9715,"line_start":83,"line_end":83,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9786,"byte_end":9790,"line_start":86,"line_end":86,"column_start":5,"column_end":9},"name":"KeyL","qualname":"::code::Code::KeyL","value":"Code::KeyL","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">l</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">l</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9730,"byte_end":9781,"line_start":85,"line_end":85,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9852,"byte_end":9856,"line_start":88,"line_end":88,"column_start":5,"column_end":9},"name":"KeyM","qualname":"::code::Code::KeyM","value":"Code::KeyM","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">m</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">m</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9796,"byte_end":9847,"line_start":87,"line_end":87,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9918,"byte_end":9922,"line_start":90,"line_end":90,"column_start":5,"column_end":9},"name":"KeyN","qualname":"::code::Code::KeyN","value":"Code::KeyN","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">n</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">n</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9862,"byte_end":9913,"line_start":89,"line_end":89,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9984,"byte_end":9988,"line_start":92,"line_end":92,"column_start":5,"column_end":9},"name":"KeyO","qualname":"::code::Code::KeyO","value":"Code::KeyO","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">o</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">o</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9928,"byte_end":9979,"line_start":91,"line_end":91,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":10050,"byte_end":10054,"line_start":94,"line_end":94,"column_start":5,"column_end":9},"name":"KeyP","qualname":"::code::Code::KeyP","value":"Code::KeyP","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">p</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">p</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":9994,"byte_end":10045,"line_start":93,"line_end":93,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":10201,"byte_end":10205,"line_start":97,"line_end":97,"column_start":5,"column_end":9},"name":"KeyQ","qualname":"::code::Code::KeyQ","value":"Code::KeyQ","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">q</code> on a US keyboard.\n Labelled <code class=\"keycap\">a</code> on an AZERTY (e.g., French) keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">q</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":10060,"byte_end":10111,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"/ Labelled <code class=\"keycap\">a</code> on an AZERTY (e.g., French) keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":10116,"byte_end":10196,"line_start":96,"line_end":96,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":10267,"byte_end":10271,"line_start":99,"line_end":99,"column_start":5,"column_end":9},"name":"KeyR","qualname":"::code::Code::KeyR","value":"Code::KeyR","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">r</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">r</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":10211,"byte_end":10262,"line_start":98,"line_end":98,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":10333,"byte_end":10337,"line_start":101,"line_end":101,"column_start":5,"column_end":9},"name":"KeyS","qualname":"::code::Code::KeyS","value":"Code::KeyS","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">s</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">s</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":10277,"byte_end":10328,"line_start":100,"line_end":100,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":10399,"byte_end":10403,"line_start":103,"line_end":103,"column_start":5,"column_end":9},"name":"KeyT","qualname":"::code::Code::KeyT","value":"Code::KeyT","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">t</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">t</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":10343,"byte_end":10394,"line_start":102,"line_end":102,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":10465,"byte_end":10469,"line_start":105,"line_end":105,"column_start":5,"column_end":9},"name":"KeyU","qualname":"::code::Code::KeyU","value":"Code::KeyU","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">u</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">u</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":10409,"byte_end":10460,"line_start":104,"line_end":104,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":10531,"byte_end":10535,"line_start":107,"line_end":107,"column_start":5,"column_end":9},"name":"KeyV","qualname":"::code::Code::KeyV","value":"Code::KeyV","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">v</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">v</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":10475,"byte_end":10526,"line_start":106,"line_end":106,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":10682,"byte_end":10686,"line_start":110,"line_end":110,"column_start":5,"column_end":9},"name":"KeyW","qualname":"::code::Code::KeyW","value":"Code::KeyW","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">w</code> on a US keyboard.\n Labelled <code class=\"keycap\">z</code> on an AZERTY (e.g., French) keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">w</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":10541,"byte_end":10592,"line_start":108,"line_end":108,"column_start":5,"column_end":56}},{"value":"/ Labelled <code class=\"keycap\">z</code> on an AZERTY (e.g., French) keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":10597,"byte_end":10677,"line_start":109,"line_end":109,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":10748,"byte_end":10752,"line_start":112,"line_end":112,"column_start":5,"column_end":9},"name":"KeyX","qualname":"::code::Code::KeyX","value":"Code::KeyX","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">x</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">x</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":10692,"byte_end":10743,"line_start":111,"line_end":111,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":10898,"byte_end":10902,"line_start":115,"line_end":115,"column_start":5,"column_end":9},"name":"KeyY","qualname":"::code::Code::KeyY","value":"Code::KeyY","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">y</code> on a US keyboard.\n Labelled <code class=\"keycap\">z</code> on a QWERTZ (e.g., German) keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">y</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":10758,"byte_end":10809,"line_start":113,"line_end":113,"column_start":5,"column_end":56}},{"value":"/ Labelled <code class=\"keycap\">z</code> on a QWERTZ (e.g., German) keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":10814,"byte_end":10893,"line_start":114,"line_end":114,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":11128,"byte_end":11132,"line_start":119,"line_end":119,"column_start":5,"column_end":9},"name":"KeyZ","qualname":"::code::Code::KeyZ","value":"Code::KeyZ","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">z</code> on a US keyboard.\n Labelled <code class=\"keycap\">w</code> on an AZERTY (e.g., French) keyboard, and <code class=\"keycap\">y</code> on a\n QWERTZ (e.g., German) keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">z</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":10908,"byte_end":10959,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/ Labelled <code class=\"keycap\">w</code> on an AZERTY (e.g., French) keyboard, and <code class=\"keycap\">y</code> on a","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":10964,"byte_end":11083,"line_start":117,"line_end":117,"column_start":5,"column_end":124}},{"value":"/ QWERTZ (e.g., German) keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":11088,"byte_end":11123,"line_start":118,"line_end":118,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":11195,"byte_end":11200,"line_start":121,"line_end":121,"column_start":5,"column_end":10},"name":"Minus","qualname":"::code::Code::Minus","value":"Code::Minus","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">-_</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">-_</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":11138,"byte_end":11190,"line_start":120,"line_end":120,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":11263,"byte_end":11269,"line_start":123,"line_end":123,"column_start":5,"column_end":11},"name":"Period","qualname":"::code::Code::Period","value":"Code::Period","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">.></code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">.></code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":11206,"byte_end":11258,"line_start":122,"line_end":122,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":11332,"byte_end":11337,"line_start":125,"line_end":125,"column_start":5,"column_end":10},"name":"Quote","qualname":"::code::Code::Quote","value":"Code::Quote","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">'\"</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">'\"</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":11275,"byte_end":11327,"line_start":124,"line_end":124,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":11400,"byte_end":11409,"line_start":127,"line_end":127,"column_start":5,"column_end":14},"name":"Semicolon","qualname":"::code::Code::Semicolon","value":"Code::Semicolon","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">;:</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">;:</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":11343,"byte_end":11395,"line_start":126,"line_end":126,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":11472,"byte_end":11477,"line_start":129,"line_end":129,"column_start":5,"column_end":10},"name":"Slash","qualname":"::code::Code::Slash","value":"Code::Slash","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">/?</code> on a US keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">/?</code> on a US keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":11415,"byte_end":11467,"line_start":128,"line_end":128,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":11595,"byte_end":11602,"line_start":131,"line_end":131,"column_start":5,"column_end":12},"name":"AltLeft","qualname":"::code::Code::AltLeft","value":"Code::AltLeft","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">Alt</code>, <code class=\"keycap\">Option</code> or <code class=\"keycap\">⌥</code>.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">Alt</code>, <code class=\"keycap\">Option</code> or <code class=\"keycap\">⌥</code>.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":11483,"byte_end":11590,"line_start":130,"line_end":130,"column_start":5,"column_end":110}}]},{"kind":"TupleVariant","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":11809,"byte_end":11817,"line_start":134,"line_end":134,"column_start":5,"column_end":13},"name":"AltRight","qualname":"::code::Code::AltRight","value":"Code::AltRight","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">Alt</code>, <code class=\"keycap\">Option</code> or <code class=\"keycap\">⌥</code>.\n This is labelled <code class=\"keycap\">AltGr</code> key on many keyboard layouts.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">Alt</code>, <code class=\"keycap\">Option</code> or <code class=\"keycap\">⌥</code>.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":11608,"byte_end":11715,"line_start":132,"line_end":132,"column_start":5,"column_end":110}},{"value":"/ This is labelled <code class=\"keycap\">AltGr</code> key on many keyboard layouts.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":11720,"byte_end":11804,"line_start":133,"line_end":133,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":11977,"byte_end":11986,"line_start":137,"line_end":137,"column_start":5,"column_end":14},"name":"Backspace","qualname":"::code::Code::Backspace","value":"Code::Backspace","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">Backspace</code> or <code class=\"keycap\">⌫</code>.\n Labelled <code class=\"keycap\">Delete</code> on Apple keyboards.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">Backspace</code> or <code class=\"keycap\">⌫</code>.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":11823,"byte_end":11900,"line_start":135,"line_end":135,"column_start":5,"column_end":80}},{"value":"/ Labelled <code class=\"keycap\">Delete</code> on Apple keyboards.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":11905,"byte_end":11972,"line_start":136,"line_end":136,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":12072,"byte_end":12080,"line_start":139,"line_end":139,"column_start":5,"column_end":13},"name":"CapsLock","qualname":"::code::Code::CapsLock","value":"Code::CapsLock","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">CapsLock</code> or <code class=\"keycap\">⇪</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">CapsLock</code> or <code class=\"keycap\">⇪</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":11992,"byte_end":12067,"line_start":138,"line_end":138,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":12263,"byte_end":12274,"line_start":141,"line_end":141,"column_start":5,"column_end":16},"name":"ContextMenu","qualname":"::code::Code::ContextMenu","value":"Code::ContextMenu","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" The application context menu key, which is typically found between the right <code class=\"keycap\">Meta</code> key and the right <code class=\"keycap\">Control</code> key.\n","sig":null,"attributes":[{"value":"/ The application context menu key, which is typically found between the right <code class=\"keycap\">Meta</code> key and the right <code class=\"keycap\">Control</code> key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":12086,"byte_end":12258,"line_start":140,"line_end":140,"column_start":5,"column_end":177}}]},{"kind":"TupleVariant","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":12359,"byte_end":12370,"line_start":143,"line_end":143,"column_start":5,"column_end":16},"name":"ControlLeft","qualname":"::code::Code::ControlLeft","value":"Code::ControlLeft","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">Control</code> or <code class=\"keycap\">⌃</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">Control</code> or <code class=\"keycap\">⌃</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":12280,"byte_end":12354,"line_start":142,"line_end":142,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":12455,"byte_end":12467,"line_start":145,"line_end":145,"column_start":5,"column_end":17},"name":"ControlRight","qualname":"::code::Code::ControlRight","value":"Code::ControlRight","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">Control</code> or <code class=\"keycap\">⌃</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">Control</code> or <code class=\"keycap\">⌃</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":12376,"byte_end":12450,"line_start":144,"line_end":144,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":12615,"byte_end":12620,"line_start":147,"line_end":147,"column_start":5,"column_end":10},"name":"Enter","qualname":"::code::Code::Enter","value":"Code::Enter","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">Enter</code> or <code class=\"keycap\">↵</code>. Labelled <code class=\"keycap\">Return</code> on Apple keyboards.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">Enter</code> or <code class=\"keycap\">↵</code>. Labelled <code class=\"keycap\">Return</code> on Apple keyboards.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":12473,"byte_end":12610,"line_start":146,"line_end":146,"column_start":5,"column_end":140}}]},{"kind":"TupleVariant","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":12740,"byte_end":12748,"line_start":149,"line_end":149,"column_start":5,"column_end":13},"name":"MetaLeft","qualname":"::code::Code::MetaLeft","value":"Code::MetaLeft","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" The Windows, <code class=\"keycap\">⌘</code>, <code class=\"keycap\">Command</code> or other OS symbol key.\n","sig":null,"attributes":[{"value":"/ The Windows, <code class=\"keycap\">⌘</code>, <code class=\"keycap\">Command</code> or other OS symbol key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":12626,"byte_end":12735,"line_start":148,"line_end":148,"column_start":5,"column_end":112}}]},{"kind":"TupleVariant","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":12868,"byte_end":12877,"line_start":151,"line_end":151,"column_start":5,"column_end":14},"name":"MetaRight","qualname":"::code::Code::MetaRight","value":"Code::MetaRight","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" The Windows, <code class=\"keycap\">⌘</code>, <code class=\"keycap\">Command</code> or other OS symbol key.\n","sig":null,"attributes":[{"value":"/ The Windows, <code class=\"keycap\">⌘</code>, <code class=\"keycap\">Command</code> or other OS symbol key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":12754,"byte_end":12863,"line_start":150,"line_end":150,"column_start":5,"column_end":112}}]},{"kind":"TupleVariant","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":12960,"byte_end":12969,"line_start":153,"line_end":153,"column_start":5,"column_end":14},"name":"ShiftLeft","qualname":"::code::Code::ShiftLeft","value":"Code::ShiftLeft","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">Shift</code> or <code class=\"keycap\">⇧</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">Shift</code> or <code class=\"keycap\">⇧</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":12883,"byte_end":12955,"line_start":152,"line_end":152,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":13052,"byte_end":13062,"line_start":155,"line_end":155,"column_start":5,"column_end":15},"name":"ShiftRight","qualname":"::code::Code::ShiftRight","value":"Code::ShiftRight","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">Shift</code> or <code class=\"keycap\">⇧</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">Shift</code> or <code class=\"keycap\">⇧</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":12975,"byte_end":13047,"line_start":154,"line_end":154,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":13115,"byte_end":13120,"line_start":157,"line_end":157,"column_start":5,"column_end":10},"name":"Space","qualname":"::code::Code::Space","value":"Code::Space","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\"> </code> (space)\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\"> </code> (space)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":13068,"byte_end":13110,"line_start":156,"line_end":156,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":13201,"byte_end":13204,"line_start":159,"line_end":159,"column_start":5,"column_end":8},"name":"Tab","qualname":"::code::Code::Tab","value":"Code::Tab","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">Tab</code> or <code class=\"keycap\">⇥</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">Tab</code> or <code class=\"keycap\">⇥</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":13126,"byte_end":13196,"line_start":158,"line_end":158,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":13301,"byte_end":13308,"line_start":161,"line_end":161,"column_start":5,"column_end":12},"name":"Convert","qualname":"::code::Code::Convert","value":"Code::Convert","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Japanese: <code class=\"keycap\">変換</code> (<span class=\"unicode\">henkan</span>)\n","sig":null,"attributes":[{"value":"/ Japanese: <code class=\"keycap\">変換</code> (<span class=\"unicode\">henkan</span>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":13210,"byte_end":13296,"line_start":160,"line_end":160,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":13455,"byte_end":13463,"line_start":163,"line_end":163,"column_start":5,"column_end":13},"name":"KanaMode","qualname":"::code::Code::KanaMode","value":"Code::KanaMode","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Japanese: <code class=\"keycap\">カタカナ/ひらがな/ローマ字</code> (<span class=\"unicode\">katakana/hiragana/romaji</span>)\n","sig":null,"attributes":[{"value":"/ Japanese: <code class=\"keycap\">カタカナ/ひらがな/ローマ字</code> (<span class=\"unicode\">katakana/hiragana/romaji</span>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":13314,"byte_end":13450,"line_start":162,"line_end":162,"column_start":5,"column_end":117}}]},{"kind":"TupleVariant","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":13672,"byte_end":13677,"line_start":165,"line_end":165,"column_start":5,"column_end":10},"name":"Lang1","qualname":"::code::Code::Lang1","value":"Code::Lang1","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Korean: HangulMode <code class=\"keycap\">한/영</code> (<span class=\"unicode\">han/yeong</span>)<br>Japanese (Mac keyboard): <code class=\"keycap\">かな</code> (<span class=\"unicode\">kana</span>)\n","sig":null,"attributes":[{"value":"/ Korean: HangulMode <code class=\"keycap\">한/영</code> (<span class=\"unicode\">han/yeong</span>)<br>Japanese (Mac keyboard): <code class=\"keycap\">かな</code> (<span class=\"unicode\">kana</span>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":13469,"byte_end":13667,"line_start":164,"line_end":164,"column_start":5,"column_end":195}}]},{"kind":"TupleVariant","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":13876,"byte_end":13881,"line_start":167,"line_end":167,"column_start":5,"column_end":10},"name":"Lang2","qualname":"::code::Code::Lang2","value":"Code::Lang2","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Korean: Hanja <code class=\"keycap\">한자</code> (<span class=\"unicode\">hanja</span>)<br>Japanese (Mac keyboard): <code class=\"keycap\">英数</code> (<span class=\"unicode\">eisu</span>)\n","sig":null,"attributes":[{"value":"/ Korean: Hanja <code class=\"keycap\">한자</code> (<span class=\"unicode\">hanja</span>)<br>Japanese (Mac keyboard): <code class=\"keycap\">英数</code> (<span class=\"unicode\">eisu</span>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":13683,"byte_end":13871,"line_start":166,"line_end":166,"column_start":5,"column_end":185}}]},{"kind":"TupleVariant","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":13941,"byte_end":13946,"line_start":169,"line_end":169,"column_start":5,"column_end":10},"name":"Lang3","qualname":"::code::Code::Lang3","value":"Code::Lang3","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Japanese (word-processing keyboard): Katakana\n","sig":null,"attributes":[{"value":"/ Japanese (word-processing keyboard): Katakana","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":13887,"byte_end":13936,"line_start":168,"line_end":168,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":14006,"byte_end":14011,"line_start":171,"line_end":171,"column_start":5,"column_end":10},"name":"Lang4","qualname":"::code::Code::Lang4","value":"Code::Lang4","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Japanese (word-processing keyboard): Hiragana\n","sig":null,"attributes":[{"value":"/ Japanese (word-processing keyboard): Hiragana","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":13952,"byte_end":14001,"line_start":170,"line_end":170,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":14078,"byte_end":14083,"line_start":173,"line_end":173,"column_start":5,"column_end":10},"name":"Lang5","qualname":"::code::Code::Lang5","value":"Code::Lang5","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Japanese (word-processing keyboard): Zenkaku/Hankaku\n","sig":null,"attributes":[{"value":"/ Japanese (word-processing keyboard): Zenkaku/Hankaku","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":14017,"byte_end":14073,"line_start":172,"line_end":172,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":14185,"byte_end":14195,"line_start":175,"line_end":175,"column_start":5,"column_end":15},"name":"NonConvert","qualname":"::code::Code::NonConvert","value":"Code::NonConvert","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Japanese: <code class=\"keycap\">無変換</code> (<span class=\"unicode\">muhenkan</span>)\n","sig":null,"attributes":[{"value":"/ Japanese: <code class=\"keycap\">無変換</code> (<span class=\"unicode\">muhenkan</span>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":14089,"byte_end":14180,"line_start":174,"line_end":174,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":14457,"byte_end":14463,"line_start":179,"line_end":179,"column_start":5,"column_end":11},"name":"Delete","qualname":"::code::Code::Delete","value":"Code::Delete","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">⌦</code>. The forward delete key.\n Note that on Apple keyboards, the key labelled <code class=\"keycap\">Delete</code> on the main part of\n the keyboard should be encoded as <code class=\"code\">\"Backspace\"</code>.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">⌦</code>. The forward delete key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":14201,"byte_end":14261,"line_start":176,"line_end":176,"column_start":5,"column_end":63}},{"value":"/ Note that on Apple keyboards, the key labelled <code class=\"keycap\">Delete</code> on the main part of","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":14266,"byte_end":14371,"line_start":177,"line_end":177,"column_start":5,"column_end":110}},{"value":"/ the keyboard should be encoded as <code class=\"code\">\"Backspace\"</code>.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":14376,"byte_end":14452,"line_start":178,"line_end":178,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":14583,"byte_end":14586,"line_start":181,"line_end":181,"column_start":5,"column_end":8},"name":"End","qualname":"::code::Code::End","value":"Code::End","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">Page Down</code>, <code class=\"keycap\">End</code> or <code class=\"keycap\">↘</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">Page Down</code>, <code class=\"keycap\">End</code> or <code class=\"keycap\">↘</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":14469,"byte_end":14578,"line_start":180,"line_end":180,"column_start":5,"column_end":112}}]},{"kind":"TupleVariant","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":14672,"byte_end":14676,"line_start":183,"line_end":183,"column_start":5,"column_end":9},"name":"Help","qualname":"::code::Code::Help","value":"Code::Help","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">Help</code>. Not present on standard PC keyboards.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">Help</code>. Not present on standard PC keyboards.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":14592,"byte_end":14667,"line_start":182,"line_end":182,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":14758,"byte_end":14762,"line_start":185,"line_end":185,"column_start":5,"column_end":9},"name":"Home","qualname":"::code::Code::Home","value":"Code::Home","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">Home</code> or <code class=\"keycap\">↖</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">Home</code> or <code class=\"keycap\">↖</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":14682,"byte_end":14753,"line_start":184,"line_end":184,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":14879,"byte_end":14885,"line_start":187,"line_end":187,"column_start":5,"column_end":11},"name":"Insert","qualname":"::code::Code::Insert","value":"Code::Insert","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">Insert</code> or <code class=\"keycap\">Ins</code>. Not present on Apple keyboards.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">Insert</code> or <code class=\"keycap\">Ins</code>. Not present on Apple keyboards.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":14768,"byte_end":14874,"line_start":186,"line_end":186,"column_start":5,"column_end":111}}]},{"kind":"TupleVariant","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":15006,"byte_end":15014,"line_start":189,"line_end":189,"column_start":5,"column_end":13},"name":"PageDown","qualname":"::code::Code::PageDown","value":"Code::PageDown","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">Page Down</code>, <code class=\"keycap\">PgDn</code> or <code class=\"keycap\">⇟</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">Page Down</code>, <code class=\"keycap\">PgDn</code> or <code class=\"keycap\">⇟</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":14891,"byte_end":15001,"line_start":188,"line_end":188,"column_start":5,"column_end":113}}]},{"kind":"TupleVariant","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":15133,"byte_end":15139,"line_start":191,"line_end":191,"column_start":5,"column_end":11},"name":"PageUp","qualname":"::code::Code::PageUp","value":"Code::PageUp","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">Page Up</code>, <code class=\"keycap\">PgUp</code> or <code class=\"keycap\">⇞</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">Page Up</code>, <code class=\"keycap\">PgUp</code> or <code class=\"keycap\">⇞</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":15020,"byte_end":15128,"line_start":190,"line_end":190,"column_start":5,"column_end":111}}]},{"kind":"TupleVariant","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":15185,"byte_end":15194,"line_start":193,"line_end":193,"column_start":5,"column_end":14},"name":"ArrowDown","qualname":"::code::Code::ArrowDown","value":"Code::ArrowDown","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">↓</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">↓</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":15145,"byte_end":15180,"line_start":192,"line_end":192,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":15240,"byte_end":15249,"line_start":195,"line_end":195,"column_start":5,"column_end":14},"name":"ArrowLeft","qualname":"::code::Code::ArrowLeft","value":"Code::ArrowLeft","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">←</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">←</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":15200,"byte_end":15235,"line_start":194,"line_end":194,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":15295,"byte_end":15305,"line_start":197,"line_end":197,"column_start":5,"column_end":15},"name":"ArrowRight","qualname":"::code::Code::ArrowRight","value":"Code::ArrowRight","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">→</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">→</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":15255,"byte_end":15290,"line_start":196,"line_end":196,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":15351,"byte_end":15358,"line_start":199,"line_end":199,"column_start":5,"column_end":12},"name":"ArrowUp","qualname":"::code::Code::ArrowUp","value":"Code::ArrowUp","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">↑</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">↑</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":15311,"byte_end":15346,"line_start":198,"line_end":198,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":15498,"byte_end":15505,"line_start":201,"line_end":201,"column_start":5,"column_end":12},"name":"NumLock","qualname":"::code::Code::NumLock","value":"Code::NumLock","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" On the Mac, the <code class=\"code\">\"NumLock\"</code> code should be used for the numpad <code class=\"keycap\">Clear</code> key.\n","sig":null,"attributes":[{"value":"/ On the Mac, the <code class=\"code\">\"NumLock\"</code> code should be used for the numpad <code class=\"keycap\">Clear</code> key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":15364,"byte_end":15493,"line_start":200,"line_end":200,"column_start":5,"column_end":134}}]},{"kind":"TupleVariant","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":15629,"byte_end":15636,"line_start":203,"line_end":203,"column_start":5,"column_end":12},"name":"Numpad0","qualname":"::code::Code::Numpad0","value":"Code::Numpad0","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">0 Ins</code> on a keyboard<br><code class=\"keycap\">0</code> on a phone or remote control\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">0 Ins</code> on a keyboard<br><code class=\"keycap\">0</code> on a phone or remote control","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":15511,"byte_end":15624,"line_start":202,"line_end":202,"column_start":5,"column_end":118}}]},{"kind":"TupleVariant","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":15804,"byte_end":15811,"line_start":206,"line_end":206,"column_start":5,"column_end":12},"name":"Numpad1","qualname":"::code::Code::Numpad1","value":"Code::Numpad1","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">1 End</code> on a keyboard<br><code class=\"keycap\">1</code> or <code class=\"keycap\">1 QZ</code> on a phone or\n remote control\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">1 End</code> on a keyboard<br><code class=\"keycap\">1</code> or <code class=\"keycap\">1 QZ</code> on a phone or","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":15642,"byte_end":15776,"line_start":204,"line_end":204,"column_start":5,"column_end":139}},{"value":"/ remote control","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":15781,"byte_end":15799,"line_start":205,"line_end":205,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":15939,"byte_end":15946,"line_start":208,"line_end":208,"column_start":5,"column_end":12},"name":"Numpad2","qualname":"::code::Code::Numpad2","value":"Code::Numpad2","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">2 ↓</code> on a keyboard<br><code class=\"keycap\">2 ABC</code> on a phone or remote control\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">2 ↓</code> on a keyboard<br><code class=\"keycap\">2 ABC</code> on a phone or remote control","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":15817,"byte_end":15934,"line_start":207,"line_end":207,"column_start":5,"column_end":120}}]},{"kind":"TupleVariant","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":16075,"byte_end":16082,"line_start":210,"line_end":210,"column_start":5,"column_end":12},"name":"Numpad3","qualname":"::code::Code::Numpad3","value":"Code::Numpad3","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">3 PgDn</code> on a keyboard<br><code class=\"keycap\">3 DEF</code> on a phone or remote control\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">3 PgDn</code> on a keyboard<br><code class=\"keycap\">3 DEF</code> on a phone or remote control","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":15952,"byte_end":16070,"line_start":209,"line_end":209,"column_start":5,"column_end":123}}]},{"kind":"TupleVariant","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":16210,"byte_end":16217,"line_start":212,"line_end":212,"column_start":5,"column_end":12},"name":"Numpad4","qualname":"::code::Code::Numpad4","value":"Code::Numpad4","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">4 ←</code> on a keyboard<br><code class=\"keycap\">4 GHI</code> on a phone or remote control\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">4 ←</code> on a keyboard<br><code class=\"keycap\">4 GHI</code> on a phone or remote control","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":16088,"byte_end":16205,"line_start":211,"line_end":211,"column_start":5,"column_end":120}}]},{"kind":"TupleVariant","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":16341,"byte_end":16348,"line_start":214,"line_end":214,"column_start":5,"column_end":12},"name":"Numpad5","qualname":"::code::Code::Numpad5","value":"Code::Numpad5","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">5</code> on a keyboard<br><code class=\"keycap\">5 JKL</code> on a phone or remote control\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">5</code> on a keyboard<br><code class=\"keycap\">5 JKL</code> on a phone or remote control","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":16223,"byte_end":16336,"line_start":213,"line_end":213,"column_start":5,"column_end":118}}]},{"kind":"TupleVariant","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":16476,"byte_end":16483,"line_start":216,"line_end":216,"column_start":5,"column_end":12},"name":"Numpad6","qualname":"::code::Code::Numpad6","value":"Code::Numpad6","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">6 →</code> on a keyboard<br><code class=\"keycap\">6 MNO</code> on a phone or remote control\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">6 →</code> on a keyboard<br><code class=\"keycap\">6 MNO</code> on a phone or remote control","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":16354,"byte_end":16471,"line_start":215,"line_end":215,"column_start":5,"column_end":120}}]},{"kind":"TupleVariant","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":16658,"byte_end":16665,"line_start":219,"line_end":219,"column_start":5,"column_end":12},"name":"Numpad7","qualname":"::code::Code::Numpad7","value":"Code::Numpad7","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">7 Home</code> on a keyboard<br><code class=\"keycap\">7 PQRS</code> or <code class=\"keycap\">7 PRS</code> on a phone\n or remote control\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">7 Home</code> on a keyboard<br><code class=\"keycap\">7 PQRS</code> or <code class=\"keycap\">7 PRS</code> on a phone","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":16489,"byte_end":16627,"line_start":217,"line_end":217,"column_start":5,"column_end":143}},{"value":"/ or remote control","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":16632,"byte_end":16653,"line_start":218,"line_end":218,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":16793,"byte_end":16800,"line_start":221,"line_end":221,"column_start":5,"column_end":12},"name":"Numpad8","qualname":"::code::Code::Numpad8","value":"Code::Numpad8","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">8 ↑</code> on a keyboard<br><code class=\"keycap\">8 TUV</code> on a phone or remote control\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">8 ↑</code> on a keyboard<br><code class=\"keycap\">8 TUV</code> on a phone or remote control","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":16671,"byte_end":16788,"line_start":220,"line_end":220,"column_start":5,"column_end":120}}]},{"kind":"TupleVariant","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":16975,"byte_end":16982,"line_start":224,"line_end":224,"column_start":5,"column_end":12},"name":"Numpad9","qualname":"::code::Code::Numpad9","value":"Code::Numpad9","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">9 PgUp</code> on a keyboard<br><code class=\"keycap\">9 WXYZ</code> or <code class=\"keycap\">9 WXY</code> on a phone\n or remote control\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">9 PgUp</code> on a keyboard<br><code class=\"keycap\">9 WXYZ</code> or <code class=\"keycap\">9 WXY</code> on a phone","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":16806,"byte_end":16944,"line_start":222,"line_end":222,"column_start":5,"column_end":143}},{"value":"/ or remote control","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":16949,"byte_end":16970,"line_start":223,"line_end":223,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":17026,"byte_end":17035,"line_start":226,"line_end":226,"column_start":5,"column_end":14},"name":"NumpadAdd","qualname":"::code::Code::NumpadAdd","value":"Code::NumpadAdd","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">+</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">+</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":16988,"byte_end":17021,"line_start":225,"line_end":225,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":312},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":17090,"byte_end":17105,"line_start":228,"line_end":228,"column_start":5,"column_end":20},"name":"NumpadBackspace","qualname":"::code::Code::NumpadBackspace","value":"Code::NumpadBackspace","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Found on the Microsoft Natural Keyboard.\n","sig":null,"attributes":[{"value":"/ Found on the Microsoft Natural Keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":17041,"byte_end":17085,"line_start":227,"line_end":227,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":17473,"byte_end":17484,"line_start":231,"line_end":231,"column_start":5,"column_end":16},"name":"NumpadClear","qualname":"::code::Code::NumpadClear","value":"Code::NumpadClear","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">C</code> or <code class=\"keycap\">AC</code> (All Clear). Also for use with numpads that have a <code class=\"keycap\">Clear</code> key that is separate from the <code class=\"keycap\">NumLock</code> key. On the Mac, the numpad <code class=\"keycap\">Clear</code> key should always\n be encoded as <code class=\"code\">\"NumLock\"</code>.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">C</code> or <code class=\"keycap\">AC</code> (All Clear). Also for use with numpads that have a <code class=\"keycap\">Clear</code> key that is separate from the <code class=\"keycap\">NumLock</code> key. On the Mac, the numpad <code class=\"keycap\">Clear</code> key should always","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":17111,"byte_end":17409,"line_start":229,"line_end":229,"column_start":5,"column_end":303}},{"value":"/ be encoded as <code class=\"code\">\"NumLock\"</code>.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":17414,"byte_end":17468,"line_start":230,"line_end":230,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":17543,"byte_end":17559,"line_start":233,"line_end":233,"column_start":5,"column_end":21},"name":"NumpadClearEntry","qualname":"::code::Code::NumpadClearEntry","value":"Code::NumpadClearEntry","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">CE</code> (Clear Entry)\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">CE</code> (Clear Entry)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":17490,"byte_end":17538,"line_start":232,"line_end":232,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":17756,"byte_end":17767,"line_start":236,"line_end":236,"column_start":5,"column_end":16},"name":"NumpadComma","qualname":"::code::Code::NumpadComma","value":"Code::NumpadComma","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">,</code> (thousands separator). For locales where the thousands separator\n is a \".\" (e.g., Brazil), this key may generate a <code class=\"keycap\">.</code>.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">,</code> (thousands separator). For locales where the thousands separator","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":17565,"byte_end":17663,"line_start":234,"line_end":234,"column_start":5,"column_end":103}},{"value":"/ is a \".\" (e.g., Brazil), this key may generate a <code class=\"keycap\">.</code>.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":17668,"byte_end":17751,"line_start":235,"line_end":235,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":17942,"byte_end":17955,"line_start":239,"line_end":239,"column_start":5,"column_end":18},"name":"NumpadDecimal","qualname":"::code::Code::NumpadDecimal","value":"Code::NumpadDecimal","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">. Del</code>. For locales where the decimal separator is \",\" (e.g.,\n Brazil), this key may generate a <code class=\"keycap\">,</code>.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">. Del</code>. For locales where the decimal separator is \",\" (e.g.,","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":17773,"byte_end":17865,"line_start":237,"line_end":237,"column_start":5,"column_end":97}},{"value":"/ Brazil), this key may generate a <code class=\"keycap\">,</code>.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":17870,"byte_end":17937,"line_start":238,"line_end":238,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":322},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":17999,"byte_end":18011,"line_start":241,"line_end":241,"column_start":5,"column_end":17},"name":"NumpadDivide","qualname":"::code::Code::NumpadDivide","value":"Code::NumpadDivide","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">/</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">/</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":17961,"byte_end":17994,"line_start":240,"line_end":240,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":18017,"byte_end":18028,"line_start":242,"line_end":242,"column_start":5,"column_end":16},"name":"NumpadEnter","qualname":"::code::Code::NumpadEnter","value":"Code::NumpadEnter","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":18072,"byte_end":18083,"line_start":244,"line_end":244,"column_start":5,"column_end":16},"name":"NumpadEqual","qualname":"::code::Code::NumpadEqual","value":"Code::NumpadEqual","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">=</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">=</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":18034,"byte_end":18067,"line_start":243,"line_end":243,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":18303,"byte_end":18313,"line_start":247,"line_end":247,"column_start":5,"column_end":15},"name":"NumpadHash","qualname":"::code::Code::NumpadHash","value":"Code::NumpadHash","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">#</code> on a phone or remote control device. This key is typically found\n below the <code class=\"keycap\">9</code> key and to the right of the <code class=\"keycap\">0</code> key.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">#</code> on a phone or remote control device. This key is typically found","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":18089,"byte_end":18187,"line_start":245,"line_end":245,"column_start":5,"column_end":103}},{"value":"/ below the <code class=\"keycap\">9</code> key and to the right of the <code class=\"keycap\">0</code> key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":18192,"byte_end":18298,"line_start":246,"line_end":246,"column_start":5,"column_end":111}}]},{"kind":"TupleVariant","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":18407,"byte_end":18422,"line_start":249,"line_end":249,"column_start":5,"column_end":20},"name":"NumpadMemoryAdd","qualname":"::code::Code::NumpadMemoryAdd","value":"Code::NumpadMemoryAdd","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">M+</code> Add current entry to the value stored in memory.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">M+</code> Add current entry to the value stored in memory.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":18319,"byte_end":18402,"line_start":248,"line_end":248,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":18501,"byte_end":18518,"line_start":251,"line_end":251,"column_start":5,"column_end":22},"name":"NumpadMemoryClear","qualname":"::code::Code::NumpadMemoryClear","value":"Code::NumpadMemoryClear","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">MC</code> Clear the value stored in memory.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">MC</code> Clear the value stored in memory.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":18428,"byte_end":18496,"line_start":250,"line_end":250,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":18622,"byte_end":18640,"line_start":253,"line_end":253,"column_start":5,"column_end":23},"name":"NumpadMemoryRecall","qualname":"::code::Code::NumpadMemoryRecall","value":"Code::NumpadMemoryRecall","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">MR</code> Replace the current entry with the value stored in memory.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">MR</code> Replace the current entry with the value stored in memory.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":18524,"byte_end":18617,"line_start":252,"line_end":252,"column_start":5,"column_end":98}}]},{"kind":"TupleVariant","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":18744,"byte_end":18761,"line_start":255,"line_end":255,"column_start":5,"column_end":22},"name":"NumpadMemoryStore","qualname":"::code::Code::NumpadMemoryStore","value":"Code::NumpadMemoryStore","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">MS</code> Replace the value stored in memory with the current entry.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">MS</code> Replace the value stored in memory with the current entry.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":18646,"byte_end":18739,"line_start":254,"line_end":254,"column_start":5,"column_end":98}}]},{"kind":"TupleVariant","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":18862,"byte_end":18882,"line_start":257,"line_end":257,"column_start":5,"column_end":25},"name":"NumpadMemorySubtract","qualname":"::code::Code::NumpadMemorySubtract","value":"Code::NumpadMemorySubtract","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">M-</code> Subtract current entry from the value stored in memory.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">M-</code> Subtract current entry from the value stored in memory.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":18767,"byte_end":18857,"line_start":256,"line_end":256,"column_start":5,"column_end":95}}]},{"kind":"TupleVariant","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":19255,"byte_end":19269,"line_start":260,"line_end":260,"column_start":5,"column_end":19},"name":"NumpadMultiply","qualname":"::code::Code::NumpadMultiply","value":"Code::NumpadMultiply","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">*</code> on a keyboard. For use with numpads that provide mathematical\n operations (<code class=\"keycap\">+</code>, <code class=\"keycap\">-</code>, <code class=\"keycap\">*</code> and <code class=\"keycap\">/</code>).<br>Use <code class=\"code\">\"NumpadStar\"</code> for the <code class=\"keycap\">*</code> key on phones and remote controls.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">*</code> on a keyboard. For use with numpads that provide mathematical","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":18888,"byte_end":18983,"line_start":258,"line_end":258,"column_start":5,"column_end":100}},{"value":"/ operations (<code class=\"keycap\">+</code>, <code class=\"keycap\">-</code>, <code class=\"keycap\">*</code> and <code class=\"keycap\">/</code>).<br>Use <code class=\"code\">\"NumpadStar\"</code> for the <code class=\"keycap\">*</code> key on phones and remote controls.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":18988,"byte_end":19250,"line_start":259,"line_end":259,"column_start":5,"column_end":267}}]},{"kind":"TupleVariant","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":19354,"byte_end":19369,"line_start":262,"line_end":262,"column_start":5,"column_end":20},"name":"NumpadParenLeft","qualname":"::code::Code::NumpadParenLeft","value":"Code::NumpadParenLeft","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">(</code> Found on the Microsoft Natural Keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">(</code> Found on the Microsoft Natural Keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":19275,"byte_end":19349,"line_start":261,"line_end":261,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":19454,"byte_end":19470,"line_start":264,"line_end":264,"column_start":5,"column_end":21},"name":"NumpadParenRight","qualname":"::code::Code::NumpadParenRight","value":"Code::NumpadParenRight","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">)</code> Found on the Microsoft Natural Keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">)</code> Found on the Microsoft Natural Keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":19375,"byte_end":19449,"line_start":263,"line_end":263,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":19817,"byte_end":19827,"line_start":269,"line_end":269,"column_start":5,"column_end":15},"name":"NumpadStar","qualname":"::code::Code::NumpadStar","value":"Code::NumpadStar","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">*</code> on a phone or remote control device.\n This key is typically found below the <code class=\"keycap\">7</code> key and to the left of\n the <code class=\"keycap\">0</code> key.<br>Use <code class=\"code\">\"NumpadMultiply\"</code> for the <code class=\"keycap\">*</code> key on\n numeric keypads.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">*</code> on a phone or remote control device.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":19476,"byte_end":19546,"line_start":265,"line_end":265,"column_start":5,"column_end":75}},{"value":"/ This key is typically found below the <code class=\"keycap\">7</code> key and to the left of","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":19551,"byte_end":19645,"line_start":266,"line_end":266,"column_start":5,"column_end":99}},{"value":"/ the <code class=\"keycap\">0</code> key.<br>Use <code class=\"code\">\"NumpadMultiply\"</code> for the <code class=\"keycap\">*</code> key on","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":19650,"byte_end":19787,"line_start":267,"line_end":267,"column_start":5,"column_end":142}},{"value":"/ numeric keypads.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":19792,"byte_end":19812,"line_start":268,"line_end":268,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":19871,"byte_end":19885,"line_start":271,"line_end":271,"column_start":5,"column_end":19},"name":"NumpadSubtract","qualname":"::code::Code::NumpadSubtract","value":"Code::NumpadSubtract","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">-</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">-</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":19833,"byte_end":19866,"line_start":270,"line_end":270,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":19966,"byte_end":19972,"line_start":273,"line_end":273,"column_start":5,"column_end":11},"name":"Escape","qualname":"::code::Code::Escape","value":"Code::Escape","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">Esc</code> or <code class=\"keycap\">⎋</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">Esc</code> or <code class=\"keycap\">⎋</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":19891,"byte_end":19961,"line_start":272,"line_end":272,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20017,"byte_end":20019,"line_start":275,"line_end":275,"column_start":5,"column_end":7},"name":"F1","qualname":"::code::Code::F1","value":"Code::F1","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">F1</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">F1</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":19978,"byte_end":20012,"line_start":274,"line_end":274,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20064,"byte_end":20066,"line_start":277,"line_end":277,"column_start":5,"column_end":7},"name":"F2","qualname":"::code::Code::F2","value":"Code::F2","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">F2</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">F2</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20025,"byte_end":20059,"line_start":276,"line_end":276,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20111,"byte_end":20113,"line_start":279,"line_end":279,"column_start":5,"column_end":7},"name":"F3","qualname":"::code::Code::F3","value":"Code::F3","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">F3</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">F3</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20072,"byte_end":20106,"line_start":278,"line_end":278,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20158,"byte_end":20160,"line_start":281,"line_end":281,"column_start":5,"column_end":7},"name":"F4","qualname":"::code::Code::F4","value":"Code::F4","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">F4</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">F4</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20119,"byte_end":20153,"line_start":280,"line_end":280,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20205,"byte_end":20207,"line_start":283,"line_end":283,"column_start":5,"column_end":7},"name":"F5","qualname":"::code::Code::F5","value":"Code::F5","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">F5</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">F5</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20166,"byte_end":20200,"line_start":282,"line_end":282,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20252,"byte_end":20254,"line_start":285,"line_end":285,"column_start":5,"column_end":7},"name":"F6","qualname":"::code::Code::F6","value":"Code::F6","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">F6</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">F6</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20213,"byte_end":20247,"line_start":284,"line_end":284,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20299,"byte_end":20301,"line_start":287,"line_end":287,"column_start":5,"column_end":7},"name":"F7","qualname":"::code::Code::F7","value":"Code::F7","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">F7</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">F7</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20260,"byte_end":20294,"line_start":286,"line_end":286,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20346,"byte_end":20348,"line_start":289,"line_end":289,"column_start":5,"column_end":7},"name":"F8","qualname":"::code::Code::F8","value":"Code::F8","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">F8</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">F8</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20307,"byte_end":20341,"line_start":288,"line_end":288,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20393,"byte_end":20395,"line_start":291,"line_end":291,"column_start":5,"column_end":7},"name":"F9","qualname":"::code::Code::F9","value":"Code::F9","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">F9</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">F9</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20354,"byte_end":20388,"line_start":290,"line_end":290,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20441,"byte_end":20444,"line_start":293,"line_end":293,"column_start":5,"column_end":8},"name":"F10","qualname":"::code::Code::F10","value":"Code::F10","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">F10</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">F10</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20401,"byte_end":20436,"line_start":292,"line_end":292,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20490,"byte_end":20493,"line_start":295,"line_end":295,"column_start":5,"column_end":8},"name":"F11","qualname":"::code::Code::F11","value":"Code::F11","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">F11</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">F11</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20450,"byte_end":20485,"line_start":294,"line_end":294,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20539,"byte_end":20542,"line_start":297,"line_end":297,"column_start":5,"column_end":8},"name":"F12","qualname":"::code::Code::F12","value":"Code::F12","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">F12</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">F12</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20499,"byte_end":20534,"line_start":296,"line_end":296,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20792,"byte_end":20794,"line_start":301,"line_end":301,"column_start":5,"column_end":7},"name":"Fn","qualname":"::code::Code::Fn","value":"Code::Fn","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">Fn</code> This is typically a hardware key that does not generate a separate\n code. Most keyboards do not place this key in the function section, but it is\n included here to keep it with related keys.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">Fn</code> This is typically a hardware key that does not generate a separate","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20548,"byte_end":20649,"line_start":298,"line_end":298,"column_start":5,"column_end":106}},{"value":"/ code. Most keyboards do not place this key in the function section, but it is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20654,"byte_end":20735,"line_start":299,"line_end":299,"column_start":5,"column_end":86}},{"value":"/ included here to keep it with related keys.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20740,"byte_end":20787,"line_start":300,"line_end":300,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20949,"byte_end":20955,"line_start":304,"line_end":304,"column_start":5,"column_end":11},"name":"FnLock","qualname":"::code::Code::FnLock","value":"Code::FnLock","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">FLock</code> or <code class=\"keycap\">FnLock</code>. Function Lock key. Found on the Microsoft\n Natural Keyboard.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">FLock</code> or <code class=\"keycap\">FnLock</code>. Function Lock key. Found on the Microsoft","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20800,"byte_end":20918,"line_start":302,"line_end":302,"column_start":5,"column_end":123}},{"value":"/ Natural Keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20923,"byte_end":20944,"line_start":303,"line_end":303,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":21054,"byte_end":21065,"line_start":306,"line_end":306,"column_start":5,"column_end":16},"name":"PrintScreen","qualname":"::code::Code::PrintScreen","value":"Code::PrintScreen","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">PrtScr SysRq</code> or <code class=\"keycap\">Print Screen</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">PrtScr SysRq</code> or <code class=\"keycap\">Print Screen</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":20961,"byte_end":21049,"line_start":305,"line_end":305,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":382},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":21119,"byte_end":21129,"line_start":308,"line_end":308,"column_start":5,"column_end":15},"name":"ScrollLock","qualname":"::code::Code::ScrollLock","value":"Code::ScrollLock","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">Scroll Lock</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">Scroll Lock</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":21071,"byte_end":21114,"line_start":307,"line_end":307,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":384},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":21183,"byte_end":21188,"line_start":310,"line_end":310,"column_start":5,"column_end":10},"name":"Pause","qualname":"::code::Code::Pause","value":"Code::Pause","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">Pause Break</code>\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">Pause Break</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":21135,"byte_end":21178,"line_start":309,"line_end":309,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":21286,"byte_end":21297,"line_start":312,"line_end":312,"column_start":5,"column_end":16},"name":"BrowserBack","qualname":"::code::Code::BrowserBack","value":"Code::BrowserBack","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Some laptops place this key to the left of the <code class=\"keycap\">↑</code> key.\n","sig":null,"attributes":[{"value":"/ Some laptops place this key to the left of the <code class=\"keycap\">↑</code> key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":21194,"byte_end":21281,"line_start":311,"line_end":311,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":21303,"byte_end":21319,"line_start":313,"line_end":313,"column_start":5,"column_end":21},"name":"BrowserFavorites","qualname":"::code::Code::BrowserFavorites","value":"Code::BrowserFavorites","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":21418,"byte_end":21432,"line_start":315,"line_end":315,"column_start":5,"column_end":19},"name":"BrowserForward","qualname":"::code::Code::BrowserForward","value":"Code::BrowserForward","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Some laptops place this key to the right of the <code class=\"keycap\">↑</code> key.\n","sig":null,"attributes":[{"value":"/ Some laptops place this key to the right of the <code class=\"keycap\">↑</code> key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":21325,"byte_end":21413,"line_start":314,"line_end":314,"column_start":5,"column_end":91}}]},{"kind":"TupleVariant","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":21438,"byte_end":21449,"line_start":316,"line_end":316,"column_start":5,"column_end":16},"name":"BrowserHome","qualname":"::code::Code::BrowserHome","value":"Code::BrowserHome","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":21455,"byte_end":21469,"line_start":317,"line_end":317,"column_start":5,"column_end":19},"name":"BrowserRefresh","qualname":"::code::Code::BrowserRefresh","value":"Code::BrowserRefresh","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":21475,"byte_end":21488,"line_start":318,"line_end":318,"column_start":5,"column_end":18},"name":"BrowserSearch","qualname":"::code::Code::BrowserSearch","value":"Code::BrowserSearch","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":21494,"byte_end":21505,"line_start":319,"line_end":319,"column_start":5,"column_end":16},"name":"BrowserStop","qualname":"::code::Code::BrowserStop","value":"Code::BrowserStop","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":21754,"byte_end":21759,"line_start":322,"line_end":322,"column_start":5,"column_end":10},"name":"Eject","qualname":"::code::Code::Eject","value":"Code::Eject","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" <code class=\"keycap\">Eject</code> or <code class=\"keycap\">⏏</code>. This key is placed in the <a data-link-type=\"dfn\" href=\"#function-section\" id=\"ref-for-function-section①①\">function\n section</a> on some Apple keyboards.\n","sig":null,"attributes":[{"value":"/ <code class=\"keycap\">Eject</code> or <code class=\"keycap\">⏏</code>. This key is placed in the <a data-link-type=\"dfn\" href=\"#function-section\" id=\"ref-for-function-section①①\">function","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":21511,"byte_end":21704,"line_start":320,"line_end":320,"column_start":5,"column_end":192}},{"value":"/ section</a> on some Apple keyboards.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":21709,"byte_end":21749,"line_start":321,"line_end":321,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":21848,"byte_end":21858,"line_start":324,"line_end":324,"column_start":5,"column_end":15},"name":"LaunchApp1","qualname":"::code::Code::LaunchApp1","value":"Code::LaunchApp1","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Sometimes labelled <code class=\"keycap\">My Computer</code> on the keyboard\n","sig":null,"attributes":[{"value":"/ Sometimes labelled <code class=\"keycap\">My Computer</code> on the keyboard","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":21765,"byte_end":21843,"line_start":323,"line_end":323,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":21946,"byte_end":21956,"line_start":326,"line_end":326,"column_start":5,"column_end":15},"name":"LaunchApp2","qualname":"::code::Code::LaunchApp2","value":"Code::LaunchApp2","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Sometimes labelled <code class=\"keycap\">Calculator</code> on the keyboard\n","sig":null,"attributes":[{"value":"/ Sometimes labelled <code class=\"keycap\">Calculator</code> on the keyboard","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":21864,"byte_end":21941,"line_start":325,"line_end":325,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":21962,"byte_end":21972,"line_start":327,"line_end":327,"column_start":5,"column_end":15},"name":"LaunchMail","qualname":"::code::Code::LaunchMail","value":"Code::LaunchMail","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":21978,"byte_end":21992,"line_start":328,"line_end":328,"column_start":5,"column_end":19},"name":"MediaPlayPause","qualname":"::code::Code::MediaPlayPause","value":"Code::MediaPlayPause","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":21998,"byte_end":22009,"line_start":329,"line_end":329,"column_start":5,"column_end":16},"name":"MediaSelect","qualname":"::code::Code::MediaSelect","value":"Code::MediaSelect","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":412},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22015,"byte_end":22024,"line_start":330,"line_end":330,"column_start":5,"column_end":14},"name":"MediaStop","qualname":"::code::Code::MediaStop","value":"Code::MediaStop","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22030,"byte_end":22044,"line_start":331,"line_end":331,"column_start":5,"column_end":19},"name":"MediaTrackNext","qualname":"::code::Code::MediaTrackNext","value":"Code::MediaTrackNext","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22050,"byte_end":22068,"line_start":332,"line_end":332,"column_start":5,"column_end":23},"name":"MediaTrackPrevious","qualname":"::code::Code::MediaTrackPrevious","value":"Code::MediaTrackPrevious","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22211,"byte_end":22216,"line_start":335,"line_end":335,"column_start":5,"column_end":10},"name":"Power","qualname":"::code::Code::Power","value":"Code::Power","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" This key is placed in the function section on some Apple keyboards,\n replacing the <code class=\"keycap\">Eject</code> key.\n","sig":null,"attributes":[{"value":"/ This key is placed in the function section on some Apple keyboards,","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22074,"byte_end":22145,"line_start":333,"line_end":333,"column_start":5,"column_end":76}},{"value":"/ replacing the <code class=\"keycap\">Eject</code> key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22150,"byte_end":22206,"line_start":334,"line_end":334,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":420},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22222,"byte_end":22227,"line_start":336,"line_end":336,"column_start":5,"column_end":10},"name":"Sleep","qualname":"::code::Code::Sleep","value":"Code::Sleep","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":422},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22233,"byte_end":22248,"line_start":337,"line_end":337,"column_start":5,"column_end":20},"name":"AudioVolumeDown","qualname":"::code::Code::AudioVolumeDown","value":"Code::AudioVolumeDown","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22254,"byte_end":22269,"line_start":338,"line_end":338,"column_start":5,"column_end":20},"name":"AudioVolumeMute","qualname":"::code::Code::AudioVolumeMute","value":"Code::AudioVolumeMute","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22275,"byte_end":22288,"line_start":339,"line_end":339,"column_start":5,"column_end":18},"name":"AudioVolumeUp","qualname":"::code::Code::AudioVolumeUp","value":"Code::AudioVolumeUp","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22294,"byte_end":22300,"line_start":340,"line_end":340,"column_start":5,"column_end":11},"name":"WakeUp","qualname":"::code::Code::WakeUp","value":"Code::WakeUp","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":430},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22306,"byte_end":22311,"line_start":341,"line_end":341,"column_start":5,"column_end":10},"name":"Hyper","qualname":"::code::Code::Hyper","value":"Code::Hyper","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22317,"byte_end":22322,"line_start":342,"line_end":342,"column_start":5,"column_end":10},"name":"Super","qualname":"::code::Code::Super","value":"Code::Super","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22328,"byte_end":22333,"line_start":343,"line_end":343,"column_start":5,"column_end":10},"name":"Turbo","qualname":"::code::Code::Turbo","value":"Code::Turbo","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22339,"byte_end":22344,"line_start":344,"line_end":344,"column_start":5,"column_end":10},"name":"Abort","qualname":"::code::Code::Abort","value":"Code::Abort","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22350,"byte_end":22356,"line_start":345,"line_end":345,"column_start":5,"column_end":11},"name":"Resume","qualname":"::code::Code::Resume","value":"Code::Resume","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22362,"byte_end":22369,"line_start":346,"line_end":346,"column_start":5,"column_end":12},"name":"Suspend","qualname":"::code::Code::Suspend","value":"Code::Suspend","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22414,"byte_end":22419,"line_start":348,"line_end":348,"column_start":5,"column_end":10},"name":"Again","qualname":"::code::Code::Again","value":"Code::Again","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Found on Sun’s USB keyboard.\n","sig":null,"attributes":[{"value":"/ Found on Sun’s USB keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22375,"byte_end":22409,"line_start":347,"line_end":347,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22464,"byte_end":22468,"line_start":350,"line_end":350,"column_start":5,"column_end":9},"name":"Copy","qualname":"::code::Code::Copy","value":"Code::Copy","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Found on Sun’s USB keyboard.\n","sig":null,"attributes":[{"value":"/ Found on Sun’s USB keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22425,"byte_end":22459,"line_start":349,"line_end":349,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22513,"byte_end":22516,"line_start":352,"line_end":352,"column_start":5,"column_end":8},"name":"Cut","qualname":"::code::Code::Cut","value":"Code::Cut","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Found on Sun’s USB keyboard.\n","sig":null,"attributes":[{"value":"/ Found on Sun’s USB keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22474,"byte_end":22508,"line_start":351,"line_end":351,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22561,"byte_end":22565,"line_start":354,"line_end":354,"column_start":5,"column_end":9},"name":"Find","qualname":"::code::Code::Find","value":"Code::Find","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Found on Sun’s USB keyboard.\n","sig":null,"attributes":[{"value":"/ Found on Sun’s USB keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22522,"byte_end":22556,"line_start":353,"line_end":353,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22610,"byte_end":22614,"line_start":356,"line_end":356,"column_start":5,"column_end":9},"name":"Open","qualname":"::code::Code::Open","value":"Code::Open","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Found on Sun’s USB keyboard.\n","sig":null,"attributes":[{"value":"/ Found on Sun’s USB keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22571,"byte_end":22605,"line_start":355,"line_end":355,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22659,"byte_end":22664,"line_start":358,"line_end":358,"column_start":5,"column_end":10},"name":"Paste","qualname":"::code::Code::Paste","value":"Code::Paste","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Found on Sun’s USB keyboard.\n","sig":null,"attributes":[{"value":"/ Found on Sun’s USB keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22620,"byte_end":22654,"line_start":357,"line_end":357,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22709,"byte_end":22714,"line_start":360,"line_end":360,"column_start":5,"column_end":10},"name":"Props","qualname":"::code::Code::Props","value":"Code::Props","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Found on Sun’s USB keyboard.\n","sig":null,"attributes":[{"value":"/ Found on Sun’s USB keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22670,"byte_end":22704,"line_start":359,"line_end":359,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22759,"byte_end":22765,"line_start":362,"line_end":362,"column_start":5,"column_end":11},"name":"Select","qualname":"::code::Code::Select","value":"Code::Select","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Found on Sun’s USB keyboard.\n","sig":null,"attributes":[{"value":"/ Found on Sun’s USB keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22720,"byte_end":22754,"line_start":361,"line_end":361,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22810,"byte_end":22814,"line_start":364,"line_end":364,"column_start":5,"column_end":9},"name":"Undo","qualname":"::code::Code::Undo","value":"Code::Undo","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Found on Sun’s USB keyboard.\n","sig":null,"attributes":[{"value":"/ Found on Sun’s USB keyboard.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22771,"byte_end":22805,"line_start":363,"line_end":363,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22941,"byte_end":22949,"line_start":366,"line_end":366,"column_start":5,"column_end":13},"name":"Hiragana","qualname":"::code::Code::Hiragana","value":"Code::Hiragana","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Use for dedicated <code class=\"keycap\">ひらがな</code> key found on some Japanese word processing keyboards.\n","sig":null,"attributes":[{"value":"/ Use for dedicated <code class=\"keycap\">ひらがな</code> key found on some Japanese word processing keyboards.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22820,"byte_end":22936,"line_start":365,"line_end":365,"column_start":5,"column_end":113}}]},{"kind":"TupleVariant","id":{"krate":0,"index":462},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":23076,"byte_end":23084,"line_start":368,"line_end":368,"column_start":5,"column_end":13},"name":"Katakana","qualname":"::code::Code::Katakana","value":"Code::Katakana","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Use for dedicated <code class=\"keycap\">カタカナ</code> key found on some Japanese word processing keyboards.\n","sig":null,"attributes":[{"value":"/ Use for dedicated <code class=\"keycap\">カタカナ</code> key found on some Japanese word processing keyboards.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":22955,"byte_end":23071,"line_start":367,"line_end":367,"column_start":5,"column_end":113}}]},{"kind":"TupleVariant","id":{"krate":0,"index":464},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":23201,"byte_end":23213,"line_start":371,"line_end":371,"column_start":5,"column_end":17},"name":"Unidentified","qualname":"::code::Code::Unidentified","value":"Code::Unidentified","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" This value code should be used when no other\n value given in this specification is appropriate.\n","sig":null,"attributes":[{"value":"/ This value code should be used when no other","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":23090,"byte_end":23138,"line_start":369,"line_end":369,"column_start":5,"column_end":53}},{"value":"/ value given in this specification is appropriate.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":23143,"byte_end":23196,"line_start":370,"line_end":370,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":23239,"byte_end":23254,"line_start":374,"line_end":374,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::code::Code::__Nonexhaustive","value":"Code::__Nonexhaustive","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":6657,"byte_end":6661,"line_start":16,"line_end":16,"column_start":10,"column_end":14},"name":"Code","qualname":"::code::Code","value":"Code::{Backquote, Backslash, BracketLeft, BracketRight, Comma, Digit0, Digit1, Digit2, Digit3, Digit4, Digit5, Digit6, Digit7, Digit8, Digit9, Equal, IntlBackslash, IntlRo, IntlYen, KeyA, KeyB, KeyC, KeyD, KeyE, KeyF, KeyG, KeyH, KeyI, KeyJ, KeyK, KeyL, KeyM, KeyN, KeyO, KeyP, KeyQ, KeyR, KeyS, KeyT, KeyU, KeyV, KeyW, KeyX, KeyY, KeyZ, Minus, Period, Quote, Semicolon, Slash, AltLeft, AltRight, Backspace, CapsLock, ContextMenu, ControlLeft, ControlRight, Enter, MetaLeft, MetaRight, ShiftLeft, ShiftRight, Space, Tab, Convert, KanaMode, Lang1, Lang2, Lang3, Lang4, Lang5, NonConvert, Delete, End, Help, Home, Insert, PageDown, PageUp, ArrowDown, ArrowLeft, ArrowRight, ArrowUp, NumLock, Numpad0, Numpad1, Numpad2, Numpad3, Numpad4, Numpad5, Numpad6, Numpad7, Numpad8, Numpad9, NumpadAdd, NumpadBackspace, NumpadClear, NumpadClearEntry, NumpadComma, NumpadDecimal, NumpadDivide, NumpadEnter, NumpadEqual, NumpadHash, NumpadMemoryAdd, NumpadMemoryClear, NumpadMemoryRecall, NumpadMemoryStore, NumpadMemorySubtract, NumpadMultiply, NumpadParenLeft, NumpadParenRight, NumpadStar, NumpadSubtract, Escape, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12, Fn, FnLock, PrintScreen, ScrollLock, Pause, BrowserBack, BrowserFavorites, BrowserForward, BrowserHome, BrowserRefresh, BrowserSearch, BrowserStop, Eject, LaunchApp1, LaunchApp2, LaunchMail, MediaPlayPause, MediaSelect, MediaStop, MediaTrackNext, MediaTrackPrevious, Power, Sleep, AudioVolumeDown, AudioVolumeMute, AudioVolumeUp, WakeUp, Hyper, Super, Turbo, Abort, Resume, Suspend, Again, Copy, Cut, Find, Open, Paste, Props, Select, Undo, Hiragana, Katakana, Unidentified, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":372},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":466}],"decl_id":null,"docs":" Code is the physical position of a key.","sig":null,"attributes":[{"value":"/ Code is the physical position of a key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":6290,"byte_end":6333,"line_start":6,"line_end":6,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":6334,"byte_end":6337,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The names are based on the US keyboard. If the key","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":6338,"byte_end":6392,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/ is not present on US keyboards a name from another","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":6393,"byte_end":6447,"line_start":9,"line_end":9,"column_start":1,"column_end":55}},{"value":"/ layout is used.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":6448,"byte_end":6467,"line_start":10,"line_end":10,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":6468,"byte_end":6471,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Specification:","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":6472,"byte_end":6490,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/ <https://w3c.github.io/uievents-code/>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":6491,"byte_end":6533,"line_start":13,"line_end":13,"column_start":1,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":870},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":32294,"byte_end":32303,"line_start":18,"line_end":18,"column_start":5,"column_end":14},"name":"Character","qualname":"::key::Key::Character","value":"Key::Character(String)","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" A key string that corresponds to the character typed by the user,\n taking into account the user’s current locale setting, modifier state,\n and any system-level keyboard mapping overrides that are in effect.\n","sig":null,"attributes":[{"value":"/ A key string that corresponds to the character typed by the user,","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":32063,"byte_end":32132,"line_start":15,"line_end":15,"column_start":5,"column_end":74}},{"value":"/ taking into account the user’s current locale setting, modifier state,","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":32137,"byte_end":32213,"line_start":16,"line_end":16,"column_start":5,"column_end":79}},{"value":"/ and any system-level keyboard mapping overrides that are in effect.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":32218,"byte_end":32289,"line_start":17,"line_end":17,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":873},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":32492,"byte_end":32504,"line_start":23,"line_end":23,"column_start":5,"column_end":17},"name":"Unidentified","qualname":"::key::Key::Unidentified","value":"Key::Unidentified","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" This key value is used when an implementation is unable to\n identify another key value, due to either hardware,\n platform, or software constraints.\n","sig":null,"attributes":[{"value":"/ This key value is used when an implementation is unable to","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":32322,"byte_end":32384,"line_start":20,"line_end":20,"column_start":5,"column_end":67}},{"value":"/ identify another key value, due to either hardware,","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":32389,"byte_end":32444,"line_start":21,"line_end":21,"column_start":5,"column_end":60}},{"value":"/ platform, or software constraints.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":32449,"byte_end":32487,"line_start":22,"line_end":22,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":875},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":32770,"byte_end":32773,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"Alt","qualname":"::key::Key::Alt","value":"Key::Alt","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The <code class=\"keycap\">Alt</code> (Alternative) key.<br> This key enables the alternate modifier function for interpreting concurrent or subsequent keyboard input.<br> This key value is also used for the Apple <code class=\"keycap\">Option</code> key.\n","sig":null,"attributes":[{"value":"/ The <code class=\"keycap\">Alt</code> (Alternative) key.<br> This key enables the alternate modifier function for interpreting concurrent or subsequent keyboard input.<br> This key value is also used for the Apple <code class=\"keycap\">Option</code> key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":32510,"byte_end":32765,"line_start":24,"line_end":24,"column_start":5,"column_end":260}}]},{"kind":"TupleVariant","id":{"krate":0,"index":877},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":33057,"byte_end":33065,"line_start":29,"line_end":29,"column_start":5,"column_end":13},"name":"AltGraph","qualname":"::key::Key::AltGraph","value":"Key::AltGraph","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Alternate Graphics (<code class=\"keycap\">AltGr</code> or <code class=\"keycap\">AltGraph</code>) key.\n This key is used enable the ISO Level 3 shift modifier (the standard <code class=\"keycap\">Shift</code> key is the level 2 modifier).\n See [ISO9995-1].\n","sig":null,"attributes":[{"value":"/ The Alternate Graphics (<code class=\"keycap\">AltGr</code> or <code class=\"keycap\">AltGraph</code>) key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":32779,"byte_end":32886,"line_start":26,"line_end":26,"column_start":5,"column_end":112}},{"value":"/ This key is used enable the ISO Level 3 shift modifier (the standard <code class=\"keycap\">Shift</code> key is the level 2 modifier).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":32891,"byte_end":33027,"line_start":27,"line_end":27,"column_start":5,"column_end":141}},{"value":"/ See [ISO9995-1].","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":33032,"byte_end":33052,"line_start":28,"line_end":28,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":879},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":33233,"byte_end":33241,"line_start":32,"line_end":32,"column_start":5,"column_end":13},"name":"CapsLock","qualname":"::key::Key::CapsLock","value":"Key::CapsLock","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The <code class=\"keycap\">Caps Lock</code> (Capital) key.\n Toggle capital character lock function for interpreting subsequent keyboard input event.\n","sig":null,"attributes":[{"value":"/ The <code class=\"keycap\">Caps Lock</code> (Capital) key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":33071,"byte_end":33131,"line_start":30,"line_end":30,"column_start":5,"column_end":65}},{"value":"/ Toggle capital character lock function for interpreting subsequent keyboard input event.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":33136,"byte_end":33228,"line_start":31,"line_end":31,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":881},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":33430,"byte_end":33437,"line_start":34,"line_end":34,"column_start":5,"column_end":12},"name":"Control","qualname":"::key::Key::Control","value":"Key::Control","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The <code class=\"keycap\">Control</code> or <code class=\"keycap\">Ctrl</code> key, to enable control modifier function for interpreting concurrent or subsequent keyboard input.\n","sig":null,"attributes":[{"value":"/ The <code class=\"keycap\">Control</code> or <code class=\"keycap\">Ctrl</code> key, to enable control modifier function for interpreting concurrent or subsequent keyboard input.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":33247,"byte_end":33425,"line_start":33,"line_end":33,"column_start":5,"column_end":183}}]},{"kind":"TupleVariant","id":{"krate":0,"index":883},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":33739,"byte_end":33741,"line_start":37,"line_end":37,"column_start":5,"column_end":7},"name":"Fn","qualname":"::key::Key::Fn","value":"Key::Fn","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Function switch <code class=\"keycap\">Fn</code> key.<br> Activating this key simultaneously with another key changes that key’s value to an alternate character or function.\n This key is often handled directly in the keyboard hardware and does not usually generate key events.\n","sig":null,"attributes":[{"value":"/ The Function switch <code class=\"keycap\">Fn</code> key.<br> Activating this key simultaneously with another key changes that key’s value to an alternate character or function.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":33443,"byte_end":33624,"line_start":35,"line_end":35,"column_start":5,"column_end":184}},{"value":"/ This key is often handled directly in the keyboard hardware and does not usually generate key events.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":33629,"byte_end":33734,"line_start":36,"line_end":36,"column_start":5,"column_end":110}}]},{"kind":"TupleVariant","id":{"krate":0,"index":885},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":34093,"byte_end":34099,"line_start":41,"line_end":41,"column_start":5,"column_end":11},"name":"FnLock","qualname":"::key::Key::FnLock","value":"Key::FnLock","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Function-Lock (<code class=\"keycap\">FnLock</code> or <code class=\"keycap\">F-Lock</code>) key.\n Activating this key switches the mode of the keyboard to changes some keys' values to an alternate character or function.\n This key is often handled directly in the keyboard hardware and does not usually generate key events.\n","sig":null,"attributes":[{"value":"/ The Function-Lock (<code class=\"keycap\">FnLock</code> or <code class=\"keycap\">F-Lock</code>) key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":33747,"byte_end":33848,"line_start":38,"line_end":38,"column_start":5,"column_end":106}},{"value":"/ Activating this key switches the mode of the keyboard to changes some keys' values to an alternate character or function.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":33853,"byte_end":33978,"line_start":39,"line_end":39,"column_start":5,"column_end":130}},{"value":"/ This key is often handled directly in the keyboard hardware and does not usually generate key events.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":33983,"byte_end":34088,"line_start":40,"line_end":40,"column_start":5,"column_end":110}}]},{"kind":"TupleVariant","id":{"krate":0,"index":887},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":34399,"byte_end":34403,"line_start":44,"line_end":44,"column_start":5,"column_end":9},"name":"Meta","qualname":"::key::Key::Meta","value":"Key::Meta","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The <code class=\"keycap\">Meta</code> key, to enable meta modifier function for interpreting concurrent or subsequent keyboard input.\n This key value is used for the <q>Windows Logo</q> key and the Apple <code class=\"keycap\">Command</code> or <code class=\"keycap\">⌘</code> key.\n","sig":null,"attributes":[{"value":"/ The <code class=\"keycap\">Meta</code> key, to enable meta modifier function for interpreting concurrent or subsequent keyboard input.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":34105,"byte_end":34241,"line_start":42,"line_end":42,"column_start":5,"column_end":141}},{"value":"/ This key value is used for the <q>Windows Logo</q> key and the Apple <code class=\"keycap\">Command</code> or <code class=\"keycap\">⌘</code> key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":34246,"byte_end":34394,"line_start":43,"line_end":43,"column_start":5,"column_end":151}}]},{"kind":"TupleVariant","id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":34552,"byte_end":34559,"line_start":46,"line_end":46,"column_start":5,"column_end":12},"name":"NumLock","qualname":"::key::Key::NumLock","value":"Key::NumLock","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The <code class=\"keycap\">NumLock</code> or Number Lock key, to toggle numpad mode function for interpreting subsequent keyboard input.\n","sig":null,"attributes":[{"value":"/ The <code class=\"keycap\">NumLock</code> or Number Lock key, to toggle numpad mode function for interpreting subsequent keyboard input.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":34409,"byte_end":34547,"line_start":45,"line_end":45,"column_start":5,"column_end":143}}]},{"kind":"TupleVariant","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":34677,"byte_end":34687,"line_start":48,"line_end":48,"column_start":5,"column_end":15},"name":"ScrollLock","qualname":"::key::Key::ScrollLock","value":"Key::ScrollLock","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The <code class=\"keycap\">Scroll Lock</code> key, to toggle between scrolling and cursor movement modes.\n","sig":null,"attributes":[{"value":"/ The <code class=\"keycap\">Scroll Lock</code> key, to toggle between scrolling and cursor movement modes.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":34565,"byte_end":34672,"line_start":47,"line_end":47,"column_start":5,"column_end":112}}]},{"kind":"TupleVariant","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":34836,"byte_end":34841,"line_start":50,"line_end":50,"column_start":5,"column_end":10},"name":"Shift","qualname":"::key::Key::Shift","value":"Key::Shift","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The <code class=\"keycap\">Shift</code> key, to enable shift modifier function for interpreting concurrent or subsequent keyboard input.\n","sig":null,"attributes":[{"value":"/ The <code class=\"keycap\">Shift</code> key, to enable shift modifier function for interpreting concurrent or subsequent keyboard input.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":34693,"byte_end":34831,"line_start":49,"line_end":49,"column_start":5,"column_end":143}}]},{"kind":"TupleVariant","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":34913,"byte_end":34919,"line_start":52,"line_end":52,"column_start":5,"column_end":11},"name":"Symbol","qualname":"::key::Key::Symbol","value":"Key::Symbol","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Symbol modifier key (used on some virtual keyboards).\n","sig":null,"attributes":[{"value":"/ The Symbol modifier key (used on some virtual keyboards).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":34847,"byte_end":34908,"line_start":51,"line_end":51,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":34954,"byte_end":34964,"line_start":54,"line_end":54,"column_start":5,"column_end":15},"name":"SymbolLock","qualname":"::key::Key::SymbolLock","value":"Key::SymbolLock","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Symbol Lock key.\n","sig":null,"attributes":[{"value":"/ The Symbol Lock key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":34925,"byte_end":34949,"line_start":53,"line_end":53,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":899},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":35021,"byte_end":35026,"line_start":56,"line_end":56,"column_start":5,"column_end":10},"name":"Hyper","qualname":"::key::Key::Hyper","value":"Key::Hyper","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The <code class=\"keycap\">Hyper</code> key.\n","sig":null,"attributes":[{"value":"/ The <code class=\"keycap\">Hyper</code> key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":34970,"byte_end":35016,"line_start":55,"line_end":55,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":901},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":35083,"byte_end":35088,"line_start":58,"line_end":58,"column_start":5,"column_end":10},"name":"Super","qualname":"::key::Key::Super","value":"Key::Super","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The <code class=\"keycap\">Super</code> key.\n","sig":null,"attributes":[{"value":"/ The <code class=\"keycap\">Super</code> key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":35032,"byte_end":35078,"line_start":57,"line_end":57,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":35432,"byte_end":35437,"line_start":60,"line_end":60,"column_start":5,"column_end":10},"name":"Enter","qualname":"::key::Key::Enter","value":"Key::Enter","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The <code class=\"keycap\">Enter</code> or <code class=\"keycap\">↵</code> key, to activate current selection or accept current input.<br> This key value is also used for the <code class=\"keycap\">Return</code> (Macintosh numpad) key.<br> This key value is also used for the Android <code class=\"android\">KEYCODE_DPAD_CENTER</code>.\n","sig":null,"attributes":[{"value":"/ The <code class=\"keycap\">Enter</code> or <code class=\"keycap\">↵</code> key, to activate current selection or accept current input.<br> This key value is also used for the <code class=\"keycap\">Return</code> (Macintosh numpad) key.<br> This key value is also used for the Android <code class=\"android\">KEYCODE_DPAD_CENTER</code>.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":35094,"byte_end":35427,"line_start":59,"line_end":59,"column_start":5,"column_end":336}}]},{"kind":"TupleVariant","id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":35514,"byte_end":35517,"line_start":62,"line_end":62,"column_start":5,"column_end":8},"name":"Tab","qualname":"::key::Key::Tab","value":"Key::Tab","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Horizontal Tabulation <code class=\"keycap\">Tab</code> key.\n","sig":null,"attributes":[{"value":"/ The Horizontal Tabulation <code class=\"keycap\">Tab</code> key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":35443,"byte_end":35509,"line_start":61,"line_end":61,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":907},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":35634,"byte_end":35643,"line_start":64,"line_end":64,"column_start":5,"column_end":14},"name":"ArrowDown","qualname":"::key::Key::ArrowDown","value":"Key::ArrowDown","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The down arrow key, to navigate or traverse downward. (<code class=\"android\">KEYCODE_DPAD_DOWN</code>)\n","sig":null,"attributes":[{"value":"/ The down arrow key, to navigate or traverse downward. (<code class=\"android\">KEYCODE_DPAD_DOWN</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":35523,"byte_end":35629,"line_start":63,"line_end":63,"column_start":5,"column_end":111}}]},{"kind":"TupleVariant","id":{"krate":0,"index":909},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":35760,"byte_end":35769,"line_start":66,"line_end":66,"column_start":5,"column_end":14},"name":"ArrowLeft","qualname":"::key::Key::ArrowLeft","value":"Key::ArrowLeft","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The left arrow key, to navigate or traverse leftward. (<code class=\"android\">KEYCODE_DPAD_LEFT</code>)\n","sig":null,"attributes":[{"value":"/ The left arrow key, to navigate or traverse leftward. (<code class=\"android\">KEYCODE_DPAD_LEFT</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":35649,"byte_end":35755,"line_start":65,"line_end":65,"column_start":5,"column_end":111}}]},{"kind":"TupleVariant","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":35889,"byte_end":35899,"line_start":68,"line_end":68,"column_start":5,"column_end":15},"name":"ArrowRight","qualname":"::key::Key::ArrowRight","value":"Key::ArrowRight","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The right arrow key, to navigate or traverse rightward. (<code class=\"android\">KEYCODE_DPAD_RIGHT</code>)\n","sig":null,"attributes":[{"value":"/ The right arrow key, to navigate or traverse rightward. (<code class=\"android\">KEYCODE_DPAD_RIGHT</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":35775,"byte_end":35884,"line_start":67,"line_end":67,"column_start":5,"column_end":114}}]},{"kind":"TupleVariant","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":36010,"byte_end":36017,"line_start":70,"line_end":70,"column_start":5,"column_end":12},"name":"ArrowUp","qualname":"::key::Key::ArrowUp","value":"Key::ArrowUp","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The up arrow key, to navigate or traverse upward. (<code class=\"android\">KEYCODE_DPAD_UP</code>)\n","sig":null,"attributes":[{"value":"/ The up arrow key, to navigate or traverse upward. (<code class=\"android\">KEYCODE_DPAD_UP</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":35905,"byte_end":36005,"line_start":69,"line_end":69,"column_start":5,"column_end":105}}]},{"kind":"TupleVariant","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":36146,"byte_end":36149,"line_start":72,"line_end":72,"column_start":5,"column_end":8},"name":"End","qualname":"::key::Key::End","value":"Key::End","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The End key, used with keyboard entry to go to the end of content (<code class=\"android\">KEYCODE_MOVE_END</code>).\n","sig":null,"attributes":[{"value":"/ The End key, used with keyboard entry to go to the end of content (<code class=\"android\">KEYCODE_MOVE_END</code>).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":36023,"byte_end":36141,"line_start":71,"line_end":71,"column_start":5,"column_end":123}}]},{"kind":"TupleVariant","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":36423,"byte_end":36427,"line_start":74,"line_end":74,"column_start":5,"column_end":9},"name":"Home","qualname":"::key::Key::Home","value":"Key::Home","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Home key, used with keyboard entry, to go to start of content (<code class=\"android\">KEYCODE_MOVE_HOME</code>).<br> For the mobile phone <code class=\"keycap\">Home</code> key (which goes to the phone’s main screen), use <code class=\"key\">\"GoHome\"</code>.\n","sig":null,"attributes":[{"value":"/ The Home key, used with keyboard entry, to go to start of content (<code class=\"android\">KEYCODE_MOVE_HOME</code>).<br> For the mobile phone <code class=\"keycap\">Home</code> key (which goes to the phone’s main screen), use <code class=\"key\">\"GoHome\"</code>.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":36155,"byte_end":36418,"line_start":73,"line_end":73,"column_start":5,"column_end":266}}]},{"kind":"TupleVariant","id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":36508,"byte_end":36516,"line_start":76,"line_end":76,"column_start":5,"column_end":13},"name":"PageDown","qualname":"::key::Key::PageDown","value":"Key::PageDown","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Page Down key, to scroll down or display next page of content.\n","sig":null,"attributes":[{"value":"/ The Page Down key, to scroll down or display next page of content.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":36433,"byte_end":36503,"line_start":75,"line_end":75,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":921},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":36597,"byte_end":36603,"line_start":78,"line_end":78,"column_start":5,"column_end":11},"name":"PageUp","qualname":"::key::Key::PageUp","value":"Key::PageUp","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Page Up key, to scroll up or display previous page of content.\n","sig":null,"attributes":[{"value":"/ The Page Up key, to scroll up or display previous page of content.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":36522,"byte_end":36592,"line_start":77,"line_end":77,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":36739,"byte_end":36748,"line_start":80,"line_end":80,"column_start":5,"column_end":14},"name":"Backspace","qualname":"::key::Key::Backspace","value":"Key::Backspace","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Backspace key. This key value is also used for the key labeled <code class=\"keycap\">Delete</code> on MacOS keyboards.\n","sig":null,"attributes":[{"value":"/ The Backspace key. This key value is also used for the key labeled <code class=\"keycap\">Delete</code> on MacOS keyboards.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":36609,"byte_end":36734,"line_start":79,"line_end":79,"column_start":5,"column_end":130}}]},{"kind":"TupleVariant","id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":36799,"byte_end":36804,"line_start":82,"line_end":82,"column_start":5,"column_end":10},"name":"Clear","qualname":"::key::Key::Clear","value":"Key::Clear","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Remove the currently selected input.\n","sig":null,"attributes":[{"value":"/ Remove the currently selected input.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":36754,"byte_end":36794,"line_start":81,"line_end":81,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":36896,"byte_end":36900,"line_start":84,"line_end":84,"column_start":5,"column_end":9},"name":"Copy","qualname":"::key::Key::Copy","value":"Key::Copy","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Copy the current selection. (<code class=\"appcommand\">APPCOMMAND_COPY</code>)\n","sig":null,"attributes":[{"value":"/ Copy the current selection. (<code class=\"appcommand\">APPCOMMAND_COPY</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":36810,"byte_end":36891,"line_start":83,"line_end":83,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":929},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":36945,"byte_end":36950,"line_start":86,"line_end":86,"column_start":5,"column_end":10},"name":"CrSel","qualname":"::key::Key::CrSel","value":"Key::CrSel","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Cursor Select (Crsel) key.\n","sig":null,"attributes":[{"value":"/ The Cursor Select (Crsel) key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":36906,"byte_end":36940,"line_start":85,"line_end":85,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":931},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":37040,"byte_end":37043,"line_start":88,"line_end":88,"column_start":5,"column_end":8},"name":"Cut","qualname":"::key::Key::Cut","value":"Key::Cut","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Cut the current selection. (<code class=\"appcommand\">APPCOMMAND_CUT</code>)\n","sig":null,"attributes":[{"value":"/ Cut the current selection. (<code class=\"appcommand\">APPCOMMAND_CUT</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":36956,"byte_end":37035,"line_start":87,"line_end":87,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":933},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":37246,"byte_end":37252,"line_start":91,"line_end":91,"column_start":5,"column_end":11},"name":"Delete","qualname":"::key::Key::Delete","value":"Key::Delete","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Delete (Del) Key.\n This key value is also used for the key labeled <code class=\"keycap\">Delete</code> on MacOS keyboards when modified by the <code class=\"keycap\">Fn</code> key.\n","sig":null,"attributes":[{"value":"/ The Delete (Del) Key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":37049,"byte_end":37074,"line_start":89,"line_end":89,"column_start":5,"column_end":30}},{"value":"/ This key value is also used for the key labeled <code class=\"keycap\">Delete</code> on MacOS keyboards when modified by the <code class=\"keycap\">Fn</code> key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":37079,"byte_end":37241,"line_start":90,"line_end":90,"column_start":5,"column_end":167}}]},{"kind":"TupleVariant","id":{"krate":0,"index":935},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":37403,"byte_end":37411,"line_start":94,"line_end":94,"column_start":5,"column_end":13},"name":"EraseEof","qualname":"::key::Key::EraseEof","value":"Key::EraseEof","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Erase to End of Field key.\n This key deletes all characters from the current cursor position to the end of the current field.\n","sig":null,"attributes":[{"value":"/ The Erase to End of Field key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":37258,"byte_end":37292,"line_start":92,"line_end":92,"column_start":5,"column_end":39}},{"value":"/ This key deletes all characters from the current cursor position to the end of the current field.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":37297,"byte_end":37398,"line_start":93,"line_end":93,"column_start":5,"column_end":106}}]},{"kind":"TupleVariant","id":{"krate":0,"index":937},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":37459,"byte_end":37464,"line_start":96,"line_end":96,"column_start":5,"column_end":10},"name":"ExSel","qualname":"::key::Key::ExSel","value":"Key::ExSel","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Extend Selection (Exsel) key.\n","sig":null,"attributes":[{"value":"/ The Extend Selection (Exsel) key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":37417,"byte_end":37454,"line_start":95,"line_end":95,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":939},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":37604,"byte_end":37610,"line_start":98,"line_end":98,"column_start":5,"column_end":11},"name":"Insert","qualname":"::key::Key::Insert","value":"Key::Insert","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Insert (Ins) key, to toggle between text modes for insertion or overtyping. (<code class=\"android\">KEYCODE_INSERT</code>)\n","sig":null,"attributes":[{"value":"/ The Insert (Ins) key, to toggle between text modes for insertion or overtyping. (<code class=\"android\">KEYCODE_INSERT</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":37470,"byte_end":37599,"line_start":97,"line_end":97,"column_start":5,"column_end":134}}]},{"kind":"TupleVariant","id":{"krate":0,"index":941},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":37690,"byte_end":37695,"line_start":100,"line_end":100,"column_start":5,"column_end":10},"name":"Paste","qualname":"::key::Key::Paste","value":"Key::Paste","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Paste key. (<code class=\"appcommand\">APPCOMMAND_PASTE</code>)\n","sig":null,"attributes":[{"value":"/ The Paste key. (<code class=\"appcommand\">APPCOMMAND_PASTE</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":37616,"byte_end":37685,"line_start":99,"line_end":99,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":943},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":37781,"byte_end":37785,"line_start":102,"line_end":102,"column_start":5,"column_end":9},"name":"Redo","qualname":"::key::Key::Redo","value":"Key::Redo","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Redo the last action. (<code class=\"appcommand\">APPCOMMAND_REDO</code>)\n","sig":null,"attributes":[{"value":"/ Redo the last action. (<code class=\"appcommand\">APPCOMMAND_REDO</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":37701,"byte_end":37776,"line_start":101,"line_end":101,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":945},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":37871,"byte_end":37875,"line_start":104,"line_end":104,"column_start":5,"column_end":9},"name":"Undo","qualname":"::key::Key::Undo","value":"Key::Undo","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Undo the last action. (<code class=\"appcommand\">APPCOMMAND_UNDO</code>)\n","sig":null,"attributes":[{"value":"/ Undo the last action. (<code class=\"appcommand\">APPCOMMAND_UNDO</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":37791,"byte_end":37866,"line_start":103,"line_end":103,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":947},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":37977,"byte_end":37983,"line_start":106,"line_end":106,"column_start":5,"column_end":11},"name":"Accept","qualname":"::key::Key::Accept","value":"Key::Accept","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Accept (Commit, OK) key. Accept current option or input method sequence conversion.\n","sig":null,"attributes":[{"value":"/ The Accept (Commit, OK) key. Accept current option or input method sequence conversion.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":37881,"byte_end":37972,"line_start":105,"line_end":105,"column_start":5,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":949},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":38041,"byte_end":38046,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"Again","qualname":"::key::Key::Again","value":"Key::Again","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Again key, to redo or repeat an action.\n","sig":null,"attributes":[{"value":"/ The Again key, to redo or repeat an action.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":37989,"byte_end":38036,"line_start":107,"line_end":107,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":951},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":38086,"byte_end":38090,"line_start":110,"line_end":110,"column_start":5,"column_end":9},"name":"Attn","qualname":"::key::Key::Attn","value":"Key::Attn","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Attention (Attn) key.\n","sig":null,"attributes":[{"value":"/ The Attention (Attn) key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":38052,"byte_end":38081,"line_start":109,"line_end":109,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":953},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":38120,"byte_end":38126,"line_start":112,"line_end":112,"column_start":5,"column_end":11},"name":"Cancel","qualname":"::key::Key::Cancel","value":"Key::Cancel","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Cancel key.\n","sig":null,"attributes":[{"value":"/ The Cancel key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":38096,"byte_end":38115,"line_start":111,"line_end":111,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":955},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":38324,"byte_end":38335,"line_start":115,"line_end":115,"column_start":5,"column_end":16},"name":"ContextMenu","qualname":"::key::Key::ContextMenu","value":"Key::ContextMenu","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Show the application’s context menu.\n This key is commonly found between the right <code class=\"keycap\">Meta</code> key and the right <code class=\"keycap\">Control</code> key.\n","sig":null,"attributes":[{"value":"/ Show the application’s context menu.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":38132,"byte_end":38174,"line_start":113,"line_end":113,"column_start":5,"column_end":45}},{"value":"/ This key is commonly found between the right <code class=\"keycap\">Meta</code> key and the right <code class=\"keycap\">Control</code> key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":38179,"byte_end":38319,"line_start":114,"line_end":114,"column_start":5,"column_end":145}}]},{"kind":"TupleVariant","id":{"krate":0,"index":957},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":38593,"byte_end":38599,"line_start":119,"line_end":119,"column_start":5,"column_end":11},"name":"Escape","qualname":"::key::Key::Escape","value":"Key::Escape","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The <code class=\"keycap\">Esc</code> key. This key was originally used to initiate an escape sequence, but is\n now more generally used to exit or \"escape\" the current context, such as closing a dialog\n or exiting full screen mode.\n","sig":null,"attributes":[{"value":"/ The <code class=\"keycap\">Esc</code> key. This key was originally used to initiate an escape sequence, but is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":38341,"byte_end":38453,"line_start":116,"line_end":116,"column_start":5,"column_end":117}},{"value":"/ now more generally used to exit or \"escape\" the current context, such as closing a dialog","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":38458,"byte_end":38551,"line_start":117,"line_end":117,"column_start":5,"column_end":98}},{"value":"/ or exiting full screen mode.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":38556,"byte_end":38588,"line_start":118,"line_end":118,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":959},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":38630,"byte_end":38637,"line_start":121,"line_end":121,"column_start":5,"column_end":12},"name":"Execute","qualname":"::key::Key::Execute","value":"Key::Execute","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Execute key.\n","sig":null,"attributes":[{"value":"/ The Execute key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":38605,"byte_end":38625,"line_start":120,"line_end":120,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":961},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":38723,"byte_end":38727,"line_start":123,"line_end":123,"column_start":5,"column_end":9},"name":"Find","qualname":"::key::Key::Find","value":"Key::Find","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Open the Find dialog. (<code class=\"appcommand\">APPCOMMAND_FIND</code>)\n","sig":null,"attributes":[{"value":"/ Open the Find dialog. (<code class=\"appcommand\">APPCOMMAND_FIND</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":38643,"byte_end":38718,"line_start":122,"line_end":122,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":963},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":38953,"byte_end":38957,"line_start":125,"line_end":125,"column_start":5,"column_end":9},"name":"Help","qualname":"::key::Key::Help","value":"Key::Help","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Open a help dialog or toggle display of help information. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_HELP</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_HELP</code></code>)\n","sig":null,"attributes":[{"value":"/ Open a help dialog or toggle display of help information. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_HELP</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_HELP</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":38733,"byte_end":38948,"line_start":124,"line_end":124,"column_start":5,"column_end":220}}]},{"kind":"TupleVariant","id":{"krate":0,"index":965},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":39212,"byte_end":39217,"line_start":128,"line_end":128,"column_start":5,"column_end":10},"name":"Pause","qualname":"::key::Key::Pause","value":"Key::Pause","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Pause the current state or application (as appropriate).\n <p class=\"note\" role=\"note\">Do not use this value for the <code class=\"keycap\">Pause</code> button on media controllers. Use <code class=\"key\">\"MediaPause\"</code> instead.</p>\n","sig":null,"attributes":[{"value":"/ Pause the current state or application (as appropriate).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":38963,"byte_end":39023,"line_start":126,"line_end":126,"column_start":5,"column_end":65}},{"value":"/ <p class=\"note\" role=\"note\">Do not use this value for the <code class=\"keycap\">Pause</code> button on media controllers. Use <code class=\"key\">\"MediaPause\"</code> instead.</p>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":39028,"byte_end":39207,"line_start":127,"line_end":127,"column_start":5,"column_end":184}}]},{"kind":"TupleVariant","id":{"krate":0,"index":967},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":39479,"byte_end":39483,"line_start":131,"line_end":131,"column_start":5,"column_end":9},"name":"Play","qualname":"::key::Key::Play","value":"Key::Play","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Play or resume the current state or application (as appropriate).\n <p class=\"note\" role=\"note\">Do not use this value for the <code class=\"keycap\">Play</code> button on media controllers. Use <code class=\"key\">\"MediaPlay\"</code> instead.</p>\n","sig":null,"attributes":[{"value":"/ Play or resume the current state or application (as appropriate).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":39223,"byte_end":39292,"line_start":129,"line_end":129,"column_start":5,"column_end":74}},{"value":"/ <p class=\"note\" role=\"note\">Do not use this value for the <code class=\"keycap\">Play</code> button on media controllers. Use <code class=\"key\">\"MediaPlay\"</code> instead.</p>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":39297,"byte_end":39474,"line_start":130,"line_end":130,"column_start":5,"column_end":182}}]},{"kind":"TupleVariant","id":{"krate":0,"index":969},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":39525,"byte_end":39530,"line_start":133,"line_end":133,"column_start":5,"column_end":10},"name":"Props","qualname":"::key::Key::Props","value":"Key::Props","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The properties (Props) key.\n","sig":null,"attributes":[{"value":"/ The properties (Props) key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":39489,"byte_end":39520,"line_start":132,"line_end":132,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":971},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":39560,"byte_end":39566,"line_start":135,"line_end":135,"column_start":5,"column_end":11},"name":"Select","qualname":"::key::Key::Select","value":"Key::Select","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Select key.\n","sig":null,"attributes":[{"value":"/ The Select key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":39536,"byte_end":39555,"line_start":134,"line_end":134,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":973},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":39643,"byte_end":39649,"line_start":137,"line_end":137,"column_start":5,"column_end":11},"name":"ZoomIn","qualname":"::key::Key::ZoomIn","value":"Key::ZoomIn","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The ZoomIn key. (<code class=\"android\">KEYCODE_ZOOM_IN</code>)\n","sig":null,"attributes":[{"value":"/ The ZoomIn key. (<code class=\"android\">KEYCODE_ZOOM_IN</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":39572,"byte_end":39638,"line_start":136,"line_end":136,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":975},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":39728,"byte_end":39735,"line_start":139,"line_end":139,"column_start":5,"column_end":12},"name":"ZoomOut","qualname":"::key::Key::ZoomOut","value":"Key::ZoomOut","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The ZoomOut key. (<code class=\"android\">KEYCODE_ZOOM_OUT</code>)\n","sig":null,"attributes":[{"value":"/ The ZoomOut key. (<code class=\"android\">KEYCODE_ZOOM_OUT</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":39655,"byte_end":39723,"line_start":138,"line_end":138,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":977},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":39872,"byte_end":39886,"line_start":141,"line_end":141,"column_start":5,"column_end":19},"name":"BrightnessDown","qualname":"::key::Key::BrightnessDown","value":"Key::BrightnessDown","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Brightness Down key. Typically controls the display brightness. (<code class=\"android\">KEYCODE_BRIGHTNESS_DOWN</code>)\n","sig":null,"attributes":[{"value":"/ The Brightness Down key. Typically controls the display brightness. (<code class=\"android\">KEYCODE_BRIGHTNESS_DOWN</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":39741,"byte_end":39867,"line_start":140,"line_end":140,"column_start":5,"column_end":131}}]},{"kind":"TupleVariant","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":40019,"byte_end":40031,"line_start":143,"line_end":143,"column_start":5,"column_end":17},"name":"BrightnessUp","qualname":"::key::Key::BrightnessUp","value":"Key::BrightnessUp","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Brightness Up key. Typically controls the display brightness. (<code class=\"android\">KEYCODE_BRIGHTNESS_UP</code>)\n","sig":null,"attributes":[{"value":"/ The Brightness Up key. Typically controls the display brightness. (<code class=\"android\">KEYCODE_BRIGHTNESS_UP</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":39892,"byte_end":40014,"line_start":142,"line_end":142,"column_start":5,"column_end":127}}]},{"kind":"TupleVariant","id":{"krate":0,"index":981},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":40161,"byte_end":40166,"line_start":145,"line_end":145,"column_start":5,"column_end":10},"name":"Eject","qualname":"::key::Key::Eject","value":"Key::Eject","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle removable media to eject (open) and insert (close) state. (<code class=\"android\">KEYCODE_MEDIA_EJECT</code>)\n","sig":null,"attributes":[{"value":"/ Toggle removable media to eject (open) and insert (close) state. (<code class=\"android\">KEYCODE_MEDIA_EJECT</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":40037,"byte_end":40156,"line_start":144,"line_end":144,"column_start":5,"column_end":124}}]},{"kind":"TupleVariant","id":{"krate":0,"index":983},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":40196,"byte_end":40202,"line_start":147,"line_end":147,"column_start":5,"column_end":11},"name":"LogOff","qualname":"::key::Key::LogOff","value":"Key::LogOff","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The LogOff key.\n","sig":null,"attributes":[{"value":"/ The LogOff key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":40172,"byte_end":40191,"line_start":146,"line_end":146,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":985},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":40396,"byte_end":40401,"line_start":150,"line_end":150,"column_start":5,"column_end":10},"name":"Power","qualname":"::key::Key::Power","value":"Key::Power","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle power state. (<code class=\"android\">KEYCODE_POWER</code>)\n <p class=\"note\" role=\"note\">Note: Some devices might not expose this key to the operating environment.</p>\n","sig":null,"attributes":[{"value":"/ Toggle power state. (<code class=\"android\">KEYCODE_POWER</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":40208,"byte_end":40276,"line_start":148,"line_end":148,"column_start":5,"column_end":73}},{"value":"/ <p class=\"note\" role=\"note\">Note: Some devices might not expose this key to the operating environment.</p>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":40281,"byte_end":40391,"line_start":149,"line_end":149,"column_start":5,"column_end":115}}]},{"kind":"TupleVariant","id":{"krate":0,"index":987},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":40516,"byte_end":40524,"line_start":152,"line_end":152,"column_start":5,"column_end":13},"name":"PowerOff","qualname":"::key::Key::PowerOff","value":"Key::PowerOff","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The <code class=\"keycap\">PowerOff</code> key. Sometime called <code class=\"keycap\">PowerDown</code>.\n","sig":null,"attributes":[{"value":"/ The <code class=\"keycap\">PowerOff</code> key. Sometime called <code class=\"keycap\">PowerDown</code>.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":40407,"byte_end":40511,"line_start":151,"line_end":151,"column_start":5,"column_end":109}}]},{"kind":"TupleVariant","id":{"krate":0,"index":989},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":40663,"byte_end":40674,"line_start":154,"line_end":154,"column_start":5,"column_end":16},"name":"PrintScreen","qualname":"::key::Key::PrintScreen","value":"Key::PrintScreen","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The <code class=\"keycap\">Print Screen</code> or <code class=\"keycap\">SnapShot</code> key, to initiate print-screen function.\n","sig":null,"attributes":[{"value":"/ The <code class=\"keycap\">Print Screen</code> or <code class=\"keycap\">SnapShot</code> key, to initiate print-screen function.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":40530,"byte_end":40658,"line_start":153,"line_end":153,"column_start":5,"column_end":133}}]},{"kind":"TupleVariant","id":{"krate":0,"index":991},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":40833,"byte_end":40842,"line_start":157,"line_end":157,"column_start":5,"column_end":14},"name":"Hibernate","qualname":"::key::Key::Hibernate","value":"Key::Hibernate","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Hibernate key.\n This key saves the current state of the computer to disk so that it can be restored. The computer will then shutdown.\n","sig":null,"attributes":[{"value":"/ The Hibernate key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":40680,"byte_end":40702,"line_start":155,"line_end":155,"column_start":5,"column_end":27}},{"value":"/ This key saves the current state of the computer to disk so that it can be restored. The computer will then shutdown.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":40707,"byte_end":40828,"line_start":156,"line_end":156,"column_start":5,"column_end":126}}]},{"kind":"TupleVariant","id":{"krate":0,"index":993},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":41177,"byte_end":41184,"line_start":161,"line_end":161,"column_start":5,"column_end":12},"name":"Standby","qualname":"::key::Key::Standby","value":"Key::Standby","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Standby key.\n This key turns off the display and places the computer into a low-power mode without completely shutting down.\n It is sometimes labelled <code class=\"keycap\">Suspend</code> or <code class=\"keycap\">Sleep</code> key. (<code class=\"android\"><code class=\"android\">KEYCODE_SLEEP</code></code>)\n","sig":null,"attributes":[{"value":"/ The Standby key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":40848,"byte_end":40868,"line_start":158,"line_end":158,"column_start":5,"column_end":25}},{"value":"/ This key turns off the display and places the computer into a low-power mode without completely shutting down.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":40873,"byte_end":40987,"line_start":159,"line_end":159,"column_start":5,"column_end":119}},{"value":"/ It is sometimes labelled <code class=\"keycap\">Suspend</code> or <code class=\"keycap\">Sleep</code> key. (<code class=\"android\"><code class=\"android\">KEYCODE_SLEEP</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":40992,"byte_end":41172,"line_start":160,"line_end":160,"column_start":5,"column_end":185}}]},{"kind":"TupleVariant","id":{"krate":0,"index":995},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":41260,"byte_end":41266,"line_start":163,"line_end":163,"column_start":5,"column_end":11},"name":"WakeUp","qualname":"::key::Key::WakeUp","value":"Key::WakeUp","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The WakeUp key. (<code class=\"android\">KEYCODE_WAKEUP</code>)\n","sig":null,"attributes":[{"value":"/ The WakeUp key. (<code class=\"android\">KEYCODE_WAKEUP</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":41190,"byte_end":41255,"line_start":162,"line_end":162,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":997},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":41341,"byte_end":41354,"line_start":165,"line_end":165,"column_start":5,"column_end":18},"name":"AllCandidates","qualname":"::key::Key::AllCandidates","value":"Key::AllCandidates","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The All Candidates key, to initate the multi-candidate mode.\n","sig":null,"attributes":[{"value":"/ The All Candidates key, to initate the multi-candidate mode.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":41272,"byte_end":41336,"line_start":164,"line_end":164,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":999},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":41390,"byte_end":41402,"line_start":167,"line_end":167,"column_start":5,"column_end":17},"name":"Alphanumeric","qualname":"::key::Key::Alphanumeric","value":"Key::Alphanumeric","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Alphanumeric key.\n","sig":null,"attributes":[{"value":"/ The Alphanumeric key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":41360,"byte_end":41385,"line_start":166,"line_end":166,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1001},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":41524,"byte_end":41533,"line_start":169,"line_end":169,"column_start":5,"column_end":14},"name":"CodeInput","qualname":"::key::Key::CodeInput","value":"Key::CodeInput","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Code Input key, to initiate the Code Input mode to allow characters to be entered by their code points.\n","sig":null,"attributes":[{"value":"/ The Code Input key, to initiate the Code Input mode to allow characters to be entered by their code points.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":41408,"byte_end":41519,"line_start":168,"line_end":168,"column_start":5,"column_end":116}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1003},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":41780,"byte_end":41787,"line_start":173,"line_end":173,"column_start":5,"column_end":12},"name":"Compose","qualname":"::key::Key::Compose","value":"Key::Compose","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Compose key, also known as <em>Multi_key</em> on the X Window System.\n This key acts in a manner similar to a\n dead key, triggering a mode where subsequent key presses are combined to produce a different character.\n","sig":null,"attributes":[{"value":"/ The Compose key, also known as <em>Multi_key</em> on the X Window System.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":41539,"byte_end":41616,"line_start":170,"line_end":170,"column_start":5,"column_end":82}},{"value":"/ This key acts in a manner similar to a","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":41621,"byte_end":41663,"line_start":171,"line_end":171,"column_start":5,"column_end":47}},{"value":"/ dead key, triggering a mode where subsequent key presses are combined to produce a different character.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":41668,"byte_end":41775,"line_start":172,"line_end":172,"column_start":5,"column_end":112}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1005},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":41864,"byte_end":41871,"line_start":175,"line_end":175,"column_start":5,"column_end":12},"name":"Convert","qualname":"::key::Key::Convert","value":"Key::Convert","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Convert key, to convert the current input method sequence.\n","sig":null,"attributes":[{"value":"/ The Convert key, to convert the current input method sequence.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":41793,"byte_end":41859,"line_start":174,"line_end":174,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1007},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":42406,"byte_end":42410,"line_start":178,"line_end":178,"column_start":5,"column_end":9},"name":"Dead","qualname":"::key::Key::Dead","value":"Key::Dead","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" A dead key combining key. It may be any combining key from any keyboard layout. For example, on a\n PC/AT French keyboard, using a French mapping and without any modifier activiated, this is the key value <code class=\"unicode\">U+0302</code> COMBINING CIRCUMFLEX ACCENT. In another layout this might be a different unicode combining key.<br> For applications that need to differentiate between specific combining characters, the associated compositionupdate event’s data attribute provides the specific key value.\n","sig":null,"attributes":[{"value":"/ A dead key combining key. It may be any combining key from any keyboard layout. For example, on a","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":41877,"byte_end":41978,"line_start":176,"line_end":176,"column_start":5,"column_end":106}},{"value":"/ PC/AT French keyboard, using a French mapping and without any modifier activiated, this is the key value <code class=\"unicode\">U+0302</code> COMBINING CIRCUMFLEX ACCENT. In another layout this might be a different unicode combining key.<br> For applications that need to differentiate between specific combining characters, the associated compositionupdate event’s data attribute provides the specific key value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":41983,"byte_end":42401,"line_start":177,"line_end":177,"column_start":5,"column_end":421}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1009},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":42542,"byte_end":42551,"line_start":180,"line_end":180,"column_start":5,"column_end":14},"name":"FinalMode","qualname":"::key::Key::FinalMode","value":"Key::FinalMode","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Final Mode <code class=\"keycap\">Final</code> key used on some Asian keyboards, to enable the final mode for IMEs.\n","sig":null,"attributes":[{"value":"/ The Final Mode <code class=\"keycap\">Final</code> key used on some Asian keyboards, to enable the final mode for IMEs.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":42416,"byte_end":42537,"line_start":179,"line_end":179,"column_start":5,"column_end":126}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1011},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":42617,"byte_end":42627,"line_start":182,"line_end":182,"column_start":5,"column_end":15},"name":"GroupFirst","qualname":"::key::Key::GroupFirst","value":"Key::GroupFirst","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Switch to the first character group. (ISO/IEC 9995)\n","sig":null,"attributes":[{"value":"/ Switch to the first character group. (ISO/IEC 9995)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":42557,"byte_end":42612,"line_start":181,"line_end":181,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1013},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":42692,"byte_end":42701,"line_start":184,"line_end":184,"column_start":5,"column_end":14},"name":"GroupLast","qualname":"::key::Key::GroupLast","value":"Key::GroupLast","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Switch to the last character group. (ISO/IEC 9995)\n","sig":null,"attributes":[{"value":"/ Switch to the last character group. (ISO/IEC 9995)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":42633,"byte_end":42687,"line_start":183,"line_end":183,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":42766,"byte_end":42775,"line_start":186,"line_end":186,"column_start":5,"column_end":14},"name":"GroupNext","qualname":"::key::Key::GroupNext","value":"Key::GroupNext","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Switch to the next character group. (ISO/IEC 9995)\n","sig":null,"attributes":[{"value":"/ Switch to the next character group. (ISO/IEC 9995)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":42707,"byte_end":42761,"line_start":185,"line_end":185,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":42844,"byte_end":42857,"line_start":188,"line_end":188,"column_start":5,"column_end":18},"name":"GroupPrevious","qualname":"::key::Key::GroupPrevious","value":"Key::GroupPrevious","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Switch to the previous character group. (ISO/IEC 9995)\n","sig":null,"attributes":[{"value":"/ Switch to the previous character group. (ISO/IEC 9995)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":42781,"byte_end":42839,"line_start":187,"line_end":187,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1019},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":42948,"byte_end":42958,"line_start":190,"line_end":190,"column_start":5,"column_end":15},"name":"ModeChange","qualname":"::key::Key::ModeChange","value":"Key::ModeChange","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Mode Change key, to toggle between or cycle through input modes of IMEs.\n","sig":null,"attributes":[{"value":"/ The Mode Change key, to toggle between or cycle through input modes of IMEs.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":42863,"byte_end":42943,"line_start":189,"line_end":189,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1021},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":43005,"byte_end":43018,"line_start":192,"line_end":192,"column_start":5,"column_end":18},"name":"NextCandidate","qualname":"::key::Key::NextCandidate","value":"Key::NextCandidate","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Next Candidate function key.\n","sig":null,"attributes":[{"value":"/ The Next Candidate function key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":42964,"byte_end":43000,"line_start":191,"line_end":191,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1023},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":43140,"byte_end":43150,"line_start":194,"line_end":194,"column_start":5,"column_end":15},"name":"NonConvert","qualname":"::key::Key::NonConvert","value":"Key::NonConvert","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The NonConvert (\"Don’t Convert\") key, to accept current input method sequence without conversion in IMEs.\n","sig":null,"attributes":[{"value":"/ The NonConvert (\"Don’t Convert\") key, to accept current input method sequence without conversion in IMEs.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":43024,"byte_end":43135,"line_start":193,"line_end":193,"column_start":5,"column_end":114}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1025},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":43201,"byte_end":43218,"line_start":196,"line_end":196,"column_start":5,"column_end":22},"name":"PreviousCandidate","qualname":"::key::Key::PreviousCandidate","value":"Key::PreviousCandidate","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Previous Candidate function key.\n","sig":null,"attributes":[{"value":"/ The Previous Candidate function key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":43156,"byte_end":43196,"line_start":195,"line_end":195,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1027},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":43249,"byte_end":43256,"line_start":198,"line_end":198,"column_start":5,"column_end":12},"name":"Process","qualname":"::key::Key::Process","value":"Key::Process","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Process key.\n","sig":null,"attributes":[{"value":"/ The Process key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":43224,"byte_end":43244,"line_start":197,"line_end":197,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1029},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":43305,"byte_end":43320,"line_start":200,"line_end":200,"column_start":5,"column_end":20},"name":"SingleCandidate","qualname":"::key::Key::SingleCandidate","value":"Key::SingleCandidate","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Single Candidate function key.\n","sig":null,"attributes":[{"value":"/ The Single Candidate function key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":43262,"byte_end":43300,"line_start":199,"line_end":199,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1031},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":43419,"byte_end":43429,"line_start":202,"line_end":202,"column_start":5,"column_end":15},"name":"HangulMode","qualname":"::key::Key::HangulMode","value":"Key::HangulMode","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Hangul (Korean characters) Mode key, to toggle between Hangul and English modes.\n","sig":null,"attributes":[{"value":"/ The Hangul (Korean characters) Mode key, to toggle between Hangul and English modes.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":43326,"byte_end":43414,"line_start":201,"line_end":201,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1033},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":43483,"byte_end":43492,"line_start":204,"line_end":204,"column_start":5,"column_end":14},"name":"HanjaMode","qualname":"::key::Key::HanjaMode","value":"Key::HanjaMode","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Hanja (Korean characters) Mode key.\n","sig":null,"attributes":[{"value":"/ The Hanja (Korean characters) Mode key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":43435,"byte_end":43478,"line_start":203,"line_end":203,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":43546,"byte_end":43555,"line_start":206,"line_end":206,"column_start":5,"column_end":14},"name":"JunjaMode","qualname":"::key::Key::JunjaMode","value":"Key::JunjaMode","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Junja (Korean characters) Mode key.\n","sig":null,"attributes":[{"value":"/ The Junja (Korean characters) Mode key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":43498,"byte_end":43541,"line_start":205,"line_end":205,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1037},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":43710,"byte_end":43714,"line_start":209,"line_end":209,"column_start":5,"column_end":9},"name":"Eisu","qualname":"::key::Key::Eisu","value":"Key::Eisu","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Eisu key. This key may close the IME, but its purpose\n is defined by the current IME. (<code class=\"android\">KEYCODE_EISU</code>)\n","sig":null,"attributes":[{"value":"/ The Eisu key. This key may close the IME, but its purpose","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":43561,"byte_end":43622,"line_start":207,"line_end":207,"column_start":5,"column_end":66}},{"value":"/ is defined by the current IME. (<code class=\"android\">KEYCODE_EISU</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":43627,"byte_end":43705,"line_start":208,"line_end":208,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1039},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":43761,"byte_end":43768,"line_start":211,"line_end":211,"column_start":5,"column_end":12},"name":"Hankaku","qualname":"::key::Key::Hankaku","value":"Key::Hankaku","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The (Half-Width) Characters key.\n","sig":null,"attributes":[{"value":"/ The (Half-Width) Characters key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":43720,"byte_end":43756,"line_start":210,"line_end":210,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1041},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":43827,"byte_end":43835,"line_start":213,"line_end":213,"column_start":5,"column_end":13},"name":"Hiragana","qualname":"::key::Key::Hiragana","value":"Key::Hiragana","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Hiragana (Japanese Kana characters) key.\n","sig":null,"attributes":[{"value":"/ The Hiragana (Japanese Kana characters) key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":43774,"byte_end":43822,"line_start":212,"line_end":212,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":43940,"byte_end":43956,"line_start":215,"line_end":215,"column_start":5,"column_end":21},"name":"HiraganaKatakana","qualname":"::key::Key::HiraganaKatakana","value":"Key::HiraganaKatakana","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Hiragana/Katakana toggle key. (<code class=\"android\">KEYCODE_KATAKANA_HIRAGANA</code>)\n","sig":null,"attributes":[{"value":"/ The Hiragana/Katakana toggle key. (<code class=\"android\">KEYCODE_KATAKANA_HIRAGANA</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":43841,"byte_end":43935,"line_start":214,"line_end":214,"column_start":5,"column_end":99}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1045},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":44079,"byte_end":44087,"line_start":218,"line_end":218,"column_start":5,"column_end":13},"name":"KanaMode","qualname":"::key::Key::KanaMode","value":"Key::KanaMode","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Kana Mode (Kana Lock) key. This key is used to enter\n hiragana mode (typically from romaji mode).\n","sig":null,"attributes":[{"value":"/ The Kana Mode (Kana Lock) key. This key is used to enter","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":43962,"byte_end":44022,"line_start":216,"line_end":216,"column_start":5,"column_end":65}},{"value":"/ hiragana mode (typically from romaji mode).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":44027,"byte_end":44074,"line_start":217,"line_end":217,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1047},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":44350,"byte_end":44359,"line_start":222,"line_end":222,"column_start":5,"column_end":14},"name":"KanjiMode","qualname":"::key::Key::KanjiMode","value":"Key::KanjiMode","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Kanji (Japanese name for ideographic characters of Chinese origin) Mode key.\n This key is typically used to switch to a hiragana keyboard for\n the purpose of converting input into kanji. (<code class=\"android\">KEYCODE_KANA</code>)\n","sig":null,"attributes":[{"value":"/ The Kanji (Japanese name for ideographic characters of Chinese origin) Mode key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":44093,"byte_end":44177,"line_start":219,"line_end":219,"column_start":5,"column_end":89}},{"value":"/ This key is typically used to switch to a hiragana keyboard for","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":44182,"byte_end":44249,"line_start":220,"line_end":220,"column_start":5,"column_end":72}},{"value":"/ the purpose of converting input into kanji. (<code class=\"android\">KEYCODE_KANA</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":44254,"byte_end":44345,"line_start":221,"line_end":221,"column_start":5,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1049},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":44418,"byte_end":44426,"line_start":224,"line_end":224,"column_start":5,"column_end":13},"name":"Katakana","qualname":"::key::Key::Katakana","value":"Key::Katakana","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Katakana (Japanese Kana characters) key.\n","sig":null,"attributes":[{"value":"/ The Katakana (Japanese Kana characters) key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":44365,"byte_end":44413,"line_start":223,"line_end":223,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1051},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":44475,"byte_end":44481,"line_start":226,"line_end":226,"column_start":5,"column_end":11},"name":"Romaji","qualname":"::key::Key::Romaji","value":"Key::Romaji","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Roman characters function key.\n","sig":null,"attributes":[{"value":"/ The Roman characters function key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":44432,"byte_end":44470,"line_start":225,"line_end":225,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1053},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":44536,"byte_end":44543,"line_start":228,"line_end":228,"column_start":5,"column_end":12},"name":"Zenkaku","qualname":"::key::Key::Zenkaku","value":"Key::Zenkaku","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Zenkaku (Full-Width) Characters key.\n","sig":null,"attributes":[{"value":"/ The Zenkaku (Full-Width) Characters key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":44487,"byte_end":44531,"line_start":227,"line_end":227,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1055},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":44668,"byte_end":44682,"line_start":230,"line_end":230,"column_start":5,"column_end":19},"name":"ZenkakuHankaku","qualname":"::key::Key::ZenkakuHankaku","value":"Key::ZenkakuHankaku","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Zenkaku/Hankaku (full-width/half-width) toggle key. (<code class=\"android\">KEYCODE_ZENKAKU_HANKAKU</code>)\n","sig":null,"attributes":[{"value":"/ The Zenkaku/Hankaku (full-width/half-width) toggle key. (<code class=\"android\">KEYCODE_ZENKAKU_HANKAKU</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":44549,"byte_end":44663,"line_start":229,"line_end":229,"column_start":5,"column_end":119}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1057},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":44752,"byte_end":44754,"line_start":232,"line_end":232,"column_start":5,"column_end":7},"name":"F1","qualname":"::key::Key::F1","value":"Key::F1","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The F1 key, a general purpose function key, as index 1.\n","sig":null,"attributes":[{"value":"/ The F1 key, a general purpose function key, as index 1.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":44688,"byte_end":44747,"line_start":231,"line_end":231,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1059},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":44824,"byte_end":44826,"line_start":234,"line_end":234,"column_start":5,"column_end":7},"name":"F2","qualname":"::key::Key::F2","value":"Key::F2","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The F2 key, a general purpose function key, as index 2.\n","sig":null,"attributes":[{"value":"/ The F2 key, a general purpose function key, as index 2.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":44760,"byte_end":44819,"line_start":233,"line_end":233,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1061},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":44896,"byte_end":44898,"line_start":236,"line_end":236,"column_start":5,"column_end":7},"name":"F3","qualname":"::key::Key::F3","value":"Key::F3","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The F3 key, a general purpose function key, as index 3.\n","sig":null,"attributes":[{"value":"/ The F3 key, a general purpose function key, as index 3.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":44832,"byte_end":44891,"line_start":235,"line_end":235,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1063},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":44968,"byte_end":44970,"line_start":238,"line_end":238,"column_start":5,"column_end":7},"name":"F4","qualname":"::key::Key::F4","value":"Key::F4","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The F4 key, a general purpose function key, as index 4.\n","sig":null,"attributes":[{"value":"/ The F4 key, a general purpose function key, as index 4.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":44904,"byte_end":44963,"line_start":237,"line_end":237,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1065},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":45040,"byte_end":45042,"line_start":240,"line_end":240,"column_start":5,"column_end":7},"name":"F5","qualname":"::key::Key::F5","value":"Key::F5","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The F5 key, a general purpose function key, as index 5.\n","sig":null,"attributes":[{"value":"/ The F5 key, a general purpose function key, as index 5.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":44976,"byte_end":45035,"line_start":239,"line_end":239,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1067},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":45112,"byte_end":45114,"line_start":242,"line_end":242,"column_start":5,"column_end":7},"name":"F6","qualname":"::key::Key::F6","value":"Key::F6","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The F6 key, a general purpose function key, as index 6.\n","sig":null,"attributes":[{"value":"/ The F6 key, a general purpose function key, as index 6.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":45048,"byte_end":45107,"line_start":241,"line_end":241,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1069},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":45184,"byte_end":45186,"line_start":244,"line_end":244,"column_start":5,"column_end":7},"name":"F7","qualname":"::key::Key::F7","value":"Key::F7","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The F7 key, a general purpose function key, as index 7.\n","sig":null,"attributes":[{"value":"/ The F7 key, a general purpose function key, as index 7.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":45120,"byte_end":45179,"line_start":243,"line_end":243,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1071},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":45256,"byte_end":45258,"line_start":246,"line_end":246,"column_start":5,"column_end":7},"name":"F8","qualname":"::key::Key::F8","value":"Key::F8","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The F8 key, a general purpose function key, as index 8.\n","sig":null,"attributes":[{"value":"/ The F8 key, a general purpose function key, as index 8.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":45192,"byte_end":45251,"line_start":245,"line_end":245,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1073},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":45328,"byte_end":45330,"line_start":248,"line_end":248,"column_start":5,"column_end":7},"name":"F9","qualname":"::key::Key::F9","value":"Key::F9","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The F9 key, a general purpose function key, as index 9.\n","sig":null,"attributes":[{"value":"/ The F9 key, a general purpose function key, as index 9.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":45264,"byte_end":45323,"line_start":247,"line_end":247,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1075},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":45402,"byte_end":45405,"line_start":250,"line_end":250,"column_start":5,"column_end":8},"name":"F10","qualname":"::key::Key::F10","value":"Key::F10","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The F10 key, a general purpose function key, as index 10.\n","sig":null,"attributes":[{"value":"/ The F10 key, a general purpose function key, as index 10.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":45336,"byte_end":45397,"line_start":249,"line_end":249,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1077},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":45477,"byte_end":45480,"line_start":252,"line_end":252,"column_start":5,"column_end":8},"name":"F11","qualname":"::key::Key::F11","value":"Key::F11","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The F11 key, a general purpose function key, as index 11.\n","sig":null,"attributes":[{"value":"/ The F11 key, a general purpose function key, as index 11.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":45411,"byte_end":45472,"line_start":251,"line_end":251,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1079},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":45552,"byte_end":45555,"line_start":254,"line_end":254,"column_start":5,"column_end":8},"name":"F12","qualname":"::key::Key::F12","value":"Key::F12","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The F12 key, a general purpose function key, as index 12.\n","sig":null,"attributes":[{"value":"/ The F12 key, a general purpose function key, as index 12.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":45486,"byte_end":45547,"line_start":253,"line_end":253,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":45619,"byte_end":45624,"line_start":256,"line_end":256,"column_start":5,"column_end":10},"name":"Soft1","qualname":"::key::Key::Soft1","value":"Key::Soft1","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" General purpose virtual function key, as index 1.\n","sig":null,"attributes":[{"value":"/ General purpose virtual function key, as index 1.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":45561,"byte_end":45614,"line_start":255,"line_end":255,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1083},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":45688,"byte_end":45693,"line_start":258,"line_end":258,"column_start":5,"column_end":10},"name":"Soft2","qualname":"::key::Key::Soft2","value":"Key::Soft2","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" General purpose virtual function key, as index 2.\n","sig":null,"attributes":[{"value":"/ General purpose virtual function key, as index 2.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":45630,"byte_end":45683,"line_start":257,"line_end":257,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1085},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":45757,"byte_end":45762,"line_start":260,"line_end":260,"column_start":5,"column_end":10},"name":"Soft3","qualname":"::key::Key::Soft3","value":"Key::Soft3","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" General purpose virtual function key, as index 3.\n","sig":null,"attributes":[{"value":"/ General purpose virtual function key, as index 3.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":45699,"byte_end":45752,"line_start":259,"line_end":259,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1087},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":45826,"byte_end":45831,"line_start":262,"line_end":262,"column_start":5,"column_end":10},"name":"Soft4","qualname":"::key::Key::Soft4","value":"Key::Soft4","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" General purpose virtual function key, as index 4.\n","sig":null,"attributes":[{"value":"/ General purpose virtual function key, as index 4.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":45768,"byte_end":45821,"line_start":261,"line_end":261,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1089},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":46075,"byte_end":46086,"line_start":264,"line_end":264,"column_start":5,"column_end":16},"name":"ChannelDown","qualname":"::key::Key::ChannelDown","value":"Key::ChannelDown","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Select next (numerically or logically) lower channel. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_MEDIA_CHANNEL_DOWN</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_CHANNEL_DOWN</code></code>)\n","sig":null,"attributes":[{"value":"/ Select next (numerically or logically) lower channel. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_MEDIA_CHANNEL_DOWN</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_CHANNEL_DOWN</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":45837,"byte_end":46070,"line_start":263,"line_end":263,"column_start":5,"column_end":238}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1091},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":46327,"byte_end":46336,"line_start":266,"line_end":266,"column_start":5,"column_end":14},"name":"ChannelUp","qualname":"::key::Key::ChannelUp","value":"Key::ChannelUp","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Select next (numerically or logically) higher channel. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_MEDIA_CHANNEL_UP</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_CHANNEL_UP</code></code>)\n","sig":null,"attributes":[{"value":"/ Select next (numerically or logically) higher channel. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_MEDIA_CHANNEL_UP</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_CHANNEL_UP</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":46092,"byte_end":46322,"line_start":265,"line_end":265,"column_start":5,"column_end":235}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":46485,"byte_end":46490,"line_start":268,"line_end":268,"column_start":5,"column_end":10},"name":"Close","qualname":"::key::Key::Close","value":"Key::Close","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Close the current document or message (Note: This doesn’t close the application). (<code class=\"appcommand\">APPCOMMAND_CLOSE</code>)\n","sig":null,"attributes":[{"value":"/ Close the current document or message (Note: This doesn’t close the application). (<code class=\"appcommand\">APPCOMMAND_CLOSE</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":46342,"byte_end":46480,"line_start":267,"line_end":267,"column_start":5,"column_end":141}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1095},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":46609,"byte_end":46620,"line_start":270,"line_end":270,"column_start":5,"column_end":16},"name":"MailForward","qualname":"::key::Key::MailForward","value":"Key::MailForward","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Open an editor to forward the current message. (<code class=\"appcommand\">APPCOMMAND_FORWARD_MAIL</code>)\n","sig":null,"attributes":[{"value":"/ Open an editor to forward the current message. (<code class=\"appcommand\">APPCOMMAND_FORWARD_MAIL</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":46496,"byte_end":46604,"line_start":269,"line_end":269,"column_start":5,"column_end":113}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1097},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":46741,"byte_end":46750,"line_start":272,"line_end":272,"column_start":5,"column_end":14},"name":"MailReply","qualname":"::key::Key::MailReply","value":"Key::MailReply","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Open an editor to reply to the current message. (<code class=\"appcommand\">APPCOMMAND_REPLY_TO_MAIL</code>)\n","sig":null,"attributes":[{"value":"/ Open an editor to reply to the current message. (<code class=\"appcommand\">APPCOMMAND_REPLY_TO_MAIL</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":46626,"byte_end":46736,"line_start":271,"line_end":271,"column_start":5,"column_end":115}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1099},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":46845,"byte_end":46853,"line_start":274,"line_end":274,"column_start":5,"column_end":13},"name":"MailSend","qualname":"::key::Key::MailSend","value":"Key::MailSend","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Send the current message. (<code class=\"appcommand\">APPCOMMAND_SEND_MAIL</code>)\n","sig":null,"attributes":[{"value":"/ Send the current message. (<code class=\"appcommand\">APPCOMMAND_SEND_MAIL</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":46756,"byte_end":46840,"line_start":273,"line_end":273,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1101},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":46982,"byte_end":46992,"line_start":276,"line_end":276,"column_start":5,"column_end":15},"name":"MediaClose","qualname":"::key::Key::MediaClose","value":"Key::MediaClose","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Close the current media, for example to close a CD or DVD tray. (<code class=\"android\">KEYCODE_MEDIA_CLOSE</code>)\n","sig":null,"attributes":[{"value":"/ Close the current media, for example to close a CD or DVD tray. (<code class=\"android\">KEYCODE_MEDIA_CLOSE</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":46859,"byte_end":46977,"line_start":275,"line_end":275,"column_start":5,"column_end":123}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1103},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":47301,"byte_end":47317,"line_start":278,"line_end":278,"column_start":5,"column_end":21},"name":"MediaFastForward","qualname":"::key::Key::MediaFastForward","value":"Key::MediaFastForward","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Initiate or continue forward playback at faster than normal speed, or increase speed if already fast forwarding. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_MEDIA_FAST_FORWARD</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_MEDIA_FAST_FORWARD</code></code>)\n","sig":null,"attributes":[{"value":"/ Initiate or continue forward playback at faster than normal speed, or increase speed if already fast forwarding. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_MEDIA_FAST_FORWARD</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_MEDIA_FAST_FORWARD</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":46998,"byte_end":47296,"line_start":277,"line_end":277,"column_start":5,"column_end":303}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1105},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":47688,"byte_end":47698,"line_start":281,"line_end":281,"column_start":5,"column_end":15},"name":"MediaPause","qualname":"::key::Key::MediaPause","value":"Key::MediaPause","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Pause the currently playing media. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_MEDIA_PAUSE</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_MEDIA_PAUSE</code></code>)\n <p class=\"note\" role=\"note\">Media controller devices should use this value rather than <code class=\"key\">\"Pause\"</code> for their pause keys.</p>\n","sig":null,"attributes":[{"value":"/ Pause the currently playing media. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_MEDIA_PAUSE</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_MEDIA_PAUSE</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":47323,"byte_end":47529,"line_start":279,"line_end":279,"column_start":5,"column_end":211}},{"value":"/ <p class=\"note\" role=\"note\">Media controller devices should use this value rather than <code class=\"key\">\"Pause\"</code> for their pause keys.</p>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":47534,"byte_end":47683,"line_start":280,"line_end":280,"column_start":5,"column_end":154}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1107},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":47973,"byte_end":47982,"line_start":283,"line_end":283,"column_start":5,"column_end":14},"name":"MediaPlay","qualname":"::key::Key::MediaPlay","value":"Key::MediaPlay","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Initiate or continue media playback at normal speed, if not currently playing at normal speed. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_MEDIA_PLAY</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_MEDIA_PLAY</code></code>)\n","sig":null,"attributes":[{"value":"/ Initiate or continue media playback at normal speed, if not currently playing at normal speed. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_MEDIA_PLAY</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_MEDIA_PLAY</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":47704,"byte_end":47968,"line_start":282,"line_end":282,"column_start":5,"column_end":269}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1109},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":48218,"byte_end":48232,"line_start":285,"line_end":285,"column_start":5,"column_end":19},"name":"MediaPlayPause","qualname":"::key::Key::MediaPlayPause","value":"Key::MediaPlayPause","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle media between play and pause states. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_MEDIA_PLAY_PAUSE</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_MEDIA_PLAY_PAUSE</code></code>)\n","sig":null,"attributes":[{"value":"/ Toggle media between play and pause states. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_MEDIA_PLAY_PAUSE</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_MEDIA_PLAY_PAUSE</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":47988,"byte_end":48213,"line_start":284,"line_end":284,"column_start":5,"column_end":230}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1111},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":48474,"byte_end":48485,"line_start":287,"line_end":287,"column_start":5,"column_end":16},"name":"MediaRecord","qualname":"::key::Key::MediaRecord","value":"Key::MediaRecord","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Initiate or resume recording of currently selected media. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_MEDIA_RECORD</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_MEDIA_RECORD</code></code>)\n","sig":null,"attributes":[{"value":"/ Initiate or resume recording of currently selected media. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_MEDIA_RECORD</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_MEDIA_RECORD</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":48238,"byte_end":48469,"line_start":286,"line_end":286,"column_start":5,"column_end":236}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1113},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":48776,"byte_end":48787,"line_start":289,"line_end":289,"column_start":5,"column_end":16},"name":"MediaRewind","qualname":"::key::Key::MediaRewind","value":"Key::MediaRewind","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Initiate or continue reverse playback at faster than normal speed, or increase speed if already rewinding. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_MEDIA_REWIND</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_MEDIA_REWIND</code></code>)\n","sig":null,"attributes":[{"value":"/ Initiate or continue reverse playback at faster than normal speed, or increase speed if already rewinding. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_MEDIA_REWIND</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_MEDIA_REWIND</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":48491,"byte_end":48771,"line_start":288,"line_end":288,"column_start":5,"column_end":285}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1115},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":49057,"byte_end":49066,"line_start":291,"line_end":291,"column_start":5,"column_end":14},"name":"MediaStop","qualname":"::key::Key::MediaStop","value":"Key::MediaStop","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Stop media playing, pausing, forwarding, rewinding, or recording, if not already stopped. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_MEDIA_STOP</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_MEDIA_STOP</code></code>)\n","sig":null,"attributes":[{"value":"/ Stop media playing, pausing, forwarding, rewinding, or recording, if not already stopped. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_MEDIA_STOP</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_MEDIA_STOP</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":48793,"byte_end":49052,"line_start":290,"line_end":290,"column_start":5,"column_end":264}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":49288,"byte_end":49302,"line_start":293,"line_end":293,"column_start":5,"column_end":19},"name":"MediaTrackNext","qualname":"::key::Key::MediaTrackNext","value":"Key::MediaTrackNext","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Seek to next media or program track. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_MEDIA_NEXTTRACK</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_MEDIA_NEXT</code></code>)\n","sig":null,"attributes":[{"value":"/ Seek to next media or program track. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_MEDIA_NEXTTRACK</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_MEDIA_NEXT</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":49072,"byte_end":49283,"line_start":292,"line_end":292,"column_start":5,"column_end":216}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1119},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":49536,"byte_end":49554,"line_start":295,"line_end":295,"column_start":5,"column_end":23},"name":"MediaTrackPrevious","qualname":"::key::Key::MediaTrackPrevious","value":"Key::MediaTrackPrevious","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Seek to previous media or program track. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_MEDIA_PREVIOUSTRACK</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_MEDIA_PREVIOUS</code></code>)\n","sig":null,"attributes":[{"value":"/ Seek to previous media or program track. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_MEDIA_PREVIOUSTRACK</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_MEDIA_PREVIOUS</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":49308,"byte_end":49531,"line_start":294,"line_end":294,"column_start":5,"column_end":228}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1121},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":49649,"byte_end":49652,"line_start":297,"line_end":297,"column_start":5,"column_end":8},"name":"New","qualname":"::key::Key::New","value":"Key::New","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Open a new document or message. (<code class=\"appcommand\">APPCOMMAND_NEW</code>)\n","sig":null,"attributes":[{"value":"/ Open a new document or message. (<code class=\"appcommand\">APPCOMMAND_NEW</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":49560,"byte_end":49644,"line_start":296,"line_end":296,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1123},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":49754,"byte_end":49758,"line_start":299,"line_end":299,"column_start":5,"column_end":9},"name":"Open","qualname":"::key::Key::Open","value":"Key::Open","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Open an existing document or message. (<code class=\"appcommand\">APPCOMMAND_OPEN</code>)\n","sig":null,"attributes":[{"value":"/ Open an existing document or message. (<code class=\"appcommand\">APPCOMMAND_OPEN</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":49658,"byte_end":49749,"line_start":298,"line_end":298,"column_start":5,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1125},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":49862,"byte_end":49867,"line_start":301,"line_end":301,"column_start":5,"column_end":10},"name":"Print","qualname":"::key::Key::Print","value":"Key::Print","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Print the current document or message. (<code class=\"appcommand\">APPCOMMAND_PRINT</code>)\n","sig":null,"attributes":[{"value":"/ Print the current document or message. (<code class=\"appcommand\">APPCOMMAND_PRINT</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":49764,"byte_end":49857,"line_start":300,"line_end":300,"column_start":5,"column_end":98}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1127},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":49969,"byte_end":49973,"line_start":303,"line_end":303,"column_start":5,"column_end":9},"name":"Save","qualname":"::key::Key::Save","value":"Key::Save","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Save the current document or message. (<code class=\"appcommand\">APPCOMMAND_SAVE</code>)\n","sig":null,"attributes":[{"value":"/ Save the current document or message. (<code class=\"appcommand\">APPCOMMAND_SAVE</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":49873,"byte_end":49964,"line_start":302,"line_end":302,"column_start":5,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1129},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":50090,"byte_end":50100,"line_start":305,"line_end":305,"column_start":5,"column_end":15},"name":"SpellCheck","qualname":"::key::Key::SpellCheck","value":"Key::SpellCheck","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Spellcheck the current document or selection. (<code class=\"appcommand\">APPCOMMAND_SPELL_CHECK</code>)\n","sig":null,"attributes":[{"value":"/ Spellcheck the current document or selection. (<code class=\"appcommand\">APPCOMMAND_SPELL_CHECK</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":49979,"byte_end":50085,"line_start":304,"line_end":304,"column_start":5,"column_end":111}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1131},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":50273,"byte_end":50278,"line_start":308,"line_end":308,"column_start":5,"column_end":10},"name":"Key11","qualname":"::key::Key::Key11","value":"Key::Key11","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The <code class=\"keycap\">11</code> key found on media numpads that\n have buttons from <code class=\"keycap\">1</code> ... <code class=\"keycap\">12</code>.\n","sig":null,"attributes":[{"value":"/ The <code class=\"keycap\">11</code> key found on media numpads that","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":50106,"byte_end":50176,"line_start":306,"line_end":306,"column_start":5,"column_end":75}},{"value":"/ have buttons from <code class=\"keycap\">1</code> ... <code class=\"keycap\">12</code>.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":50181,"byte_end":50268,"line_start":307,"line_end":307,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1133},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":50451,"byte_end":50456,"line_start":311,"line_end":311,"column_start":5,"column_end":10},"name":"Key12","qualname":"::key::Key::Key12","value":"Key::Key12","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The <code class=\"keycap\">12</code> key found on media numpads that\n have buttons from <code class=\"keycap\">1</code> ... <code class=\"keycap\">12</code>.\n","sig":null,"attributes":[{"value":"/ The <code class=\"keycap\">12</code> key found on media numpads that","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":50284,"byte_end":50354,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ have buttons from <code class=\"keycap\">1</code> ... <code class=\"keycap\">12</code>.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":50359,"byte_end":50446,"line_start":310,"line_end":310,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1135},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":50549,"byte_end":50565,"line_start":313,"line_end":313,"column_start":5,"column_end":21},"name":"AudioBalanceLeft","qualname":"::key::Key::AudioBalanceLeft","value":"Key::AudioBalanceLeft","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Adjust audio balance leftward. (<code class=\"vk\">VK_AUDIO_BALANCE_LEFT</code>)\n","sig":null,"attributes":[{"value":"/ Adjust audio balance leftward. (<code class=\"vk\">VK_AUDIO_BALANCE_LEFT</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":50462,"byte_end":50544,"line_start":312,"line_end":312,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1137},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":50660,"byte_end":50677,"line_start":315,"line_end":315,"column_start":5,"column_end":22},"name":"AudioBalanceRight","qualname":"::key::Key::AudioBalanceRight","value":"Key::AudioBalanceRight","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Adjust audio balance rightward. (<code class=\"vk\">VK_AUDIO_BALANCE_RIGHT</code>)\n","sig":null,"attributes":[{"value":"/ Adjust audio balance rightward. (<code class=\"vk\">VK_AUDIO_BALANCE_RIGHT</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":50571,"byte_end":50655,"line_start":314,"line_end":314,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1139},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":50913,"byte_end":50931,"line_start":317,"line_end":317,"column_start":5,"column_end":23},"name":"AudioBassBoostDown","qualname":"::key::Key::AudioBassBoostDown","value":"Key::AudioBassBoostDown","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Decrease audio bass boost or cycle down through bass boost states. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_BASS_DOWN</code></code>, <code class=\"vk\"><code class=\"vk\">VK_BASS_BOOST_DOWN</code></code>)\n","sig":null,"attributes":[{"value":"/ Decrease audio bass boost or cycle down through bass boost states. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_BASS_DOWN</code></code>, <code class=\"vk\"><code class=\"vk\">VK_BASS_BOOST_DOWN</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":50683,"byte_end":50908,"line_start":316,"line_end":316,"column_start":5,"column_end":230}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1141},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":51027,"byte_end":51047,"line_start":319,"line_end":319,"column_start":5,"column_end":25},"name":"AudioBassBoostToggle","qualname":"::key::Key::AudioBassBoostToggle","value":"Key::AudioBassBoostToggle","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle bass boost on/off. (<code class=\"appcommand\">APPCOMMAND_BASS_BOOST</code>)\n","sig":null,"attributes":[{"value":"/ Toggle bass boost on/off. (<code class=\"appcommand\">APPCOMMAND_BASS_BOOST</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":50937,"byte_end":51022,"line_start":318,"line_end":318,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1143},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":51277,"byte_end":51293,"line_start":321,"line_end":321,"column_start":5,"column_end":21},"name":"AudioBassBoostUp","qualname":"::key::Key::AudioBassBoostUp","value":"Key::AudioBassBoostUp","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Increase audio bass boost or cycle up through bass boost states. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_BASS_UP</code></code>, <code class=\"vk\"><code class=\"vk\">VK_BASS_BOOST_UP</code></code>)\n","sig":null,"attributes":[{"value":"/ Increase audio bass boost or cycle up through bass boost states. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_BASS_UP</code></code>, <code class=\"vk\"><code class=\"vk\">VK_BASS_BOOST_UP</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":51053,"byte_end":51272,"line_start":320,"line_end":320,"column_start":5,"column_end":224}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1145},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":51382,"byte_end":51397,"line_start":323,"line_end":323,"column_start":5,"column_end":20},"name":"AudioFaderFront","qualname":"::key::Key::AudioFaderFront","value":"Key::AudioFaderFront","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Adjust audio fader towards front. (<code class=\"vk\">VK_FADER_FRONT</code>)\n","sig":null,"attributes":[{"value":"/ Adjust audio fader towards front. (<code class=\"vk\">VK_FADER_FRONT</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":51299,"byte_end":51377,"line_start":322,"line_end":322,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1147},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":51484,"byte_end":51498,"line_start":325,"line_end":325,"column_start":5,"column_end":19},"name":"AudioFaderRear","qualname":"::key::Key::AudioFaderRear","value":"Key::AudioFaderRear","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Adjust audio fader towards rear. (<code class=\"vk\">VK_FADER_REAR</code>)\n","sig":null,"attributes":[{"value":"/ Adjust audio fader towards rear. (<code class=\"vk\">VK_FADER_REAR</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":51403,"byte_end":51479,"line_start":324,"line_end":324,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1149},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":51612,"byte_end":51633,"line_start":327,"line_end":327,"column_start":5,"column_end":26},"name":"AudioSurroundModeNext","qualname":"::key::Key::AudioSurroundModeNext","value":"Key::AudioSurroundModeNext","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Advance surround audio mode to next available mode. (<code class=\"vk\">VK_SURROUND_MODE_NEXT</code>)\n","sig":null,"attributes":[{"value":"/ Advance surround audio mode to next available mode. (<code class=\"vk\">VK_SURROUND_MODE_NEXT</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":51504,"byte_end":51607,"line_start":326,"line_end":326,"column_start":5,"column_end":108}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1151},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":51721,"byte_end":51736,"line_start":329,"line_end":329,"column_start":5,"column_end":20},"name":"AudioTrebleDown","qualname":"::key::Key::AudioTrebleDown","value":"Key::AudioTrebleDown","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Decrease treble. (<code class=\"appcommand\">APPCOMMAND_TREBLE_DOWN</code>)\n","sig":null,"attributes":[{"value":"/ Decrease treble. (<code class=\"appcommand\">APPCOMMAND_TREBLE_DOWN</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":51639,"byte_end":51716,"line_start":328,"line_end":328,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1153},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":51822,"byte_end":51835,"line_start":331,"line_end":331,"column_start":5,"column_end":18},"name":"AudioTrebleUp","qualname":"::key::Key::AudioTrebleUp","value":"Key::AudioTrebleUp","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Increase treble. (<code class=\"appcommand\">APPCOMMAND_TREBLE_UP</code>)\n","sig":null,"attributes":[{"value":"/ Increase treble. (<code class=\"appcommand\">APPCOMMAND_TREBLE_UP</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":51742,"byte_end":51817,"line_start":330,"line_end":330,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":52040,"byte_end":52055,"line_start":333,"line_end":333,"column_start":5,"column_end":20},"name":"AudioVolumeDown","qualname":"::key::Key::AudioVolumeDown","value":"Key::AudioVolumeDown","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Decrease audio volume. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_VOLUME_DOWN</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_VOLUME_DOWN</code></code>)\n","sig":null,"attributes":[{"value":"/ Decrease audio volume. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_VOLUME_DOWN</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_VOLUME_DOWN</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":51841,"byte_end":52035,"line_start":332,"line_end":332,"column_start":5,"column_end":199}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1157},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":52256,"byte_end":52269,"line_start":335,"line_end":335,"column_start":5,"column_end":18},"name":"AudioVolumeUp","qualname":"::key::Key::AudioVolumeUp","value":"Key::AudioVolumeUp","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Increase audio volume. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_VOLUME_UP</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_VOLUME_UP</code></code>)\n","sig":null,"attributes":[{"value":"/ Increase audio volume. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_VOLUME_UP</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_VOLUME_UP</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":52061,"byte_end":52251,"line_start":334,"line_end":334,"column_start":5,"column_end":195}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1159},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":52502,"byte_end":52517,"line_start":337,"line_end":337,"column_start":5,"column_end":20},"name":"AudioVolumeMute","qualname":"::key::Key::AudioVolumeMute","value":"Key::AudioVolumeMute","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle between muted state and prior volume level. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_VOLUME_MUTE</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_VOLUME_MUTE</code></code>)\n","sig":null,"attributes":[{"value":"/ Toggle between muted state and prior volume level. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_VOLUME_MUTE</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_VOLUME_MUTE</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":52275,"byte_end":52497,"line_start":336,"line_end":336,"column_start":5,"column_end":227}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1161},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":52624,"byte_end":52640,"line_start":339,"line_end":339,"column_start":5,"column_end":21},"name":"MicrophoneToggle","qualname":"::key::Key::MicrophoneToggle","value":"Key::MicrophoneToggle","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle the microphone on/off. (<code class=\"appcommand\">APPCOMMAND_MIC_ON_OFF_TOGGLE</code>)\n","sig":null,"attributes":[{"value":"/ Toggle the microphone on/off. (<code class=\"appcommand\">APPCOMMAND_MIC_ON_OFF_TOGGLE</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":52523,"byte_end":52619,"line_start":338,"line_end":338,"column_start":5,"column_end":101}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1163},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":52750,"byte_end":52770,"line_start":341,"line_end":341,"column_start":5,"column_end":25},"name":"MicrophoneVolumeDown","qualname":"::key::Key::MicrophoneVolumeDown","value":"Key::MicrophoneVolumeDown","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Decrease microphone volume. (<code class=\"appcommand\">APPCOMMAND_MICROPHONE_VOLUME_DOWN</code>)\n","sig":null,"attributes":[{"value":"/ Decrease microphone volume. (<code class=\"appcommand\">APPCOMMAND_MICROPHONE_VOLUME_DOWN</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":52646,"byte_end":52745,"line_start":340,"line_end":340,"column_start":5,"column_end":104}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1165},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":52878,"byte_end":52896,"line_start":343,"line_end":343,"column_start":5,"column_end":23},"name":"MicrophoneVolumeUp","qualname":"::key::Key::MicrophoneVolumeUp","value":"Key::MicrophoneVolumeUp","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Increase microphone volume. (<code class=\"appcommand\">APPCOMMAND_MICROPHONE_VOLUME_UP</code>)\n","sig":null,"attributes":[{"value":"/ Increase microphone volume. (<code class=\"appcommand\">APPCOMMAND_MICROPHONE_VOLUME_UP</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":52776,"byte_end":52873,"line_start":342,"line_end":342,"column_start":5,"column_end":102}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1167},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":53103,"byte_end":53123,"line_start":345,"line_end":345,"column_start":5,"column_end":25},"name":"MicrophoneVolumeMute","qualname":"::key::Key::MicrophoneVolumeMute","value":"Key::MicrophoneVolumeMute","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Mute the microphone. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_MICROPHONE_VOLUME_MUTE</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_MUTE</code></code>)\n","sig":null,"attributes":[{"value":"/ Mute the microphone. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_MICROPHONE_VOLUME_MUTE</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_MUTE</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":52902,"byte_end":53098,"line_start":344,"line_end":344,"column_start":5,"column_end":201}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1169},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":53258,"byte_end":53278,"line_start":347,"line_end":347,"column_start":5,"column_end":25},"name":"SpeechCorrectionList","qualname":"::key::Key::SpeechCorrectionList","value":"Key::SpeechCorrectionList","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Show correction list when a word is incorrectly identified. (<code class=\"appcommand\">APPCOMMAND_CORRECTION_LIST</code>)\n","sig":null,"attributes":[{"value":"/ Show correction list when a word is incorrectly identified. (<code class=\"appcommand\">APPCOMMAND_CORRECTION_LIST</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":53129,"byte_end":53253,"line_start":346,"line_end":346,"column_start":5,"column_end":129}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1171},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":53427,"byte_end":53444,"line_start":349,"line_end":349,"column_start":5,"column_end":22},"name":"SpeechInputToggle","qualname":"::key::Key::SpeechInputToggle","value":"Key::SpeechInputToggle","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle between dictation mode and command/control mode. (<code class=\"appcommand\">APPCOMMAND_DICTATE_OR_COMMAND_CONTROL_TOGGLE</code>)\n","sig":null,"attributes":[{"value":"/ Toggle between dictation mode and command/control mode. (<code class=\"appcommand\">APPCOMMAND_DICTATE_OR_COMMAND_CONTROL_TOGGLE</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":53284,"byte_end":53422,"line_start":348,"line_end":348,"column_start":5,"column_end":143}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1173},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":53659,"byte_end":53677,"line_start":351,"line_end":351,"column_start":5,"column_end":23},"name":"LaunchApplication1","qualname":"::key::Key::LaunchApplication1","value":"Key::LaunchApplication1","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The first generic \"LaunchApplication\" key. This is commonly associated with launching \"My Computer\", and may have a computer symbol on the key. (<code class=\"appcommand\">APPCOMMAND_LAUNCH_APP1</code>)\n","sig":null,"attributes":[{"value":"/ The first generic \"LaunchApplication\" key. This is commonly associated with launching \"My Computer\", and may have a computer symbol on the key. (<code class=\"appcommand\">APPCOMMAND_LAUNCH_APP1</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":53450,"byte_end":53654,"line_start":350,"line_end":350,"column_start":5,"column_end":209}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1175},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54004,"byte_end":54022,"line_start":353,"line_end":353,"column_start":5,"column_end":23},"name":"LaunchApplication2","qualname":"::key::Key::LaunchApplication2","value":"Key::LaunchApplication2","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The second generic \"LaunchApplication\" key. This is commonly associated with launching \"Calculator\", and may have a calculator symbol on the key. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_LAUNCH_APP2</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_CALCULATOR</code></code>)\n","sig":null,"attributes":[{"value":"/ The second generic \"LaunchApplication\" key. This is commonly associated with launching \"Calculator\", and may have a calculator symbol on the key. (<code class=\"appcommand\"><code class=\"appcommand\">APPCOMMAND_LAUNCH_APP2</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_CALCULATOR</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":53683,"byte_end":53999,"line_start":352,"line_end":352,"column_start":5,"column_end":321}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1177},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54104,"byte_end":54118,"line_start":355,"line_end":355,"column_start":5,"column_end":19},"name":"LaunchCalendar","qualname":"::key::Key::LaunchCalendar","value":"Key::LaunchCalendar","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The \"Calendar\" key. (<code class=\"android\">KEYCODE_CALENDAR</code>)\n","sig":null,"attributes":[{"value":"/ The \"Calendar\" key. (<code class=\"android\">KEYCODE_CALENDAR</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54028,"byte_end":54099,"line_start":354,"line_end":354,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1179},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54200,"byte_end":54214,"line_start":357,"line_end":357,"column_start":5,"column_end":19},"name":"LaunchContacts","qualname":"::key::Key::LaunchContacts","value":"Key::LaunchContacts","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The \"Contacts\" key. (<code class=\"android\">KEYCODE_CONTACTS</code>)\n","sig":null,"attributes":[{"value":"/ The \"Contacts\" key. (<code class=\"android\">KEYCODE_CONTACTS</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54124,"byte_end":54195,"line_start":356,"line_end":356,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1181},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54301,"byte_end":54311,"line_start":359,"line_end":359,"column_start":5,"column_end":15},"name":"LaunchMail","qualname":"::key::Key::LaunchMail","value":"Key::LaunchMail","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The \"Mail\" key. (<code class=\"appcommand\">APPCOMMAND_LAUNCH_MAIL</code>)\n","sig":null,"attributes":[{"value":"/ The \"Mail\" key. (<code class=\"appcommand\">APPCOMMAND_LAUNCH_MAIL</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54220,"byte_end":54296,"line_start":358,"line_end":358,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1183},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54414,"byte_end":54431,"line_start":361,"line_end":361,"column_start":5,"column_end":22},"name":"LaunchMediaPlayer","qualname":"::key::Key::LaunchMediaPlayer","value":"Key::LaunchMediaPlayer","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The \"Media Player\" key. (<code class=\"appcommand\">APPCOMMAND_LAUNCH_MEDIA_SELECT</code>)\n","sig":null,"attributes":[{"value":"/ The \"Media Player\" key. (<code class=\"appcommand\">APPCOMMAND_LAUNCH_MEDIA_SELECT</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54317,"byte_end":54409,"line_start":360,"line_end":360,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1185},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54469,"byte_end":54486,"line_start":363,"line_end":363,"column_start":5,"column_end":22},"name":"LaunchMusicPlayer","qualname":"::key::Key::LaunchMusicPlayer","value":"Key::LaunchMusicPlayer","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The \"Music Player\" key.\n","sig":null,"attributes":[{"value":"/ The \"Music Player\" key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54437,"byte_end":54464,"line_start":362,"line_end":362,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1187},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54517,"byte_end":54528,"line_start":365,"line_end":365,"column_start":5,"column_end":16},"name":"LaunchPhone","qualname":"::key::Key::LaunchPhone","value":"Key::LaunchPhone","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The \"Phone\" key.\n","sig":null,"attributes":[{"value":"/ The \"Phone\" key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54492,"byte_end":54512,"line_start":364,"line_end":364,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1189},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54566,"byte_end":54583,"line_start":367,"line_end":367,"column_start":5,"column_end":22},"name":"LaunchScreenSaver","qualname":"::key::Key::LaunchScreenSaver","value":"Key::LaunchScreenSaver","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The \"Screen Saver\" key.\n","sig":null,"attributes":[{"value":"/ The \"Screen Saver\" key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54534,"byte_end":54561,"line_start":366,"line_end":366,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54620,"byte_end":54637,"line_start":369,"line_end":369,"column_start":5,"column_end":22},"name":"LaunchSpreadsheet","qualname":"::key::Key::LaunchSpreadsheet","value":"Key::LaunchSpreadsheet","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The \"Spreadsheet\" key.\n","sig":null,"attributes":[{"value":"/ The \"Spreadsheet\" key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54589,"byte_end":54615,"line_start":368,"line_end":368,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1193},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54674,"byte_end":54690,"line_start":371,"line_end":371,"column_start":5,"column_end":21},"name":"LaunchWebBrowser","qualname":"::key::Key::LaunchWebBrowser","value":"Key::LaunchWebBrowser","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The \"Web Browser\" key.\n","sig":null,"attributes":[{"value":"/ The \"Web Browser\" key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54643,"byte_end":54669,"line_start":370,"line_end":370,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1195},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54722,"byte_end":54734,"line_start":373,"line_end":373,"column_start":5,"column_end":17},"name":"LaunchWebCam","qualname":"::key::Key::LaunchWebCam","value":"Key::LaunchWebCam","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The \"WebCam\" key.\n","sig":null,"attributes":[{"value":"/ The \"WebCam\" key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54696,"byte_end":54717,"line_start":372,"line_end":372,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1197},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54774,"byte_end":54793,"line_start":375,"line_end":375,"column_start":5,"column_end":24},"name":"LaunchWordProcessor","qualname":"::key::Key::LaunchWordProcessor","value":"Key::LaunchWordProcessor","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The \"Word Processor\" key.\n","sig":null,"attributes":[{"value":"/ The \"Word Processor\" key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54740,"byte_end":54769,"line_start":374,"line_end":374,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1199},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54926,"byte_end":54937,"line_start":377,"line_end":377,"column_start":5,"column_end":16},"name":"BrowserBack","qualname":"::key::Key::BrowserBack","value":"Key::BrowserBack","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Navigate to previous content or page in current history. (<code class=\"appcommand\">APPCOMMAND_BROWSER_BACKWARD</code>)\n","sig":null,"attributes":[{"value":"/ Navigate to previous content or page in current history. (<code class=\"appcommand\">APPCOMMAND_BROWSER_BACKWARD</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54799,"byte_end":54921,"line_start":376,"line_end":376,"column_start":5,"column_end":127}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1201},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":55050,"byte_end":55066,"line_start":379,"line_end":379,"column_start":5,"column_end":21},"name":"BrowserFavorites","qualname":"::key::Key::BrowserFavorites","value":"Key::BrowserFavorites","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Open the list of browser favorites. (<code class=\"appcommand\">APPCOMMAND_BROWSER_FAVORITES</code>)\n","sig":null,"attributes":[{"value":"/ Open the list of browser favorites. (<code class=\"appcommand\">APPCOMMAND_BROWSER_FAVORITES</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":54943,"byte_end":55045,"line_start":378,"line_end":378,"column_start":5,"column_end":107}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1203},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":55194,"byte_end":55208,"line_start":381,"line_end":381,"column_start":5,"column_end":19},"name":"BrowserForward","qualname":"::key::Key::BrowserForward","value":"Key::BrowserForward","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Navigate to next content or page in current history. (<code class=\"appcommand\">APPCOMMAND_BROWSER_FORWARD</code>)\n","sig":null,"attributes":[{"value":"/ Navigate to next content or page in current history. (<code class=\"appcommand\">APPCOMMAND_BROWSER_FORWARD</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":55072,"byte_end":55189,"line_start":380,"line_end":380,"column_start":5,"column_end":122}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":55320,"byte_end":55331,"line_start":383,"line_end":383,"column_start":5,"column_end":16},"name":"BrowserHome","qualname":"::key::Key::BrowserHome","value":"Key::BrowserHome","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Go to the user’s preferred home page. (<code class=\"appcommand\">APPCOMMAND_BROWSER_HOME</code>)\n","sig":null,"attributes":[{"value":"/ Go to the user’s preferred home page. (<code class=\"appcommand\">APPCOMMAND_BROWSER_HOME</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":55214,"byte_end":55315,"line_start":382,"line_end":382,"column_start":5,"column_end":104}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1207},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":55443,"byte_end":55457,"line_start":385,"line_end":385,"column_start":5,"column_end":19},"name":"BrowserRefresh","qualname":"::key::Key::BrowserRefresh","value":"Key::BrowserRefresh","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Refresh the current page or content. (<code class=\"appcommand\">APPCOMMAND_BROWSER_REFRESH</code>)\n","sig":null,"attributes":[{"value":"/ Refresh the current page or content. (<code class=\"appcommand\">APPCOMMAND_BROWSER_REFRESH</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":55337,"byte_end":55438,"line_start":384,"line_end":384,"column_start":5,"column_end":106}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1209},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":55575,"byte_end":55588,"line_start":387,"line_end":387,"column_start":5,"column_end":18},"name":"BrowserSearch","qualname":"::key::Key::BrowserSearch","value":"Key::BrowserSearch","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Call up the user’s preferred search page. (<code class=\"appcommand\">APPCOMMAND_BROWSER_SEARCH</code>)\n","sig":null,"attributes":[{"value":"/ Call up the user’s preferred search page. (<code class=\"appcommand\">APPCOMMAND_BROWSER_SEARCH</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":55463,"byte_end":55570,"line_start":386,"line_end":386,"column_start":5,"column_end":110}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1211},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":55702,"byte_end":55713,"line_start":389,"line_end":389,"column_start":5,"column_end":16},"name":"BrowserStop","qualname":"::key::Key::BrowserStop","value":"Key::BrowserStop","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Stop loading the current page or content. (<code class=\"appcommand\">APPCOMMAND_BROWSER_STOP</code>)\n","sig":null,"attributes":[{"value":"/ Stop loading the current page or content. (<code class=\"appcommand\">APPCOMMAND_BROWSER_STOP</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":55594,"byte_end":55697,"line_start":388,"line_end":388,"column_start":5,"column_end":108}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1213},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":55861,"byte_end":55870,"line_start":391,"line_end":391,"column_start":5,"column_end":14},"name":"AppSwitch","qualname":"::key::Key::AppSwitch","value":"Key::AppSwitch","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Application switch key, which provides a list of recent apps to switch between. (<code class=\"android\">KEYCODE_APP_SWITCH</code>)\n","sig":null,"attributes":[{"value":"/ The Application switch key, which provides a list of recent apps to switch between. (<code class=\"android\">KEYCODE_APP_SWITCH</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":55719,"byte_end":55856,"line_start":390,"line_end":390,"column_start":5,"column_end":142}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1215},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":55942,"byte_end":55946,"line_start":393,"line_end":393,"column_start":5,"column_end":9},"name":"Call","qualname":"::key::Key::Call","value":"Key::Call","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Call key. (<code class=\"android\">KEYCODE_CALL</code>)\n","sig":null,"attributes":[{"value":"/ The Call key. (<code class=\"android\">KEYCODE_CALL</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":55876,"byte_end":55937,"line_start":392,"line_end":392,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1217},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":56022,"byte_end":56028,"line_start":395,"line_end":395,"column_start":5,"column_end":11},"name":"Camera","qualname":"::key::Key::Camera","value":"Key::Camera","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Camera key. (<code class=\"android\">KEYCODE_CAMERA</code>)\n","sig":null,"attributes":[{"value":"/ The Camera key. (<code class=\"android\">KEYCODE_CAMERA</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":55952,"byte_end":56017,"line_start":394,"line_end":394,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1219},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":56109,"byte_end":56120,"line_start":397,"line_end":397,"column_start":5,"column_end":16},"name":"CameraFocus","qualname":"::key::Key::CameraFocus","value":"Key::CameraFocus","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Camera focus key. (<code class=\"android\">KEYCODE_FOCUS</code>)\n","sig":null,"attributes":[{"value":"/ The Camera focus key. (<code class=\"android\">KEYCODE_FOCUS</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":56034,"byte_end":56104,"line_start":396,"line_end":396,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1221},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":56199,"byte_end":56206,"line_start":399,"line_end":399,"column_start":5,"column_end":12},"name":"EndCall","qualname":"::key::Key::EndCall","value":"Key::EndCall","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The End Call key. (<code class=\"android\">KEYCODE_ENDCALL</code>)\n","sig":null,"attributes":[{"value":"/ The End Call key. (<code class=\"android\">KEYCODE_ENDCALL</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":56126,"byte_end":56194,"line_start":398,"line_end":398,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1223},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":56278,"byte_end":56284,"line_start":401,"line_end":401,"column_start":5,"column_end":11},"name":"GoBack","qualname":"::key::Key::GoBack","value":"Key::GoBack","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Back key. (<code class=\"android\">KEYCODE_BACK</code>)\n","sig":null,"attributes":[{"value":"/ The Back key. (<code class=\"android\">KEYCODE_BACK</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":56212,"byte_end":56273,"line_start":400,"line_end":400,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1225},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":56397,"byte_end":56403,"line_start":403,"line_end":403,"column_start":5,"column_end":11},"name":"GoHome","qualname":"::key::Key::GoHome","value":"Key::GoHome","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Home key, which goes to the phone’s main screen. (<code class=\"android\">KEYCODE_HOME</code>)\n","sig":null,"attributes":[{"value":"/ The Home key, which goes to the phone’s main screen. (<code class=\"android\">KEYCODE_HOME</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":56290,"byte_end":56392,"line_start":402,"line_end":402,"column_start":5,"column_end":105}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1227},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":56490,"byte_end":56501,"line_start":405,"line_end":405,"column_start":5,"column_end":16},"name":"HeadsetHook","qualname":"::key::Key::HeadsetHook","value":"Key::HeadsetHook","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Headset Hook key. (<code class=\"android\">KEYCODE_HEADSETHOOK</code>)\n","sig":null,"attributes":[{"value":"/ The Headset Hook key. (<code class=\"android\">KEYCODE_HEADSETHOOK</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":56409,"byte_end":56485,"line_start":404,"line_end":404,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1229},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":56543,"byte_end":56559,"line_start":407,"line_end":407,"column_start":5,"column_end":21},"name":"LastNumberRedial","qualname":"::key::Key::LastNumberRedial","value":"Key::LastNumberRedial","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Last Number Redial key.\n","sig":null,"attributes":[{"value":"/ The Last Number Redial key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":56507,"byte_end":56538,"line_start":406,"line_end":406,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1231},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":56647,"byte_end":56659,"line_start":409,"line_end":409,"column_start":5,"column_end":17},"name":"Notification","qualname":"::key::Key::Notification","value":"Key::Notification","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Notification key. (<code class=\"android\">KEYCODE_NOTIFICATION</code>)\n","sig":null,"attributes":[{"value":"/ The Notification key. (<code class=\"android\">KEYCODE_NOTIFICATION</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":56565,"byte_end":56642,"line_start":408,"line_end":408,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":56785,"byte_end":56795,"line_start":411,"line_end":411,"column_start":5,"column_end":15},"name":"MannerMode","qualname":"::key::Key::MannerMode","value":"Key::MannerMode","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle between manner mode state: silent, vibrate, ring, ... (<code class=\"android\">KEYCODE_MANNER_MODE</code>)\n","sig":null,"attributes":[{"value":"/ Toggle between manner mode state: silent, vibrate, ring, ... (<code class=\"android\">KEYCODE_MANNER_MODE</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":56665,"byte_end":56780,"line_start":410,"line_end":410,"column_start":5,"column_end":120}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1235},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":56829,"byte_end":56838,"line_start":413,"line_end":413,"column_start":5,"column_end":14},"name":"VoiceDial","qualname":"::key::Key::VoiceDial","value":"Key::VoiceDial","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The Voice Dial key.\n","sig":null,"attributes":[{"value":"/ The Voice Dial key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":56801,"byte_end":56824,"line_start":412,"line_end":412,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1237},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":56916,"byte_end":56918,"line_start":415,"line_end":415,"column_start":5,"column_end":7},"name":"TV","qualname":"::key::Key::TV","value":"Key::TV","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Switch to viewing TV. (<code class=\"android\">KEYCODE_TV</code>)\n","sig":null,"attributes":[{"value":"/ Switch to viewing TV. (<code class=\"android\">KEYCODE_TV</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":56844,"byte_end":56911,"line_start":414,"line_end":414,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1239},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":56991,"byte_end":56999,"line_start":417,"line_end":417,"column_start":5,"column_end":13},"name":"TV3DMode","qualname":"::key::Key::TV3DMode","value":"Key::TV3DMode","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" TV 3D Mode. (<code class=\"android\">KEYCODE_3D_MODE</code>)\n","sig":null,"attributes":[{"value":"/ TV 3D Mode. (<code class=\"android\">KEYCODE_3D_MODE</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":56924,"byte_end":56986,"line_start":416,"line_end":416,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1241},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":57109,"byte_end":57123,"line_start":419,"line_end":419,"column_start":5,"column_end":19},"name":"TVAntennaCable","qualname":"::key::Key::TVAntennaCable","value":"Key::TVAntennaCable","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle between antenna and cable input. (<code class=\"android\">KEYCODE_TV_ANTENNA_CABLE</code>)\n","sig":null,"attributes":[{"value":"/ Toggle between antenna and cable input. (<code class=\"android\">KEYCODE_TV_ANTENNA_CABLE</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":57005,"byte_end":57104,"line_start":418,"line_end":418,"column_start":5,"column_end":104}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":57216,"byte_end":57234,"line_start":421,"line_end":421,"column_start":5,"column_end":23},"name":"TVAudioDescription","qualname":"::key::Key::TVAudioDescription","value":"Key::TVAudioDescription","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Audio description. (<code class=\"android\">KEYCODE_TV_AUDIO_DESCRIPTION</code>)\n","sig":null,"attributes":[{"value":"/ Audio description. (<code class=\"android\">KEYCODE_TV_AUDIO_DESCRIPTION</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":57129,"byte_end":57211,"line_start":420,"line_end":420,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1245},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":57355,"byte_end":57380,"line_start":423,"line_end":423,"column_start":5,"column_end":30},"name":"TVAudioDescriptionMixDown","qualname":"::key::Key::TVAudioDescriptionMixDown","value":"Key::TVAudioDescriptionMixDown","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Audio description mixing volume down. (<code class=\"android\">KEYCODE_TV_AUDIO_DESCRIPTION_MIX_DOWN</code>)\n","sig":null,"attributes":[{"value":"/ Audio description mixing volume down. (<code class=\"android\">KEYCODE_TV_AUDIO_DESCRIPTION_MIX_DOWN</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":57240,"byte_end":57350,"line_start":422,"line_end":422,"column_start":5,"column_end":115}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1247},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":57497,"byte_end":57520,"line_start":425,"line_end":425,"column_start":5,"column_end":28},"name":"TVAudioDescriptionMixUp","qualname":"::key::Key::TVAudioDescriptionMixUp","value":"Key::TVAudioDescriptionMixUp","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Audio description mixing volume up. (<code class=\"android\">KEYCODE_TV_AUDIO_DESCRIPTION_MIX_UP</code>)\n","sig":null,"attributes":[{"value":"/ Audio description mixing volume up. (<code class=\"android\">KEYCODE_TV_AUDIO_DESCRIPTION_MIX_UP</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":57386,"byte_end":57492,"line_start":424,"line_end":424,"column_start":5,"column_end":111}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1249},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":57605,"byte_end":57619,"line_start":427,"line_end":427,"column_start":5,"column_end":19},"name":"TVContentsMenu","qualname":"::key::Key::TVContentsMenu","value":"Key::TVContentsMenu","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Contents menu. (<code class=\"android\">KEYCODE_TV_CONTENTS_MENU</code>)\n","sig":null,"attributes":[{"value":"/ Contents menu. (<code class=\"android\">KEYCODE_TV_CONTENTS_MENU</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":57526,"byte_end":57600,"line_start":426,"line_end":426,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1251},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":57703,"byte_end":57716,"line_start":429,"line_end":429,"column_start":5,"column_end":18},"name":"TVDataService","qualname":"::key::Key::TVDataService","value":"Key::TVDataService","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Contents menu. (<code class=\"android\">KEYCODE_TV_DATA_SERVICE</code>)\n","sig":null,"attributes":[{"value":"/ Contents menu. (<code class=\"android\">KEYCODE_TV_DATA_SERVICE</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":57625,"byte_end":57698,"line_start":428,"line_end":428,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1253},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":57819,"byte_end":57826,"line_start":431,"line_end":431,"column_start":5,"column_end":12},"name":"TVInput","qualname":"::key::Key::TVInput","value":"Key::TVInput","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Switch the input mode on an external TV. (<code class=\"android\">KEYCODE_TV_INPUT</code>)\n","sig":null,"attributes":[{"value":"/ Switch the input mode on an external TV. (<code class=\"android\">KEYCODE_TV_INPUT</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":57722,"byte_end":57814,"line_start":430,"line_end":430,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1255},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":57930,"byte_end":57947,"line_start":433,"line_end":433,"column_start":5,"column_end":22},"name":"TVInputComponent1","qualname":"::key::Key::TVInputComponent1","value":"Key::TVInputComponent1","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Switch to component input #1. (<code class=\"android\">KEYCODE_TV_INPUT_COMPONENT_1</code>)\n","sig":null,"attributes":[{"value":"/ Switch to component input #1. (<code class=\"android\">KEYCODE_TV_INPUT_COMPONENT_1</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":57832,"byte_end":57925,"line_start":432,"line_end":432,"column_start":5,"column_end":98}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1257},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":58051,"byte_end":58068,"line_start":435,"line_end":435,"column_start":5,"column_end":22},"name":"TVInputComponent2","qualname":"::key::Key::TVInputComponent2","value":"Key::TVInputComponent2","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Switch to component input #2. (<code class=\"android\">KEYCODE_TV_INPUT_COMPONENT_2</code>)\n","sig":null,"attributes":[{"value":"/ Switch to component input #2. (<code class=\"android\">KEYCODE_TV_INPUT_COMPONENT_2</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":57953,"byte_end":58046,"line_start":434,"line_end":434,"column_start":5,"column_end":98}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1259},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":58172,"byte_end":58189,"line_start":437,"line_end":437,"column_start":5,"column_end":22},"name":"TVInputComposite1","qualname":"::key::Key::TVInputComposite1","value":"Key::TVInputComposite1","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Switch to composite input #1. (<code class=\"android\">KEYCODE_TV_INPUT_COMPOSITE_1</code>)\n","sig":null,"attributes":[{"value":"/ Switch to composite input #1. (<code class=\"android\">KEYCODE_TV_INPUT_COMPOSITE_1</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":58074,"byte_end":58167,"line_start":436,"line_end":436,"column_start":5,"column_end":98}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1261},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":58293,"byte_end":58310,"line_start":439,"line_end":439,"column_start":5,"column_end":22},"name":"TVInputComposite2","qualname":"::key::Key::TVInputComposite2","value":"Key::TVInputComposite2","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Switch to composite input #2. (<code class=\"android\">KEYCODE_TV_INPUT_COMPOSITE_2</code>)\n","sig":null,"attributes":[{"value":"/ Switch to composite input #2. (<code class=\"android\">KEYCODE_TV_INPUT_COMPOSITE_2</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":58195,"byte_end":58288,"line_start":438,"line_end":438,"column_start":5,"column_end":98}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1263},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":58404,"byte_end":58416,"line_start":441,"line_end":441,"column_start":5,"column_end":17},"name":"TVInputHDMI1","qualname":"::key::Key::TVInputHDMI1","value":"Key::TVInputHDMI1","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Switch to HDMI input #1. (<code class=\"android\">KEYCODE_TV_INPUT_HDMI_1</code>)\n","sig":null,"attributes":[{"value":"/ Switch to HDMI input #1. (<code class=\"android\">KEYCODE_TV_INPUT_HDMI_1</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":58316,"byte_end":58399,"line_start":440,"line_end":440,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1265},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":58510,"byte_end":58522,"line_start":443,"line_end":443,"column_start":5,"column_end":17},"name":"TVInputHDMI2","qualname":"::key::Key::TVInputHDMI2","value":"Key::TVInputHDMI2","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Switch to HDMI input #2. (<code class=\"android\">KEYCODE_TV_INPUT_HDMI_2</code>)\n","sig":null,"attributes":[{"value":"/ Switch to HDMI input #2. (<code class=\"android\">KEYCODE_TV_INPUT_HDMI_2</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":58422,"byte_end":58505,"line_start":442,"line_end":442,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1267},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":58616,"byte_end":58628,"line_start":445,"line_end":445,"column_start":5,"column_end":17},"name":"TVInputHDMI3","qualname":"::key::Key::TVInputHDMI3","value":"Key::TVInputHDMI3","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Switch to HDMI input #3. (<code class=\"android\">KEYCODE_TV_INPUT_HDMI_3</code>)\n","sig":null,"attributes":[{"value":"/ Switch to HDMI input #3. (<code class=\"android\">KEYCODE_TV_INPUT_HDMI_3</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":58528,"byte_end":58611,"line_start":444,"line_end":444,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":58722,"byte_end":58734,"line_start":447,"line_end":447,"column_start":5,"column_end":17},"name":"TVInputHDMI4","qualname":"::key::Key::TVInputHDMI4","value":"Key::TVInputHDMI4","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Switch to HDMI input #4. (<code class=\"android\">KEYCODE_TV_INPUT_HDMI_4</code>)\n","sig":null,"attributes":[{"value":"/ Switch to HDMI input #4. (<code class=\"android\">KEYCODE_TV_INPUT_HDMI_4</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":58634,"byte_end":58717,"line_start":446,"line_end":446,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1271},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":58826,"byte_end":58837,"line_start":449,"line_end":449,"column_start":5,"column_end":16},"name":"TVInputVGA1","qualname":"::key::Key::TVInputVGA1","value":"Key::TVInputVGA1","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Switch to VGA input #1. (<code class=\"android\">KEYCODE_TV_INPUT_VGA_1</code>)\n","sig":null,"attributes":[{"value":"/ Switch to VGA input #1. (<code class=\"android\">KEYCODE_TV_INPUT_VGA_1</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":58740,"byte_end":58821,"line_start":448,"line_end":448,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1273},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":58932,"byte_end":58946,"line_start":451,"line_end":451,"column_start":5,"column_end":19},"name":"TVMediaContext","qualname":"::key::Key::TVMediaContext","value":"Key::TVMediaContext","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Media context menu. (<code class=\"android\">KEYCODE_TV_MEDIA_CONTEXT_MENU</code>)\n","sig":null,"attributes":[{"value":"/ Media context menu. (<code class=\"android\">KEYCODE_TV_MEDIA_CONTEXT_MENU</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":58843,"byte_end":58927,"line_start":450,"line_end":450,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1275},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":59026,"byte_end":59035,"line_start":453,"line_end":453,"column_start":5,"column_end":14},"name":"TVNetwork","qualname":"::key::Key::TVNetwork","value":"Key::TVNetwork","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle network. (<code class=\"android\">KEYCODE_TV_NETWORK</code>)\n","sig":null,"attributes":[{"value":"/ Toggle network. (<code class=\"android\">KEYCODE_TV_NETWORK</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":58952,"byte_end":59021,"line_start":452,"line_end":452,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1277},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":59118,"byte_end":59131,"line_start":455,"line_end":455,"column_start":5,"column_end":18},"name":"TVNumberEntry","qualname":"::key::Key::TVNumberEntry","value":"Key::TVNumberEntry","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Number entry. (<code class=\"android\">KEYCODE_TV_NUMBER_ENTRY</code>)\n","sig":null,"attributes":[{"value":"/ Number entry. (<code class=\"android\">KEYCODE_TV_NUMBER_ENTRY</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":59041,"byte_end":59113,"line_start":454,"line_end":454,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1279},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":59229,"byte_end":59236,"line_start":457,"line_end":457,"column_start":5,"column_end":12},"name":"TVPower","qualname":"::key::Key::TVPower","value":"Key::TVPower","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle the power on an external TV. (<code class=\"android\">KEYCODE_TV_POWER</code>)\n","sig":null,"attributes":[{"value":"/ Toggle the power on an external TV. (<code class=\"android\">KEYCODE_TV_POWER</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":59137,"byte_end":59224,"line_start":456,"line_end":456,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1281},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":59313,"byte_end":59327,"line_start":459,"line_end":459,"column_start":5,"column_end":19},"name":"TVRadioService","qualname":"::key::Key::TVRadioService","value":"Key::TVRadioService","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Radio. (<code class=\"android\">KEYCODE_TV_RADIO_SERVICE</code>)\n","sig":null,"attributes":[{"value":"/ Radio. (<code class=\"android\">KEYCODE_TV_RADIO_SERVICE</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":59242,"byte_end":59308,"line_start":458,"line_end":458,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1283},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":59404,"byte_end":59415,"line_start":461,"line_end":461,"column_start":5,"column_end":16},"name":"TVSatellite","qualname":"::key::Key::TVSatellite","value":"Key::TVSatellite","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Satellite. (<code class=\"android\">KEYCODE_TV_SATELLITE</code>)\n","sig":null,"attributes":[{"value":"/ Satellite. (<code class=\"android\">KEYCODE_TV_SATELLITE</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":59333,"byte_end":59399,"line_start":460,"line_end":460,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1285},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":59505,"byte_end":59518,"line_start":463,"line_end":463,"column_start":5,"column_end":18},"name":"TVSatelliteBS","qualname":"::key::Key::TVSatelliteBS","value":"Key::TVSatelliteBS","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Broadcast Satellite. (<code class=\"android\">KEYCODE_TV_SATELLITE_BS</code>)\n","sig":null,"attributes":[{"value":"/ Broadcast Satellite. (<code class=\"android\">KEYCODE_TV_SATELLITE_BS</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":59421,"byte_end":59500,"line_start":462,"line_end":462,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1287},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":59612,"byte_end":59625,"line_start":465,"line_end":465,"column_start":5,"column_end":18},"name":"TVSatelliteCS","qualname":"::key::Key::TVSatelliteCS","value":"Key::TVSatelliteCS","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Communication Satellite. (<code class=\"android\">KEYCODE_TV_SATELLITE_CS</code>)\n","sig":null,"attributes":[{"value":"/ Communication Satellite. (<code class=\"android\">KEYCODE_TV_SATELLITE_CS</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":59524,"byte_end":59607,"line_start":464,"line_end":464,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1289},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":59736,"byte_end":59753,"line_start":467,"line_end":467,"column_start":5,"column_end":22},"name":"TVSatelliteToggle","qualname":"::key::Key::TVSatelliteToggle","value":"Key::TVSatelliteToggle","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle between available satellites. (<code class=\"android\">KEYCODE_TV_SATELLITE_SERVICE</code>)\n","sig":null,"attributes":[{"value":"/ Toggle between available satellites. (<code class=\"android\">KEYCODE_TV_SATELLITE_SERVICE</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":59631,"byte_end":59731,"line_start":466,"line_end":466,"column_start":5,"column_end":105}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1291},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":59848,"byte_end":59867,"line_start":469,"line_end":469,"column_start":5,"column_end":24},"name":"TVTerrestrialAnalog","qualname":"::key::Key::TVTerrestrialAnalog","value":"Key::TVTerrestrialAnalog","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Analog Terrestrial. (<code class=\"android\">KEYCODE_TV_TERRESTRIAL_ANALOG</code>)\n","sig":null,"attributes":[{"value":"/ Analog Terrestrial. (<code class=\"android\">KEYCODE_TV_TERRESTRIAL_ANALOG</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":59759,"byte_end":59843,"line_start":468,"line_end":468,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1293},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":59964,"byte_end":59984,"line_start":471,"line_end":471,"column_start":5,"column_end":25},"name":"TVTerrestrialDigital","qualname":"::key::Key::TVTerrestrialDigital","value":"Key::TVTerrestrialDigital","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Digital Terrestrial. (<code class=\"android\">KEYCODE_TV_TERRESTRIAL_DIGITAL</code>)\n","sig":null,"attributes":[{"value":"/ Digital Terrestrial. (<code class=\"android\">KEYCODE_TV_TERRESTRIAL_DIGITAL</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":59873,"byte_end":59959,"line_start":470,"line_end":470,"column_start":5,"column_end":91}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1295},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":60077,"byte_end":60084,"line_start":473,"line_end":473,"column_start":5,"column_end":12},"name":"TVTimer","qualname":"::key::Key::TVTimer","value":"Key::TVTimer","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Timer programming. (<code class=\"android\">KEYCODE_TV_TIMER_PROGRAMMING</code>)\n","sig":null,"attributes":[{"value":"/ Timer programming. (<code class=\"android\">KEYCODE_TV_TIMER_PROGRAMMING</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":59990,"byte_end":60072,"line_start":472,"line_end":472,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1297},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":60212,"byte_end":60220,"line_start":475,"line_end":475,"column_start":5,"column_end":13},"name":"AVRInput","qualname":"::key::Key::AVRInput","value":"Key::AVRInput","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Switch the input mode on an external AVR (audio/video receiver). (<code class=\"android\">KEYCODE_AVR_INPUT</code>)\n","sig":null,"attributes":[{"value":"/ Switch the input mode on an external AVR (audio/video receiver). (<code class=\"android\">KEYCODE_AVR_INPUT</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":60090,"byte_end":60207,"line_start":474,"line_end":474,"column_start":5,"column_end":122}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1299},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":60343,"byte_end":60351,"line_start":477,"line_end":477,"column_start":5,"column_end":13},"name":"AVRPower","qualname":"::key::Key::AVRPower","value":"Key::AVRPower","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle the power on an external AVR (audio/video receiver). (<code class=\"android\">KEYCODE_AVR_POWER</code>)\n","sig":null,"attributes":[{"value":"/ Toggle the power on an external AVR (audio/video receiver). (<code class=\"android\">KEYCODE_AVR_POWER</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":60226,"byte_end":60338,"line_start":476,"line_end":476,"column_start":5,"column_end":117}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":60574,"byte_end":60584,"line_start":479,"line_end":479,"column_start":5,"column_end":15},"name":"ColorF0Red","qualname":"::key::Key::ColorF0Red","value":"Key::ColorF0Red","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" General purpose color-coded media function key, as index 0 (red). (<code class=\"vk\"><code class=\"vk\">VK_COLORED_KEY_0</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_PROG_RED</code></code>)\n","sig":null,"attributes":[{"value":"/ General purpose color-coded media function key, as index 0 (red). (<code class=\"vk\"><code class=\"vk\">VK_COLORED_KEY_0</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_PROG_RED</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":60357,"byte_end":60569,"line_start":478,"line_end":478,"column_start":5,"column_end":217}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1303},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":60811,"byte_end":60823,"line_start":481,"line_end":481,"column_start":5,"column_end":17},"name":"ColorF1Green","qualname":"::key::Key::ColorF1Green","value":"Key::ColorF1Green","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" General purpose color-coded media function key, as index 1 (green). (<code class=\"vk\"><code class=\"vk\">VK_COLORED_KEY_1</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_PROG_GREEN</code></code>)\n","sig":null,"attributes":[{"value":"/ General purpose color-coded media function key, as index 1 (green). (<code class=\"vk\"><code class=\"vk\">VK_COLORED_KEY_1</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_PROG_GREEN</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":60590,"byte_end":60806,"line_start":480,"line_end":480,"column_start":5,"column_end":221}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1305},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":61052,"byte_end":61065,"line_start":483,"line_end":483,"column_start":5,"column_end":18},"name":"ColorF2Yellow","qualname":"::key::Key::ColorF2Yellow","value":"Key::ColorF2Yellow","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" General purpose color-coded media function key, as index 2 (yellow). (<code class=\"vk\"><code class=\"vk\">VK_COLORED_KEY_2</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_PROG_YELLOW</code></code>)\n","sig":null,"attributes":[{"value":"/ General purpose color-coded media function key, as index 2 (yellow). (<code class=\"vk\"><code class=\"vk\">VK_COLORED_KEY_2</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_PROG_YELLOW</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":60829,"byte_end":61047,"line_start":482,"line_end":482,"column_start":5,"column_end":223}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1307},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":61290,"byte_end":61301,"line_start":485,"line_end":485,"column_start":5,"column_end":16},"name":"ColorF3Blue","qualname":"::key::Key::ColorF3Blue","value":"Key::ColorF3Blue","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" General purpose color-coded media function key, as index 3 (blue). (<code class=\"vk\"><code class=\"vk\">VK_COLORED_KEY_3</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_PROG_BLUE</code></code>)\n","sig":null,"attributes":[{"value":"/ General purpose color-coded media function key, as index 3 (blue). (<code class=\"vk\"><code class=\"vk\">VK_COLORED_KEY_3</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_PROG_BLUE</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":61071,"byte_end":61285,"line_start":484,"line_end":484,"column_start":5,"column_end":219}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1309},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":61425,"byte_end":61436,"line_start":487,"line_end":487,"column_start":5,"column_end":16},"name":"ColorF4Grey","qualname":"::key::Key::ColorF4Grey","value":"Key::ColorF4Grey","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" General purpose color-coded media function key, as index 4 (grey). (<code class=\"vk\">VK_COLORED_KEY_4</code>)\n","sig":null,"attributes":[{"value":"/ General purpose color-coded media function key, as index 4 (grey). (<code class=\"vk\">VK_COLORED_KEY_4</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":61307,"byte_end":61420,"line_start":486,"line_end":486,"column_start":5,"column_end":118}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1311},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":61561,"byte_end":61573,"line_start":489,"line_end":489,"column_start":5,"column_end":17},"name":"ColorF5Brown","qualname":"::key::Key::ColorF5Brown","value":"Key::ColorF5Brown","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" General purpose color-coded media function key, as index 5 (brown). (<code class=\"vk\">VK_COLORED_KEY_5</code>)\n","sig":null,"attributes":[{"value":"/ General purpose color-coded media function key, as index 5 (brown). (<code class=\"vk\">VK_COLORED_KEY_5</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":61442,"byte_end":61556,"line_start":488,"line_end":488,"column_start":5,"column_end":119}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1313},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":61758,"byte_end":61777,"line_start":491,"line_end":491,"column_start":5,"column_end":24},"name":"ClosedCaptionToggle","qualname":"::key::Key::ClosedCaptionToggle","value":"Key::ClosedCaptionToggle","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle the display of Closed Captions. (<code class=\"vk\"><code class=\"vk\">VK_CC</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_CAPTIONS</code></code>)\n","sig":null,"attributes":[{"value":"/ Toggle the display of Closed Captions. (<code class=\"vk\"><code class=\"vk\">VK_CC</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_CAPTIONS</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":61579,"byte_end":61753,"line_start":490,"line_end":490,"column_start":5,"column_end":179}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1315},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":61903,"byte_end":61909,"line_start":493,"line_end":493,"column_start":5,"column_end":11},"name":"Dimmer","qualname":"::key::Key::Dimmer","value":"Key::Dimmer","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Adjust brightness of device, by toggling between or cycling through states. (<code class=\"vk\">VK_DIMMER</code>)\n","sig":null,"attributes":[{"value":"/ Adjust brightness of device, by toggling between or cycling through states. (<code class=\"vk\">VK_DIMMER</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":61783,"byte_end":61898,"line_start":492,"line_end":492,"column_start":5,"column_end":120}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1317},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":61985,"byte_end":61996,"line_start":495,"line_end":495,"column_start":5,"column_end":16},"name":"DisplaySwap","qualname":"::key::Key::DisplaySwap","value":"Key::DisplaySwap","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Swap video sources. (<code class=\"vk\">VK_DISPLAY_SWAP</code>)\n","sig":null,"attributes":[{"value":"/ Swap video sources. (<code class=\"vk\">VK_DISPLAY_SWAP</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":61915,"byte_end":61980,"line_start":494,"line_end":494,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1319},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":62085,"byte_end":62088,"line_start":497,"line_end":497,"column_start":5,"column_end":8},"name":"DVR","qualname":"::key::Key::DVR","value":"Key::DVR","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Select Digital Video Rrecorder. (<code class=\"android\">KEYCODE_DVR</code>)\n","sig":null,"attributes":[{"value":"/ Select Digital Video Rrecorder. (<code class=\"android\">KEYCODE_DVR</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":62002,"byte_end":62080,"line_start":496,"line_end":496,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1321},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":62166,"byte_end":62170,"line_start":499,"line_end":499,"column_start":5,"column_end":9},"name":"Exit","qualname":"::key::Key::Exit","value":"Key::Exit","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Exit the current application. (<code class=\"vk\">VK_EXIT</code>)\n","sig":null,"attributes":[{"value":"/ Exit the current application. (<code class=\"vk\">VK_EXIT</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":62094,"byte_end":62161,"line_start":498,"line_end":498,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":62277,"byte_end":62291,"line_start":501,"line_end":501,"column_start":5,"column_end":19},"name":"FavoriteClear0","qualname":"::key::Key::FavoriteClear0","value":"Key::FavoriteClear0","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Clear program or content stored as favorite 0. (<code class=\"vk\">VK_CLEAR_FAVORITE_0</code>)\n","sig":null,"attributes":[{"value":"/ Clear program or content stored as favorite 0. (<code class=\"vk\">VK_CLEAR_FAVORITE_0</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":62176,"byte_end":62272,"line_start":500,"line_end":500,"column_start":5,"column_end":101}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":62398,"byte_end":62412,"line_start":503,"line_end":503,"column_start":5,"column_end":19},"name":"FavoriteClear1","qualname":"::key::Key::FavoriteClear1","value":"Key::FavoriteClear1","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Clear program or content stored as favorite 1. (<code class=\"vk\">VK_CLEAR_FAVORITE_1</code>)\n","sig":null,"attributes":[{"value":"/ Clear program or content stored as favorite 1. (<code class=\"vk\">VK_CLEAR_FAVORITE_1</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":62297,"byte_end":62393,"line_start":502,"line_end":502,"column_start":5,"column_end":101}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1327},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":62519,"byte_end":62533,"line_start":505,"line_end":505,"column_start":5,"column_end":19},"name":"FavoriteClear2","qualname":"::key::Key::FavoriteClear2","value":"Key::FavoriteClear2","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Clear program or content stored as favorite 2. (<code class=\"vk\">VK_CLEAR_FAVORITE_2</code>)\n","sig":null,"attributes":[{"value":"/ Clear program or content stored as favorite 2. (<code class=\"vk\">VK_CLEAR_FAVORITE_2</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":62418,"byte_end":62514,"line_start":504,"line_end":504,"column_start":5,"column_end":101}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1329},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":62640,"byte_end":62654,"line_start":507,"line_end":507,"column_start":5,"column_end":19},"name":"FavoriteClear3","qualname":"::key::Key::FavoriteClear3","value":"Key::FavoriteClear3","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Clear program or content stored as favorite 3. (<code class=\"vk\">VK_CLEAR_FAVORITE_3</code>)\n","sig":null,"attributes":[{"value":"/ Clear program or content stored as favorite 3. (<code class=\"vk\">VK_CLEAR_FAVORITE_3</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":62539,"byte_end":62635,"line_start":506,"line_end":506,"column_start":5,"column_end":101}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1331},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":62772,"byte_end":62787,"line_start":509,"line_end":509,"column_start":5,"column_end":20},"name":"FavoriteRecall0","qualname":"::key::Key::FavoriteRecall0","value":"Key::FavoriteRecall0","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Select (recall) program or content stored as favorite 0. (<code class=\"vk\">VK_RECALL_FAVORITE_0</code>)\n","sig":null,"attributes":[{"value":"/ Select (recall) program or content stored as favorite 0. (<code class=\"vk\">VK_RECALL_FAVORITE_0</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":62660,"byte_end":62767,"line_start":508,"line_end":508,"column_start":5,"column_end":112}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1333},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":62905,"byte_end":62920,"line_start":511,"line_end":511,"column_start":5,"column_end":20},"name":"FavoriteRecall1","qualname":"::key::Key::FavoriteRecall1","value":"Key::FavoriteRecall1","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Select (recall) program or content stored as favorite 1. (<code class=\"vk\">VK_RECALL_FAVORITE_1</code>)\n","sig":null,"attributes":[{"value":"/ Select (recall) program or content stored as favorite 1. (<code class=\"vk\">VK_RECALL_FAVORITE_1</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":62793,"byte_end":62900,"line_start":510,"line_end":510,"column_start":5,"column_end":112}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1335},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":63038,"byte_end":63053,"line_start":513,"line_end":513,"column_start":5,"column_end":20},"name":"FavoriteRecall2","qualname":"::key::Key::FavoriteRecall2","value":"Key::FavoriteRecall2","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Select (recall) program or content stored as favorite 2. (<code class=\"vk\">VK_RECALL_FAVORITE_2</code>)\n","sig":null,"attributes":[{"value":"/ Select (recall) program or content stored as favorite 2. (<code class=\"vk\">VK_RECALL_FAVORITE_2</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":62926,"byte_end":63033,"line_start":512,"line_end":512,"column_start":5,"column_end":112}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1337},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":63171,"byte_end":63186,"line_start":515,"line_end":515,"column_start":5,"column_end":20},"name":"FavoriteRecall3","qualname":"::key::Key::FavoriteRecall3","value":"Key::FavoriteRecall3","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Select (recall) program or content stored as favorite 3. (<code class=\"vk\">VK_RECALL_FAVORITE_3</code>)\n","sig":null,"attributes":[{"value":"/ Select (recall) program or content stored as favorite 3. (<code class=\"vk\">VK_RECALL_FAVORITE_3</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":63059,"byte_end":63166,"line_start":514,"line_end":514,"column_start":5,"column_end":112}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1339},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":63294,"byte_end":63308,"line_start":517,"line_end":517,"column_start":5,"column_end":19},"name":"FavoriteStore0","qualname":"::key::Key::FavoriteStore0","value":"Key::FavoriteStore0","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Store current program or content as favorite 0. (<code class=\"vk\">VK_STORE_FAVORITE_0</code>)\n","sig":null,"attributes":[{"value":"/ Store current program or content as favorite 0. (<code class=\"vk\">VK_STORE_FAVORITE_0</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":63192,"byte_end":63289,"line_start":516,"line_end":516,"column_start":5,"column_end":102}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1341},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":63416,"byte_end":63430,"line_start":519,"line_end":519,"column_start":5,"column_end":19},"name":"FavoriteStore1","qualname":"::key::Key::FavoriteStore1","value":"Key::FavoriteStore1","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Store current program or content as favorite 1. (<code class=\"vk\">VK_STORE_FAVORITE_1</code>)\n","sig":null,"attributes":[{"value":"/ Store current program or content as favorite 1. (<code class=\"vk\">VK_STORE_FAVORITE_1</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":63314,"byte_end":63411,"line_start":518,"line_end":518,"column_start":5,"column_end":102}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1343},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":63538,"byte_end":63552,"line_start":521,"line_end":521,"column_start":5,"column_end":19},"name":"FavoriteStore2","qualname":"::key::Key::FavoriteStore2","value":"Key::FavoriteStore2","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Store current program or content as favorite 2. (<code class=\"vk\">VK_STORE_FAVORITE_2</code>)\n","sig":null,"attributes":[{"value":"/ Store current program or content as favorite 2. (<code class=\"vk\">VK_STORE_FAVORITE_2</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":63436,"byte_end":63533,"line_start":520,"line_end":520,"column_start":5,"column_end":102}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1345},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":63660,"byte_end":63674,"line_start":523,"line_end":523,"column_start":5,"column_end":19},"name":"FavoriteStore3","qualname":"::key::Key::FavoriteStore3","value":"Key::FavoriteStore3","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Store current program or content as favorite 3. (<code class=\"vk\">VK_STORE_FAVORITE_3</code>)\n","sig":null,"attributes":[{"value":"/ Store current program or content as favorite 3. (<code class=\"vk\">VK_STORE_FAVORITE_3</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":63558,"byte_end":63655,"line_start":522,"line_end":522,"column_start":5,"column_end":102}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1347},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":63864,"byte_end":63869,"line_start":525,"line_end":525,"column_start":5,"column_end":10},"name":"Guide","qualname":"::key::Key::Guide","value":"Key::Guide","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle display of program or content guide. (<code class=\"vk\"><code class=\"vk\">VK_GUIDE</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_GUIDE</code></code>)\n","sig":null,"attributes":[{"value":"/ Toggle display of program or content guide. (<code class=\"vk\"><code class=\"vk\">VK_GUIDE</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_GUIDE</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":63680,"byte_end":63859,"line_start":524,"line_end":524,"column_start":5,"column_end":184}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1349},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":63990,"byte_end":64002,"line_start":527,"line_end":527,"column_start":5,"column_end":17},"name":"GuideNextDay","qualname":"::key::Key::GuideNextDay","value":"Key::GuideNextDay","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" If guide is active and displayed, then display next day’s content. (<code class=\"vk\">VK_NEXT_DAY</code>)\n","sig":null,"attributes":[{"value":"/ If guide is active and displayed, then display next day’s content. (<code class=\"vk\">VK_NEXT_DAY</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":63875,"byte_end":63985,"line_start":526,"line_end":526,"column_start":5,"column_end":113}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1351},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":64127,"byte_end":64143,"line_start":529,"line_end":529,"column_start":5,"column_end":21},"name":"GuidePreviousDay","qualname":"::key::Key::GuidePreviousDay","value":"Key::GuidePreviousDay","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" If guide is active and displayed, then display previous day’s content. (<code class=\"vk\">VK_PREV_DAY</code>)\n","sig":null,"attributes":[{"value":"/ If guide is active and displayed, then display previous day’s content. (<code class=\"vk\">VK_PREV_DAY</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":64008,"byte_end":64122,"line_start":528,"line_end":528,"column_start":5,"column_end":117}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1353},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":64360,"byte_end":64364,"line_start":531,"line_end":531,"column_start":5,"column_end":9},"name":"Info","qualname":"::key::Key::Info","value":"Key::Info","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle display of information about currently selected context or media. (<code class=\"vk\"><code class=\"vk\">VK_INFO</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_INFO</code></code>)\n","sig":null,"attributes":[{"value":"/ Toggle display of information about currently selected context or media. (<code class=\"vk\"><code class=\"vk\">VK_INFO</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_INFO</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":64149,"byte_end":64355,"line_start":530,"line_end":530,"column_start":5,"column_end":211}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1355},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":64445,"byte_end":64458,"line_start":533,"line_end":533,"column_start":5,"column_end":18},"name":"InstantReplay","qualname":"::key::Key::InstantReplay","value":"Key::InstantReplay","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle instant replay. (<code class=\"vk\">VK_INSTANT_REPLAY</code>)\n","sig":null,"attributes":[{"value":"/ Toggle instant replay. (<code class=\"vk\">VK_INSTANT_REPLAY</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":64370,"byte_end":64440,"line_start":532,"line_end":532,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1357},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":64559,"byte_end":64563,"line_start":535,"line_end":535,"column_start":5,"column_end":9},"name":"Link","qualname":"::key::Key::Link","value":"Key::Link","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Launch linked content, if available and appropriate. (<code class=\"vk\">VK_LINK</code>)\n","sig":null,"attributes":[{"value":"/ Launch linked content, if available and appropriate. (<code class=\"vk\">VK_LINK</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":64464,"byte_end":64554,"line_start":534,"line_end":534,"column_start":5,"column_end":95}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1359},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":64637,"byte_end":64648,"line_start":537,"line_end":537,"column_start":5,"column_end":16},"name":"ListProgram","qualname":"::key::Key::ListProgram","value":"Key::ListProgram","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" List the current program. (<code class=\"vk\">VK_LIST</code>)\n","sig":null,"attributes":[{"value":"/ List the current program. (<code class=\"vk\">VK_LIST</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":64569,"byte_end":64632,"line_start":536,"line_end":536,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1361},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":64768,"byte_end":64779,"line_start":539,"line_end":539,"column_start":5,"column_end":16},"name":"LiveContent","qualname":"::key::Key::LiveContent","value":"Key::LiveContent","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle display listing of currently available live content or programs. (<code class=\"vk\">VK_LIVE</code>)\n","sig":null,"attributes":[{"value":"/ Toggle display listing of currently available live content or programs. (<code class=\"vk\">VK_LIVE</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":64654,"byte_end":64763,"line_start":538,"line_end":538,"column_start":5,"column_end":114}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1363},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":64870,"byte_end":64874,"line_start":541,"line_end":541,"column_start":5,"column_end":9},"name":"Lock","qualname":"::key::Key::Lock","value":"Key::Lock","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Lock or unlock current content or program. (<code class=\"vk\">VK_LOCK</code>)\n","sig":null,"attributes":[{"value":"/ Lock or unlock current content or program. (<code class=\"vk\">VK_LOCK</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":64785,"byte_end":64865,"line_start":540,"line_end":540,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1365},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":65271,"byte_end":65280,"line_start":544,"line_end":544,"column_start":5,"column_end":14},"name":"MediaApps","qualname":"::key::Key::MediaApps","value":"Key::MediaApps","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Show a list of media applications: audio/video players and image viewers. (<code class=\"vk\">VK_APPS</code>)\n <p class=\"note\" role=\"note\">Do not confuse this key value with the Windows' <code class=\"vk\"><code class=\"vk\">VK_APPS</code></code> / <code class=\"vk\"><code class=\"vk\">VK_CONTEXT_MENU</code></code> key, which is encoded as <code class=\"key\">\"ContextMenu\"</code>.</p>\n","sig":null,"attributes":[{"value":"/ Show a list of media applications: audio/video players and image viewers. (<code class=\"vk\">VK_APPS</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":64880,"byte_end":64991,"line_start":542,"line_end":542,"column_start":5,"column_end":116}},{"value":"/ <p class=\"note\" role=\"note\">Do not confuse this key value with the Windows' <code class=\"vk\"><code class=\"vk\">VK_APPS</code></code> / <code class=\"vk\"><code class=\"vk\">VK_CONTEXT_MENU</code></code> key, which is encoded as <code class=\"key\">\"ContextMenu\"</code>.</p>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":64996,"byte_end":65266,"line_start":543,"line_end":543,"column_start":5,"column_end":275}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1367},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":65368,"byte_end":65383,"line_start":546,"line_end":546,"column_start":5,"column_end":20},"name":"MediaAudioTrack","qualname":"::key::Key::MediaAudioTrack","value":"Key::MediaAudioTrack","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Audio track key. (<code class=\"android\">KEYCODE_MEDIA_AUDIO_TRACK</code>)\n","sig":null,"attributes":[{"value":"/ Audio track key. (<code class=\"android\">KEYCODE_MEDIA_AUDIO_TRACK</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":65286,"byte_end":65363,"line_start":545,"line_end":545,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1369},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":65580,"byte_end":65589,"line_start":548,"line_end":548,"column_start":5,"column_end":14},"name":"MediaLast","qualname":"::key::Key::MediaLast","value":"Key::MediaLast","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Select previously selected channel or media. (<code class=\"vk\"><code class=\"vk\">VK_LAST</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_LAST_CHANNEL</code></code>)\n","sig":null,"attributes":[{"value":"/ Select previously selected channel or media. (<code class=\"vk\"><code class=\"vk\">VK_LAST</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_LAST_CHANNEL</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":65389,"byte_end":65575,"line_start":547,"line_end":547,"column_start":5,"column_end":191}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1371},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":65704,"byte_end":65721,"line_start":550,"line_end":550,"column_start":5,"column_end":22},"name":"MediaSkipBackward","qualname":"::key::Key::MediaSkipBackward","value":"Key::MediaSkipBackward","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Skip backward to next content or program. (<code class=\"android\">KEYCODE_MEDIA_SKIP_BACKWARD</code>)\n","sig":null,"attributes":[{"value":"/ Skip backward to next content or program. (<code class=\"android\">KEYCODE_MEDIA_SKIP_BACKWARD</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":65595,"byte_end":65699,"line_start":549,"line_end":549,"column_start":5,"column_end":109}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1373},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":65920,"byte_end":65936,"line_start":552,"line_end":552,"column_start":5,"column_end":21},"name":"MediaSkipForward","qualname":"::key::Key::MediaSkipForward","value":"Key::MediaSkipForward","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Skip forward to next content or program. (<code class=\"vk\"><code class=\"vk\">VK_SKIP</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_MEDIA_SKIP_FORWARD</code></code>)\n","sig":null,"attributes":[{"value":"/ Skip forward to next content or program. (<code class=\"vk\"><code class=\"vk\">VK_SKIP</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_MEDIA_SKIP_FORWARD</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":65727,"byte_end":65915,"line_start":551,"line_end":551,"column_start":5,"column_end":193}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1375},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":66051,"byte_end":66068,"line_start":554,"line_end":554,"column_start":5,"column_end":22},"name":"MediaStepBackward","qualname":"::key::Key::MediaStepBackward","value":"Key::MediaStepBackward","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Step backward to next content or program. (<code class=\"android\">KEYCODE_MEDIA_STEP_BACKWARD</code>)\n","sig":null,"attributes":[{"value":"/ Step backward to next content or program. (<code class=\"android\">KEYCODE_MEDIA_STEP_BACKWARD</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":65942,"byte_end":66046,"line_start":553,"line_end":553,"column_start":5,"column_end":109}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1377},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":66181,"byte_end":66197,"line_start":556,"line_end":556,"column_start":5,"column_end":21},"name":"MediaStepForward","qualname":"::key::Key::MediaStepForward","value":"Key::MediaStepForward","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Step forward to next content or program. (<code class=\"android\">KEYCODE_MEDIA_STEP_FORWARD</code>)\n","sig":null,"attributes":[{"value":"/ Step forward to next content or program. (<code class=\"android\">KEYCODE_MEDIA_STEP_FORWARD</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":66074,"byte_end":66176,"line_start":555,"line_end":555,"column_start":5,"column_end":107}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1379},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":66281,"byte_end":66293,"line_start":558,"line_end":558,"column_start":5,"column_end":17},"name":"MediaTopMenu","qualname":"::key::Key::MediaTopMenu","value":"Key::MediaTopMenu","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Media top menu. (<code class=\"android\">KEYCODE_MEDIA_TOP_MENU</code>)\n","sig":null,"attributes":[{"value":"/ Media top menu. (<code class=\"android\">KEYCODE_MEDIA_TOP_MENU</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":66203,"byte_end":66276,"line_start":557,"line_end":557,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1381},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":66371,"byte_end":66381,"line_start":560,"line_end":560,"column_start":5,"column_end":15},"name":"NavigateIn","qualname":"::key::Key::NavigateIn","value":"Key::NavigateIn","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Navigate in. (<code class=\"android\">KEYCODE_NAVIGATE_IN</code>)\n","sig":null,"attributes":[{"value":"/ Navigate in. (<code class=\"android\">KEYCODE_NAVIGATE_IN</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":66299,"byte_end":66366,"line_start":559,"line_end":559,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1383},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":66470,"byte_end":66482,"line_start":562,"line_end":562,"column_start":5,"column_end":17},"name":"NavigateNext","qualname":"::key::Key::NavigateNext","value":"Key::NavigateNext","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Navigate to next key. (<code class=\"android\">KEYCODE_NAVIGATE_NEXT</code>)\n","sig":null,"attributes":[{"value":"/ Navigate to next key. (<code class=\"android\">KEYCODE_NAVIGATE_NEXT</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":66387,"byte_end":66465,"line_start":561,"line_end":561,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1385},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":66562,"byte_end":66573,"line_start":564,"line_end":564,"column_start":5,"column_end":16},"name":"NavigateOut","qualname":"::key::Key::NavigateOut","value":"Key::NavigateOut","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Navigate out. (<code class=\"android\">KEYCODE_NAVIGATE_OUT</code>)\n","sig":null,"attributes":[{"value":"/ Navigate out. (<code class=\"android\">KEYCODE_NAVIGATE_OUT</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":66488,"byte_end":66557,"line_start":563,"line_end":563,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1387},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":66670,"byte_end":66686,"line_start":566,"line_end":566,"column_start":5,"column_end":21},"name":"NavigatePrevious","qualname":"::key::Key::NavigatePrevious","value":"Key::NavigatePrevious","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Navigate to previous key. (<code class=\"android\">KEYCODE_NAVIGATE_PREVIOUS</code>)\n","sig":null,"attributes":[{"value":"/ Navigate to previous key. (<code class=\"android\">KEYCODE_NAVIGATE_PREVIOUS</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":66579,"byte_end":66665,"line_start":565,"line_end":565,"column_start":5,"column_end":91}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1389},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":66803,"byte_end":66822,"line_start":568,"line_end":568,"column_start":5,"column_end":24},"name":"NextFavoriteChannel","qualname":"::key::Key::NextFavoriteChannel","value":"Key::NextFavoriteChannel","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Cycle to next favorite channel (in favorites list). (<code class=\"vk\">VK_NEXT_FAVORITE_CHANNEL</code>)\n","sig":null,"attributes":[{"value":"/ Cycle to next favorite channel (in favorites list). (<code class=\"vk\">VK_NEXT_FAVORITE_CHANNEL</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":66692,"byte_end":66798,"line_start":567,"line_end":567,"column_start":5,"column_end":111}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1391},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":66936,"byte_end":66951,"line_start":570,"line_end":570,"column_start":5,"column_end":20},"name":"NextUserProfile","qualname":"::key::Key::NextUserProfile","value":"Key::NextUserProfile","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Cycle to next user profile (if there are multiple user profiles). (<code class=\"vk\">VK_USER</code>)\n","sig":null,"attributes":[{"value":"/ Cycle to next user profile (if there are multiple user profiles). (<code class=\"vk\">VK_USER</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":66828,"byte_end":66931,"line_start":569,"line_end":569,"column_start":5,"column_end":108}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1393},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":67042,"byte_end":67050,"line_start":572,"line_end":572,"column_start":5,"column_end":13},"name":"OnDemand","qualname":"::key::Key::OnDemand","value":"Key::OnDemand","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Access on-demand content or programs. (<code class=\"vk\">VK_ON_DEMAND</code>)\n","sig":null,"attributes":[{"value":"/ Access on-demand content or programs. (<code class=\"vk\">VK_ON_DEMAND</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":66957,"byte_end":67037,"line_start":571,"line_end":571,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1395},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":67140,"byte_end":67147,"line_start":574,"line_end":574,"column_start":5,"column_end":12},"name":"Pairing","qualname":"::key::Key::Pairing","value":"Key::Pairing","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Pairing key to pair devices. (<code class=\"android\">KEYCODE_PAIRING</code>)\n","sig":null,"attributes":[{"value":"/ Pairing key to pair devices. (<code class=\"android\">KEYCODE_PAIRING</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":67056,"byte_end":67135,"line_start":573,"line_end":573,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1397},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":67237,"byte_end":67245,"line_start":576,"line_end":576,"column_start":5,"column_end":13},"name":"PinPDown","qualname":"::key::Key::PinPDown","value":"Key::PinPDown","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Move picture-in-picture window down. (<code class=\"vk\">VK_PINP_DOWN</code>)\n","sig":null,"attributes":[{"value":"/ Move picture-in-picture window down. (<code class=\"vk\">VK_PINP_DOWN</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":67153,"byte_end":67232,"line_start":575,"line_end":575,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1399},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":67330,"byte_end":67338,"line_start":578,"line_end":578,"column_start":5,"column_end":13},"name":"PinPMove","qualname":"::key::Key::PinPMove","value":"Key::PinPMove","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Move picture-in-picture window. (<code class=\"vk\">VK_PINP_MOVE</code>)\n","sig":null,"attributes":[{"value":"/ Move picture-in-picture window. (<code class=\"vk\">VK_PINP_MOVE</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":67251,"byte_end":67325,"line_start":577,"line_end":577,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1401},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":67438,"byte_end":67448,"line_start":580,"line_end":580,"column_start":5,"column_end":15},"name":"PinPToggle","qualname":"::key::Key::PinPToggle","value":"Key::PinPToggle","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle display of picture-in-picture window. (<code class=\"vk\">VK_PINP_TOGGLE</code>)\n","sig":null,"attributes":[{"value":"/ Toggle display of picture-in-picture window. (<code class=\"vk\">VK_PINP_TOGGLE</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":67344,"byte_end":67433,"line_start":579,"line_end":579,"column_start":5,"column_end":94}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1403},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":67534,"byte_end":67540,"line_start":582,"line_end":582,"column_start":5,"column_end":11},"name":"PinPUp","qualname":"::key::Key::PinPUp","value":"Key::PinPUp","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Move picture-in-picture window up. (<code class=\"vk\">VK_PINP_UP</code>)\n","sig":null,"attributes":[{"value":"/ Move picture-in-picture window up. (<code class=\"vk\">VK_PINP_UP</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":67454,"byte_end":67529,"line_start":581,"line_end":581,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1405},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":67630,"byte_end":67643,"line_start":584,"line_end":584,"column_start":5,"column_end":18},"name":"PlaySpeedDown","qualname":"::key::Key::PlaySpeedDown","value":"Key::PlaySpeedDown","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Decrease media playback speed. (<code class=\"vk\">VK_PLAY_SPEED_DOWN</code>)\n","sig":null,"attributes":[{"value":"/ Decrease media playback speed. (<code class=\"vk\">VK_PLAY_SPEED_DOWN</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":67546,"byte_end":67625,"line_start":583,"line_end":583,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1407},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":67735,"byte_end":67749,"line_start":586,"line_end":586,"column_start":5,"column_end":19},"name":"PlaySpeedReset","qualname":"::key::Key::PlaySpeedReset","value":"Key::PlaySpeedReset","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Reset playback to normal speed. (<code class=\"vk\">VK_PLAY_SPEED_RESET</code>)\n","sig":null,"attributes":[{"value":"/ Reset playback to normal speed. (<code class=\"vk\">VK_PLAY_SPEED_RESET</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":67649,"byte_end":67730,"line_start":585,"line_end":585,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1409},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":67837,"byte_end":67848,"line_start":588,"line_end":588,"column_start":5,"column_end":16},"name":"PlaySpeedUp","qualname":"::key::Key::PlaySpeedUp","value":"Key::PlaySpeedUp","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Increase media playback speed. (<code class=\"vk\">VK_PLAY_SPEED_UP</code>)\n","sig":null,"attributes":[{"value":"/ Increase media playback speed. (<code class=\"vk\">VK_PLAY_SPEED_UP</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":67755,"byte_end":67832,"line_start":587,"line_end":587,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1411},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":67950,"byte_end":67962,"line_start":590,"line_end":590,"column_start":5,"column_end":17},"name":"RandomToggle","qualname":"::key::Key::RandomToggle","value":"Key::RandomToggle","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle random media or content shuffle mode. (<code class=\"vk\">VK_RANDOM_TOGGLE</code>)\n","sig":null,"attributes":[{"value":"/ Toggle random media or content shuffle mode. (<code class=\"vk\">VK_RANDOM_TOGGLE</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":67854,"byte_end":67945,"line_start":589,"line_end":589,"column_start":5,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1413},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":68106,"byte_end":68118,"line_start":592,"line_end":592,"column_start":5,"column_end":17},"name":"RcLowBattery","qualname":"::key::Key::RcLowBattery","value":"Key::RcLowBattery","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Not a physical key, but this key code is sent when the remote control battery is low. (<code class=\"vk\">VK_RC_LOW_BATTERY</code>)\n","sig":null,"attributes":[{"value":"/ Not a physical key, but this key code is sent when the remote control battery is low. (<code class=\"vk\">VK_RC_LOW_BATTERY</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":67968,"byte_end":68101,"line_start":591,"line_end":591,"column_start":5,"column_end":138}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1415},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":68227,"byte_end":68242,"line_start":594,"line_end":594,"column_start":5,"column_end":20},"name":"RecordSpeedNext","qualname":"::key::Key::RecordSpeedNext","value":"Key::RecordSpeedNext","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle or cycle between media recording speeds. (<code class=\"vk\">VK_RECORD_SPEED_NEXT</code>)\n","sig":null,"attributes":[{"value":"/ Toggle or cycle between media recording speeds. (<code class=\"vk\">VK_RECORD_SPEED_NEXT</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":68124,"byte_end":68222,"line_start":593,"line_end":593,"column_start":5,"column_end":103}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1417},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":68384,"byte_end":68392,"line_start":596,"line_end":596,"column_start":5,"column_end":13},"name":"RfBypass","qualname":"::key::Key::RfBypass","value":"Key::RfBypass","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle RF (radio frequency) input bypass mode (pass RF input directly to the RF output). (<code class=\"vk\">VK_RF_BYPASS</code>)\n","sig":null,"attributes":[{"value":"/ Toggle RF (radio frequency) input bypass mode (pass RF input directly to the RF output). (<code class=\"vk\">VK_RF_BYPASS</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":68248,"byte_end":68379,"line_start":595,"line_end":595,"column_start":5,"column_end":136}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1419},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":68483,"byte_end":68501,"line_start":598,"line_end":598,"column_start":5,"column_end":23},"name":"ScanChannelsToggle","qualname":"::key::Key::ScanChannelsToggle","value":"Key::ScanChannelsToggle","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle scan channels mode. (<code class=\"vk\">VK_SCAN_CHANNELS_TOGGLE</code>)\n","sig":null,"attributes":[{"value":"/ Toggle scan channels mode. (<code class=\"vk\">VK_SCAN_CHANNELS_TOGGLE</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":68398,"byte_end":68478,"line_start":597,"line_end":597,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1421},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":68613,"byte_end":68627,"line_start":600,"line_end":600,"column_start":5,"column_end":19},"name":"ScreenModeNext","qualname":"::key::Key::ScreenModeNext","value":"Key::ScreenModeNext","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Advance display screen mode to next available mode. (<code class=\"vk\">VK_SCREEN_MODE_NEXT</code>)\n","sig":null,"attributes":[{"value":"/ Advance display screen mode to next available mode. (<code class=\"vk\">VK_SCREEN_MODE_NEXT</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":68507,"byte_end":68608,"line_start":599,"line_end":599,"column_start":5,"column_end":106}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1423},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":68821,"byte_end":68829,"line_start":602,"line_end":602,"column_start":5,"column_end":13},"name":"Settings","qualname":"::key::Key::Settings","value":"Key::Settings","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle display of device settings screen. (<code class=\"vk\"><code class=\"vk\">VK_SETTINGS</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_SETTINGS</code></code>)\n","sig":null,"attributes":[{"value":"/ Toggle display of device settings screen. (<code class=\"vk\"><code class=\"vk\">VK_SETTINGS</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_SETTINGS</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":68633,"byte_end":68816,"line_start":601,"line_end":601,"column_start":5,"column_end":188}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1425},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":68918,"byte_end":68935,"line_start":604,"line_end":604,"column_start":5,"column_end":22},"name":"SplitScreenToggle","qualname":"::key::Key::SplitScreenToggle","value":"Key::SplitScreenToggle","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle split screen mode. (<code class=\"vk\">VK_SPLIT_SCREEN_TOGGLE</code>)\n","sig":null,"attributes":[{"value":"/ Toggle split screen mode. (<code class=\"vk\">VK_SPLIT_SCREEN_TOGGLE</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":68835,"byte_end":68913,"line_start":603,"line_end":603,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1427},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":69054,"byte_end":69062,"line_start":606,"line_end":606,"column_start":5,"column_end":13},"name":"STBInput","qualname":"::key::Key::STBInput","value":"Key::STBInput","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Switch the input mode on an external STB (set top box). (<code class=\"android\">KEYCODE_STB_INPUT</code>)\n","sig":null,"attributes":[{"value":"/ Switch the input mode on an external STB (set top box). (<code class=\"android\">KEYCODE_STB_INPUT</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":68941,"byte_end":69049,"line_start":605,"line_end":605,"column_start":5,"column_end":113}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1429},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":69176,"byte_end":69184,"line_start":608,"line_end":608,"column_start":5,"column_end":13},"name":"STBPower","qualname":"::key::Key::STBPower","value":"Key::STBPower","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle the power on an external STB (set top box). (<code class=\"android\">KEYCODE_STB_POWER</code>)\n","sig":null,"attributes":[{"value":"/ Toggle the power on an external STB (set top box). (<code class=\"android\">KEYCODE_STB_POWER</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":69068,"byte_end":69171,"line_start":607,"line_end":607,"column_start":5,"column_end":108}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1431},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":69279,"byte_end":69287,"line_start":610,"line_end":610,"column_start":5,"column_end":13},"name":"Subtitle","qualname":"::key::Key::Subtitle","value":"Key::Subtitle","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle display of subtitles, if available. (<code class=\"vk\">VK_SUBTITLE</code>)\n","sig":null,"attributes":[{"value":"/ Toggle display of subtitles, if available. (<code class=\"vk\">VK_SUBTITLE</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":69190,"byte_end":69274,"line_start":609,"line_end":609,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1433},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":69484,"byte_end":69492,"line_start":612,"line_end":612,"column_start":5,"column_end":13},"name":"Teletext","qualname":"::key::Key::Teletext","value":"Key::Teletext","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle display of teletext, if available (<code class=\"vk\"><code class=\"vk\">VK_TELETEXT</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_TV_TELETEXT</code></code>).\n","sig":null,"attributes":[{"value":"/ Toggle display of teletext, if available (<code class=\"vk\"><code class=\"vk\">VK_TELETEXT</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_TV_TELETEXT</code></code>).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":69293,"byte_end":69479,"line_start":611,"line_end":611,"column_start":5,"column_end":191}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1435},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":69594,"byte_end":69607,"line_start":614,"line_end":614,"column_start":5,"column_end":18},"name":"VideoModeNext","qualname":"::key::Key::VideoModeNext","value":"Key::VideoModeNext","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Advance video mode to next available mode. (<code class=\"vk\">VK_VIDEO_MODE_NEXT</code>)\n","sig":null,"attributes":[{"value":"/ Advance video mode to next available mode. (<code class=\"vk\">VK_VIDEO_MODE_NEXT</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":69498,"byte_end":69589,"line_start":613,"line_end":613,"column_start":5,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1437},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":69729,"byte_end":69733,"line_start":616,"line_end":616,"column_start":5,"column_end":9},"name":"Wink","qualname":"::key::Key::Wink","value":"Key::Wink","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Cause device to identify itself in some manner, e.g., audibly or visibly. (<code class=\"vk\">VK_WINK</code>)\n","sig":null,"attributes":[{"value":"/ Cause device to identify itself in some manner, e.g., audibly or visibly. (<code class=\"vk\">VK_WINK</code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":69613,"byte_end":69724,"line_start":615,"line_end":615,"column_start":5,"column_end":116}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1439},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":69962,"byte_end":69972,"line_start":618,"line_end":618,"column_start":5,"column_end":15},"name":"ZoomToggle","qualname":"::key::Key::ZoomToggle","value":"Key::ZoomToggle","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Toggle between full-screen and scaled content, or alter magnification level. (<code class=\"vk\"><code class=\"vk\">VK_ZOOM</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_TV_ZOOM_MODE</code></code>)\n","sig":null,"attributes":[{"value":"/ Toggle between full-screen and scaled content, or alter magnification level. (<code class=\"vk\"><code class=\"vk\">VK_ZOOM</code></code>, <code class=\"android\"><code class=\"android\">KEYCODE_TV_ZOOM_MODE</code></code>)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":69739,"byte_end":69957,"line_start":617,"line_end":617,"column_start":5,"column_end":223}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1441},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":69998,"byte_end":70013,"line_start":621,"line_end":621,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::key::Key::__Nonexhaustive","value":"Key::__Nonexhaustive","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":869},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":32053,"byte_end":32056,"line_start":14,"line_end":14,"column_start":10,"column_end":13},"name":"Key","qualname":"::key::Key","value":"Key::{Character, Unidentified, Alt, AltGraph, CapsLock, Control, Fn, FnLock, Meta, NumLock, ScrollLock, Shift, Symbol, SymbolLock, Hyper, Super, Enter, Tab, ArrowDown, ArrowLeft, ArrowRight, ArrowUp, End, Home, PageDown, PageUp, Backspace, Clear, Copy, CrSel, Cut, Delete, EraseEof, ExSel, Insert, Paste, Redo, Undo, Accept, Again, Attn, Cancel, ContextMenu, Escape, Execute, Find, Help, Pause, Play, Props, Select, ZoomIn, ZoomOut, BrightnessDown, BrightnessUp, Eject, LogOff, Power, PowerOff, PrintScreen, Hibernate, Standby, WakeUp, AllCandidates, Alphanumeric, CodeInput, Compose, Convert, Dead, FinalMode, GroupFirst, GroupLast, GroupNext, GroupPrevious, ModeChange, NextCandidate, NonConvert, PreviousCandidate, Process, SingleCandidate, HangulMode, HanjaMode, JunjaMode, Eisu, Hankaku, Hiragana, HiraganaKatakana, KanaMode, KanjiMode, Katakana, Romaji, Zenkaku, ZenkakuHankaku, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12, Soft1, Soft2, Soft3, Soft4, ChannelDown, ChannelUp, Close, MailForward, MailReply, MailSend, MediaClose, MediaFastForward, MediaPause, MediaPlay, MediaPlayPause, MediaRecord, MediaRewind, MediaStop, MediaTrackNext, MediaTrackPrevious, New, Open, Print, Save, SpellCheck, Key11, Key12, AudioBalanceLeft, AudioBalanceRight, AudioBassBoostDown, AudioBassBoostToggle, AudioBassBoostUp, AudioFaderFront, AudioFaderRear, AudioSurroundModeNext, AudioTrebleDown, AudioTrebleUp, AudioVolumeDown, AudioVolumeUp, AudioVolumeMute, MicrophoneToggle, MicrophoneVolumeDown, MicrophoneVolumeUp, MicrophoneVolumeMute, SpeechCorrectionList, SpeechInputToggle, LaunchApplication1, LaunchApplication2, LaunchCalendar, LaunchContacts, LaunchMail, LaunchMediaPlayer, LaunchMusicPlayer, LaunchPhone, LaunchScreenSaver, LaunchSpreadsheet, LaunchWebBrowser, LaunchWebCam, LaunchWordProcessor, BrowserBack, BrowserFavorites, BrowserForward, BrowserHome, BrowserRefresh, BrowserSearch, BrowserStop, AppSwitch, Call, Camera, CameraFocus, EndCall, GoBack, GoHome, HeadsetHook, LastNumberRedial, Notification, MannerMode, VoiceDial, TV, TV3DMode, TVAntennaCable, TVAudioDescription, TVAudioDescriptionMixDown, TVAudioDescriptionMixUp, TVContentsMenu, TVDataService, TVInput, TVInputComponent1, TVInputComponent2, TVInputComposite1, TVInputComposite2, TVInputHDMI1, TVInputHDMI2, TVInputHDMI3, TVInputHDMI4, TVInputVGA1, TVMediaContext, TVNetwork, TVNumberEntry, TVPower, TVRadioService, TVSatellite, TVSatelliteBS, TVSatelliteCS, TVSatelliteToggle, TVTerrestrialAnalog, TVTerrestrialDigital, TVTimer, AVRInput, AVRPower, ColorF0Red, ColorF1Green, ColorF2Yellow, ColorF3Blue, ColorF4Grey, ColorF5Brown, ClosedCaptionToggle, Dimmer, DisplaySwap, DVR, Exit, FavoriteClear0, FavoriteClear1, FavoriteClear2, FavoriteClear3, FavoriteRecall0, FavoriteRecall1, FavoriteRecall2, FavoriteRecall3, FavoriteStore0, FavoriteStore1, FavoriteStore2, FavoriteStore3, Guide, GuideNextDay, GuidePreviousDay, Info, InstantReplay, Link, ListProgram, LiveContent, Lock, MediaApps, MediaAudioTrack, MediaLast, MediaSkipBackward, MediaSkipForward, MediaStepBackward, MediaStepForward, MediaTopMenu, NavigateIn, NavigateNext, NavigateOut, NavigatePrevious, NextFavoriteChannel, NextUserProfile, OnDemand, Pairing, PinPDown, PinPMove, PinPToggle, PinPUp, PlaySpeedDown, PlaySpeedReset, PlaySpeedUp, RandomToggle, RcLowBattery, RecordSpeedNext, RfBypass, ScanChannelsToggle, ScreenModeNext, Settings, SplitScreenToggle, STBInput, STBPower, Subtitle, Teletext, VideoModeNext, Wink, ZoomToggle, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":875},{"krate":0,"index":877},{"krate":0,"index":879},{"krate":0,"index":881},{"krate":0,"index":883},{"krate":0,"index":885},{"krate":0,"index":887},{"krate":0,"index":889},{"krate":0,"index":891},{"krate":0,"index":893},{"krate":0,"index":895},{"krate":0,"index":897},{"krate":0,"index":899},{"krate":0,"index":901},{"krate":0,"index":903},{"krate":0,"index":905},{"krate":0,"index":907},{"krate":0,"index":909},{"krate":0,"index":911},{"krate":0,"index":913},{"krate":0,"index":915},{"krate":0,"index":917},{"krate":0,"index":919},{"krate":0,"index":921},{"krate":0,"index":923},{"krate":0,"index":925},{"krate":0,"index":927},{"krate":0,"index":929},{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":935},{"krate":0,"index":937},{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":943},{"krate":0,"index":945},{"krate":0,"index":947},{"krate":0,"index":949},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":957},{"krate":0,"index":959},{"krate":0,"index":961},{"krate":0,"index":963},{"krate":0,"index":965},{"krate":0,"index":967},{"krate":0,"index":969},{"krate":0,"index":971},{"krate":0,"index":973},{"krate":0,"index":975},{"krate":0,"index":977},{"krate":0,"index":979},{"krate":0,"index":981},{"krate":0,"index":983},{"krate":0,"index":985},{"krate":0,"index":987},{"krate":0,"index":989},{"krate":0,"index":991},{"krate":0,"index":993},{"krate":0,"index":995},{"krate":0,"index":997},{"krate":0,"index":999},{"krate":0,"index":1001},{"krate":0,"index":1003},{"krate":0,"index":1005},{"krate":0,"index":1007},{"krate":0,"index":1009},{"krate":0,"index":1011},{"krate":0,"index":1013},{"krate":0,"index":1015},{"krate":0,"index":1017},{"krate":0,"index":1019},{"krate":0,"index":1021},{"krate":0,"index":1023},{"krate":0,"index":1025},{"krate":0,"index":1027},{"krate":0,"index":1029},{"krate":0,"index":1031},{"krate":0,"index":1033},{"krate":0,"index":1035},{"krate":0,"index":1037},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1047},{"krate":0,"index":1049},{"krate":0,"index":1051},{"krate":0,"index":1053},{"krate":0,"index":1055},{"krate":0,"index":1057},{"krate":0,"index":1059},{"krate":0,"index":1061},{"krate":0,"index":1063},{"krate":0,"index":1065},{"krate":0,"index":1067},{"krate":0,"index":1069},{"krate":0,"index":1071},{"krate":0,"index":1073},{"krate":0,"index":1075},{"krate":0,"index":1077},{"krate":0,"index":1079},{"krate":0,"index":1081},{"krate":0,"index":1083},{"krate":0,"index":1085},{"krate":0,"index":1087},{"krate":0,"index":1089},{"krate":0,"index":1091},{"krate":0,"index":1093},{"krate":0,"index":1095},{"krate":0,"index":1097},{"krate":0,"index":1099},{"krate":0,"index":1101},{"krate":0,"index":1103},{"krate":0,"index":1105},{"krate":0,"index":1107},{"krate":0,"index":1109},{"krate":0,"index":1111},{"krate":0,"index":1113},{"krate":0,"index":1115},{"krate":0,"index":1117},{"krate":0,"index":1119},{"krate":0,"index":1121},{"krate":0,"index":1123},{"krate":0,"index":1125},{"krate":0,"index":1127},{"krate":0,"index":1129},{"krate":0,"index":1131},{"krate":0,"index":1133},{"krate":0,"index":1135},{"krate":0,"index":1137},{"krate":0,"index":1139},{"krate":0,"index":1141},{"krate":0,"index":1143},{"krate":0,"index":1145},{"krate":0,"index":1147},{"krate":0,"index":1149},{"krate":0,"index":1151},{"krate":0,"index":1153},{"krate":0,"index":1155},{"krate":0,"index":1157},{"krate":0,"index":1159},{"krate":0,"index":1161},{"krate":0,"index":1163},{"krate":0,"index":1165},{"krate":0,"index":1167},{"krate":0,"index":1169},{"krate":0,"index":1171},{"krate":0,"index":1173},{"krate":0,"index":1175},{"krate":0,"index":1177},{"krate":0,"index":1179},{"krate":0,"index":1181},{"krate":0,"index":1183},{"krate":0,"index":1185},{"krate":0,"index":1187},{"krate":0,"index":1189},{"krate":0,"index":1191},{"krate":0,"index":1193},{"krate":0,"index":1195},{"krate":0,"index":1197},{"krate":0,"index":1199},{"krate":0,"index":1201},{"krate":0,"index":1203},{"krate":0,"index":1205},{"krate":0,"index":1207},{"krate":0,"index":1209},{"krate":0,"index":1211},{"krate":0,"index":1213},{"krate":0,"index":1215},{"krate":0,"index":1217},{"krate":0,"index":1219},{"krate":0,"index":1221},{"krate":0,"index":1223},{"krate":0,"index":1225},{"krate":0,"index":1227},{"krate":0,"index":1229},{"krate":0,"index":1231},{"krate":0,"index":1233},{"krate":0,"index":1235},{"krate":0,"index":1237},{"krate":0,"index":1239},{"krate":0,"index":1241},{"krate":0,"index":1243},{"krate":0,"index":1245},{"krate":0,"index":1247},{"krate":0,"index":1249},{"krate":0,"index":1251},{"krate":0,"index":1253},{"krate":0,"index":1255},{"krate":0,"index":1257},{"krate":0,"index":1259},{"krate":0,"index":1261},{"krate":0,"index":1263},{"krate":0,"index":1265},{"krate":0,"index":1267},{"krate":0,"index":1269},{"krate":0,"index":1271},{"krate":0,"index":1273},{"krate":0,"index":1275},{"krate":0,"index":1277},{"krate":0,"index":1279},{"krate":0,"index":1281},{"krate":0,"index":1283},{"krate":0,"index":1285},{"krate":0,"index":1287},{"krate":0,"index":1289},{"krate":0,"index":1291},{"krate":0,"index":1293},{"krate":0,"index":1295},{"krate":0,"index":1297},{"krate":0,"index":1299},{"krate":0,"index":1301},{"krate":0,"index":1303},{"krate":0,"index":1305},{"krate":0,"index":1307},{"krate":0,"index":1309},{"krate":0,"index":1311},{"krate":0,"index":1313},{"krate":0,"index":1315},{"krate":0,"index":1317},{"krate":0,"index":1319},{"krate":0,"index":1321},{"krate":0,"index":1323},{"krate":0,"index":1325},{"krate":0,"index":1327},{"krate":0,"index":1329},{"krate":0,"index":1331},{"krate":0,"index":1333},{"krate":0,"index":1335},{"krate":0,"index":1337},{"krate":0,"index":1339},{"krate":0,"index":1341},{"krate":0,"index":1343},{"krate":0,"index":1345},{"krate":0,"index":1347},{"krate":0,"index":1349},{"krate":0,"index":1351},{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1357},{"krate":0,"index":1359},{"krate":0,"index":1361},{"krate":0,"index":1363},{"krate":0,"index":1365},{"krate":0,"index":1367},{"krate":0,"index":1369},{"krate":0,"index":1371},{"krate":0,"index":1373},{"krate":0,"index":1375},{"krate":0,"index":1377},{"krate":0,"index":1379},{"krate":0,"index":1381},{"krate":0,"index":1383},{"krate":0,"index":1385},{"krate":0,"index":1387},{"krate":0,"index":1389},{"krate":0,"index":1391},{"krate":0,"index":1393},{"krate":0,"index":1395},{"krate":0,"index":1397},{"krate":0,"index":1399},{"krate":0,"index":1401},{"krate":0,"index":1403},{"krate":0,"index":1405},{"krate":0,"index":1407},{"krate":0,"index":1409},{"krate":0,"index":1411},{"krate":0,"index":1413},{"krate":0,"index":1415},{"krate":0,"index":1417},{"krate":0,"index":1419},{"krate":0,"index":1421},{"krate":0,"index":1423},{"krate":0,"index":1425},{"krate":0,"index":1427},{"krate":0,"index":1429},{"krate":0,"index":1431},{"krate":0,"index":1433},{"krate":0,"index":1435},{"krate":0,"index":1437},{"krate":0,"index":1439},{"krate":0,"index":1441}],"decl_id":null,"docs":" Key represents the meaning of a keypress.","sig":null,"attributes":[{"value":"/ Key represents the meaning of a keypress.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":31825,"byte_end":31870,"line_start":8,"line_end":8,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":31871,"byte_end":31874,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Specification:","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":31875,"byte_end":31893,"line_start":10,"line_end":10,"column_start":1,"column_end":19}},{"value":"/ <https://w3c.github.io/uievents-key/>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":31894,"byte_end":31935,"line_start":11,"line_end":11,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":2070},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":98422,"byte_end":98442,"line_start":1221,"line_end":1221,"column_start":12,"column_end":32},"name":"UnrecognizedKeyError","qualname":"::key::UnrecognizedKeyError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Parse from string error, returned when string does not match to any Key variant.\n","sig":null,"attributes":[{"value":"/ Parse from string error, returned when string does not match to any Key variant.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":98302,"byte_end":98386,"line_start":1219,"line_end":1219,"column_start":1,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2077},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\location.rs","byte_start":99702,"byte_end":99710,"line_start":10,"line_end":10,"column_start":5,"column_end":13},"name":"Standard","qualname":"::location::Location::Standard","value":"Location::Standard","parent":{"krate":0,"index":2076},"children":[],"decl_id":null,"docs":" The key activation MUST NOT be distinguished as the left or right\n version of the key, and (other than the NumLock key) did not\n originate from the numeric keypad (or did not originate with a\n virtual key corresponding to the numeric keypad).\n","sig":null,"attributes":[{"value":"/ The key activation MUST NOT be distinguished as the left or right","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\location.rs","byte_start":99430,"byte_end":99499,"line_start":6,"line_end":6,"column_start":5,"column_end":74}},{"value":"/ version of the key, and (other than the NumLock key) did not","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\location.rs","byte_start":99504,"byte_end":99568,"line_start":7,"line_end":7,"column_start":5,"column_end":69}},{"value":"/ originate from the numeric keypad (or did not originate with a","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\location.rs","byte_start":99573,"byte_end":99639,"line_start":8,"line_end":8,"column_start":5,"column_end":71}},{"value":"/ virtual key corresponding to the numeric keypad).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\location.rs","byte_start":99644,"byte_end":99697,"line_start":9,"line_end":9,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2080},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\location.rs","byte_start":99857,"byte_end":99861,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Left","qualname":"::location::Location::Left","value":"Location::Left","parent":{"krate":0,"index":2076},"children":[],"decl_id":null,"docs":" The key activated originated from the left key location (when there\n is more than one possible location for this key).\n","sig":null,"attributes":[{"value":"/ The key activated originated from the left key location (when there","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\location.rs","byte_start":99723,"byte_end":99794,"line_start":11,"line_end":11,"column_start":5,"column_end":76}},{"value":"/ is more than one possible location for this key).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\location.rs","byte_start":99799,"byte_end":99852,"line_start":12,"line_end":12,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2083},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\location.rs","byte_start":100010,"byte_end":100015,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"name":"Right","qualname":"::location::Location::Right","value":"Location::Right","parent":{"krate":0,"index":2076},"children":[],"decl_id":null,"docs":" The key activation originated from the right key location (when\n there is more than one possible location for this key).\n","sig":null,"attributes":[{"value":"/ The key activation originated from the right key location (when","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\location.rs","byte_start":99874,"byte_end":99941,"line_start":14,"line_end":14,"column_start":5,"column_end":72}},{"value":"/ there is more than one possible location for this key).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\location.rs","byte_start":99946,"byte_end":100005,"line_start":15,"line_end":15,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2086},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\location.rs","byte_start":100329,"byte_end":100335,"line_start":21,"line_end":21,"column_start":5,"column_end":11},"name":"Numpad","qualname":"::location::Location::Numpad","value":"Location::Numpad","parent":{"krate":0,"index":2076},"children":[],"decl_id":null,"docs":" The key activation originated on the numeric keypad or with a virtual\n key corresponding to the numeric keypad (when there is more than one\n possible location for this key). Note that the NumLock key should\n always be encoded with a location of DOM_KEY_LOCATION_STANDARD.\n","sig":null,"attributes":[{"value":"/ The key activation originated on the numeric keypad or with a virtual","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\location.rs","byte_start":100028,"byte_end":100101,"line_start":17,"line_end":17,"column_start":5,"column_end":78}},{"value":"/ key corresponding to the numeric keypad (when there is more than one","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\location.rs","byte_start":100106,"byte_end":100178,"line_start":18,"line_end":18,"column_start":5,"column_end":77}},{"value":"/ possible location for this key). Note that the NumLock key should","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\location.rs","byte_start":100183,"byte_end":100252,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ always be encoded with a location of DOM_KEY_LOCATION_STANDARD.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\location.rs","byte_start":100257,"byte_end":100324,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":2076},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\location.rs","byte_start":99415,"byte_end":99423,"line_start":5,"line_end":5,"column_start":10,"column_end":18},"name":"Location","qualname":"::location::Location","value":"Location::{Standard, Left, Right, Numpad}","parent":null,"children":[{"krate":0,"index":2077},{"krate":0,"index":2080},{"krate":0,"index":2083},{"krate":0,"index":2086}],"decl_id":null,"docs":" The location attribute contains an indication of the logical location\n of the key on the device.\n","sig":null,"attributes":[{"value":"/ The location attribute contains an indication of the logical location","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\location.rs","byte_start":99188,"byte_end":99261,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/ of the key on the device.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\location.rs","byte_start":99262,"byte_end":99291,"line_start":2,"line_end":2,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2152},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\modifiers.rs","byte_start":100795,"byte_end":100804,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"Modifiers","qualname":"::modifiers::Modifiers","value":"Modifiers {  }","parent":null,"children":[{"krate":0,"index":2153}],"decl_id":null,"docs":" Pressed modifier keys.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2251},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\modifiers.rs","byte_start":100826,"byte_end":100829,"line_start":16,"line_end":16,"column_start":15,"column_end":18},"name":"ALT","qualname":"::modifiers::Modifiers::ALT","value":"Modifiers","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2252},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\modifiers.rs","byte_start":100852,"byte_end":100861,"line_start":17,"line_end":17,"column_start":15,"column_end":24},"name":"ALT_GRAPH","qualname":"::modifiers::Modifiers::ALT_GRAPH","value":"Modifiers","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2253},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\modifiers.rs","byte_start":100883,"byte_end":100892,"line_start":18,"line_end":18,"column_start":15,"column_end":24},"name":"CAPS_LOCK","qualname":"::modifiers::Modifiers::CAPS_LOCK","value":"Modifiers","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2254},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\modifiers.rs","byte_start":100914,"byte_end":100921,"line_start":19,"line_end":19,"column_start":15,"column_end":22},"name":"CONTROL","qualname":"::modifiers::Modifiers::CONTROL","value":"Modifiers","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2255},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\modifiers.rs","byte_start":100943,"byte_end":100945,"line_start":20,"line_end":20,"column_start":15,"column_end":17},"name":"FN","qualname":"::modifiers::Modifiers::FN","value":"Modifiers","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2256},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\modifiers.rs","byte_start":100968,"byte_end":100975,"line_start":21,"line_end":21,"column_start":15,"column_end":22},"name":"FN_LOCK","qualname":"::modifiers::Modifiers::FN_LOCK","value":"Modifiers","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2257},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\modifiers.rs","byte_start":100998,"byte_end":101002,"line_start":22,"line_end":22,"column_start":15,"column_end":19},"name":"META","qualname":"::modifiers::Modifiers::META","value":"Modifiers","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2258},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\modifiers.rs","byte_start":101025,"byte_end":101033,"line_start":23,"line_end":23,"column_start":15,"column_end":23},"name":"NUM_LOCK","qualname":"::modifiers::Modifiers::NUM_LOCK","value":"Modifiers","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2259},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\modifiers.rs","byte_start":101056,"byte_end":101067,"line_start":24,"line_end":24,"column_start":15,"column_end":26},"name":"SCROLL_LOCK","qualname":"::modifiers::Modifiers::SCROLL_LOCK","value":"Modifiers","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2260},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\modifiers.rs","byte_start":101091,"byte_end":101096,"line_start":25,"line_end":25,"column_start":15,"column_end":20},"name":"SHIFT","qualname":"::modifiers::Modifiers::SHIFT","value":"Modifiers","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2261},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\modifiers.rs","byte_start":101120,"byte_end":101126,"line_start":26,"line_end":26,"column_start":15,"column_end":21},"name":"SYMBOL","qualname":"::modifiers::Modifiers::SYMBOL","value":"Modifiers","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2262},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\modifiers.rs","byte_start":101150,"byte_end":101161,"line_start":27,"line_end":27,"column_start":15,"column_end":26},"name":"SYMBOL_LOCK","qualname":"::modifiers::Modifiers::SYMBOL_LOCK","value":"Modifiers","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2263},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\modifiers.rs","byte_start":101185,"byte_end":101190,"line_start":28,"line_end":28,"column_start":15,"column_end":20},"name":"HYPER","qualname":"::modifiers::Modifiers::HYPER","value":"Modifiers","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2264},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\modifiers.rs","byte_start":101215,"byte_end":101220,"line_start":29,"line_end":29,"column_start":15,"column_end":20},"name":"SUPER","qualname":"::modifiers::Modifiers::SUPER","value":"Modifiers","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":102011,"byte_end":102026,"line_start":18,"line_end":18,"column_start":12,"column_end":27},"name":"ShortcutMatcher","qualname":"::shortcuts::ShortcutMatcher","value":"ShortcutMatcher {  }","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52}],"decl_id":null,"docs":" Match keyboard shortcuts and excute actions.","sig":null,"attributes":[{"value":"/ Match keyboard shortcuts and excute actions.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":101288,"byte_end":101336,"line_start":3,"line_end":3,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":101337,"byte_end":101340,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Every shortcut consists of a list of modifier keys pressed and a","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":101341,"byte_end":101409,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ single non-modifier key pressed.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":101410,"byte_end":101446,"line_start":6,"line_end":6,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":101447,"byte_end":101450,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The Control + C shortcut requires the user to hold down the Control","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":101451,"byte_end":101522,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/ modifier key. When the C key is pressed the action (usually copy)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":101523,"byte_end":101592,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/ is triggered. The event is consumed so other matchers don't also","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":101593,"byte_end":101661,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"/ act on the shortcut. This is also true for the release of the","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":101662,"byte_end":101727,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/ C key as else only key release events would be forwarded.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":101728,"byte_end":101789,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":101790,"byte_end":101793,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ASCII letters are compared ignoring case. Only takes","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":101794,"byte_end":101850,"line_start":14,"line_end":14,"column_start":1,"column_end":57}},{"value":"/ the shift, control, alt and meta modifiers into account.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":101851,"byte_end":101911,"line_start":15,"line_end":15,"column_start":1,"column_end":61}},{"value":"/ If other modifiers beside those expected are found","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":101912,"byte_end":101966,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/ the shortcut is not matched.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":101967,"byte_end":101999,"line_start":17,"line_end":17,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":102216,"byte_end":102219,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<ShortcutMatcher<T>>::new","value":"fn (state: KeyState, key: Key, mut modifiers: Modifiers) -> ShortcutMatcher<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new shortcut matcher.\n","sig":null,"attributes":[{"value":"/ Create a new shortcut matcher.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":102170,"byte_end":102204,"line_start":27,"line_end":27,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":102696,"byte_end":102706,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"from_event","qualname":"<ShortcutMatcher<T>>::from_event","value":"fn (key_event: KeyboardEvent) -> ShortcutMatcher<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new matcher from an event.","sig":null,"attributes":[{"value":"/ Create a new matcher from an event.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":102551,"byte_end":102590,"line_start":39,"line_end":39,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":102595,"byte_end":102598,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Only state, key and modifiers are stored. The other attributes are discarded.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":102603,"byte_end":102684,"line_start":41,"line_end":41,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":104380,"byte_end":104388,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"shortcut","qualname":"<ShortcutMatcher<T>>::shortcut","value":"fn <K, F> (mut self, modifiers: Modifiers, key: K, f: F) -> ShortcutMatcher<T>","parent":null,"children":[],"decl_id":null,"docs":" Test a keyboard shortcut.","sig":null,"attributes":[{"value":"/ Test a keyboard shortcut.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":102850,"byte_end":102879,"line_start":46,"line_end":46,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":102884,"byte_end":102887,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ If the modifiers are active and the key is pressed","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":102892,"byte_end":102946,"line_start":48,"line_end":48,"column_start":5,"column_end":59}},{"value":"/ execute the provided function.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":102951,"byte_end":102985,"line_start":49,"line_end":49,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":102990,"byte_end":102993,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":102998,"byte_end":103009,"line_start":51,"line_end":51,"column_start":5,"column_end":16}},{"value":"/ # use keyboard_types::{Key, KeyboardEvent, Modifiers, ShortcutMatcher};","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":103014,"byte_end":103089,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ # fn do_something() {}","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":103094,"byte_end":103120,"line_start":53,"line_end":53,"column_start":5,"column_end":31}},{"value":"/ # fn forward_event() {}","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":103125,"byte_end":103152,"line_start":54,"line_end":54,"column_start":5,"column_end":32}},{"value":"/ # let event = KeyboardEvent {","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":103157,"byte_end":103190,"line_start":55,"line_end":55,"column_start":5,"column_end":38}},{"value":"/ #     state: keyboard_types::KeyState::Down,","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":103195,"byte_end":103243,"line_start":56,"line_end":56,"column_start":5,"column_end":53}},{"value":"/ #     key: Key::Enter,","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":103248,"byte_end":103274,"line_start":57,"line_end":57,"column_start":5,"column_end":31}},{"value":"/ #     code: keyboard_types::Code::Enter,","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":103279,"byte_end":103323,"line_start":58,"line_end":58,"column_start":5,"column_end":49}},{"value":"/ #     location: keyboard_types::Location::Standard,","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":103328,"byte_end":103383,"line_start":59,"line_end":59,"column_start":5,"column_end":60}},{"value":"/ #     modifiers: Modifiers::empty(),","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":103388,"byte_end":103428,"line_start":60,"line_end":60,"column_start":5,"column_end":45}},{"value":"/ #     repeat: false,","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":103433,"byte_end":103457,"line_start":61,"line_end":61,"column_start":5,"column_end":29}},{"value":"/ #     is_composing: false,","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":103462,"byte_end":103492,"line_start":62,"line_end":62,"column_start":5,"column_end":35}},{"value":"/ # };","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":103497,"byte_end":103505,"line_start":63,"line_end":63,"column_start":5,"column_end":13}},{"value":"/ // Create a matcher from a keyboard event.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":103510,"byte_end":103556,"line_start":64,"line_end":64,"column_start":5,"column_end":51}},{"value":"/ // Shortcuts are tested in-order.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":103561,"byte_end":103598,"line_start":65,"line_end":65,"column_start":5,"column_end":42}},{"value":"/ ShortcutMatcher::from_event(event)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":103603,"byte_end":103641,"line_start":66,"line_end":66,"column_start":5,"column_end":43}},{"value":"/ // Do something if the Tab key is pressed.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":103646,"byte_end":103692,"line_start":67,"line_end":67,"column_start":5,"column_end":51}},{"value":"/ .shortcut(Modifiers::empty(), Key::Tab, do_something)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":103697,"byte_end":103754,"line_start":68,"line_end":68,"column_start":5,"column_end":62}},{"value":"/ // If Shift + Tab are pressed do something.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":103759,"byte_end":103806,"line_start":69,"line_end":69,"column_start":5,"column_end":52}},{"value":"/ // This is executed because the previous shortcut requires modifiers to be empty.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":103811,"byte_end":103896,"line_start":70,"line_end":70,"column_start":5,"column_end":90}},{"value":"/ .shortcut(Modifiers::SHIFT, Key::Tab, do_something)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":103901,"byte_end":103956,"line_start":71,"line_end":71,"column_start":5,"column_end":60}},{"value":"/ // Instead of named keys letters and other characters can be used.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":103961,"byte_end":104031,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ .shortcut(Modifiers::CONTROL, 'L', do_something)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":104036,"byte_end":104088,"line_start":73,"line_end":73,"column_start":5,"column_end":57}},{"value":"/ // Multiple modifiers are combined with bitwise OR (`|`) to form a new mask.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":104093,"byte_end":104173,"line_start":74,"line_end":74,"column_start":5,"column_end":85}},{"value":"/ .shortcut(Modifiers::CONTROL | Modifiers::SHIFT, 'X', do_something)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":104178,"byte_end":104249,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ // If none of the previous shortcuts matched forward the event.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":104254,"byte_end":104321,"line_start":76,"line_end":76,"column_start":5,"column_end":72}},{"value":"/ .otherwise(forward_event);","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":104326,"byte_end":104356,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":104361,"byte_end":104368,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":106018,"byte_end":106035,"line_start":125,"line_end":125,"column_start":12,"column_end":29},"name":"optional_shortcut","qualname":"<ShortcutMatcher<T>>::optional_shortcut","value":"fn <K, F> (self, enabled: bool, modifiers: Modifiers, key: K, f: F) -> ShortcutMatcher<T>","parent":null,"children":[],"decl_id":null,"docs":" Only test a shortcut if the enabled flag is set.","sig":null,"attributes":[{"value":"/ Only test a shortcut if the enabled flag is set.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":104825,"byte_end":104877,"line_start":96,"line_end":96,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":104882,"byte_end":104885,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ If the `enabled` flag is true behaves the same as","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":104890,"byte_end":104943,"line_start":98,"line_end":98,"column_start":5,"column_end":58}},{"value":"/ `shortcut` otherwise does nothing.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":104948,"byte_end":104986,"line_start":99,"line_end":99,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":104991,"byte_end":104994,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is especially useful for platform specific shortcuts.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":104999,"byte_end":105061,"line_start":101,"line_end":101,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":105066,"byte_end":105069,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":105074,"byte_end":105085,"line_start":103,"line_end":103,"column_start":5,"column_end":16}},{"value":"/ # use keyboard_types::{Key, KeyboardEvent, Modifiers, ShortcutMatcher};","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":105090,"byte_end":105165,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ # fn copy() {}","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":105170,"byte_end":105188,"line_start":105,"line_end":105,"column_start":5,"column_end":23}},{"value":"/ # fn quit() {}","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":105193,"byte_end":105211,"line_start":106,"line_end":106,"column_start":5,"column_end":23}},{"value":"/ # let event = KeyboardEvent {","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":105216,"byte_end":105249,"line_start":107,"line_end":107,"column_start":5,"column_end":38}},{"value":"/ #     state: keyboard_types::KeyState::Down,","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":105254,"byte_end":105302,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/ #     key: Key::Enter,","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":105307,"byte_end":105333,"line_start":109,"line_end":109,"column_start":5,"column_end":31}},{"value":"/ #     code: keyboard_types::Code::Enter,","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":105338,"byte_end":105382,"line_start":110,"line_end":110,"column_start":5,"column_end":49}},{"value":"/ #     location: keyboard_types::Location::Standard,","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":105387,"byte_end":105442,"line_start":111,"line_end":111,"column_start":5,"column_end":60}},{"value":"/ #     modifiers: Modifiers::empty(),","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":105447,"byte_end":105487,"line_start":112,"line_end":112,"column_start":5,"column_end":45}},{"value":"/ #     repeat: false,","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":105492,"byte_end":105516,"line_start":113,"line_end":113,"column_start":5,"column_end":29}},{"value":"/ #     is_composing: false,","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":105521,"byte_end":105551,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/ # };","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":105556,"byte_end":105564,"line_start":115,"line_end":115,"column_start":5,"column_end":13}},{"value":"/ ShortcutMatcher::from_event(event)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":105569,"byte_end":105607,"line_start":116,"line_end":116,"column_start":5,"column_end":43}},{"value":"/ .shortcut(Modifiers::CONTROL, 'c', copy)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":105612,"byte_end":105656,"line_start":117,"line_end":117,"column_start":5,"column_end":49}},{"value":"/ .optional_shortcut(cfg!(target_os=\"macos\"), Modifiers::META, 'q', quit)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":105661,"byte_end":105736,"line_start":118,"line_end":118,"column_start":5,"column_end":80}},{"value":"/ .shortcut(Modifiers::CONTROL, 'w', quit);","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":105741,"byte_end":105786,"line_start":119,"line_end":119,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":105791,"byte_end":105798,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":105803,"byte_end":105806,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ In the example the app supports the copy action on all platforms","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":105811,"byte_end":105879,"line_start":122,"line_end":122,"column_start":5,"column_end":73}},{"value":"/ and can be closed with Control&nbsp;+&nbsp;W everywhere but additionally","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":105884,"byte_end":105960,"line_start":123,"line_end":123,"column_start":5,"column_end":81}},{"value":"/ with Command&nbsp;+&nbsp;Q on Mac OS.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":105965,"byte_end":106006,"line_start":124,"line_end":124,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":106559,"byte_end":106568,"line_start":147,"line_end":147,"column_start":12,"column_end":21},"name":"otherwise","qualname":"<ShortcutMatcher<T>>::otherwise","value":"fn <F> (self, f: F) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute the function is no keyboard shortcut matched.","sig":null,"attributes":[{"value":"/ Execute the function is no keyboard shortcut matched.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":106342,"byte_end":106399,"line_start":142,"line_end":142,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":106404,"byte_end":106407,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Note that the passed function is exectued on both","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":106412,"byte_end":106465,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/ keydown and keyup unlike the shortcuts which only","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":106470,"byte_end":106523,"line_start":145,"line_end":145,"column_start":5,"column_end":58}},{"value":"/ run on keydown.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":106528,"byte_end":106547,"line_start":146,"line_end":146,"column_start":5,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":106759,"byte_end":106767,"line_start":159,"line_end":159,"column_start":11,"column_end":19},"name":"MatchKey","qualname":"::shortcuts::MatchKey","value":"MatchKey","parent":null,"children":[{"krate":0,"index":66}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":106777,"byte_end":106786,"line_start":160,"line_end":160,"column_start":8,"column_end":17},"name":"match_key","qualname":"::shortcuts::MatchKey::match_key","value":"fn (&self, key: &Key) -> bool","parent":{"krate":0,"index":65},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"webdriver","qualname":"::webdriver","value":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":2352},{"krate":0,"index":2408},{"krate":0,"index":2406},{"krate":0,"index":2404},{"krate":0,"index":2398},{"krate":0,"index":2355},{"krate":0,"index":92},{"krate":0,"index":2410},{"krate":0,"index":2474},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2464},{"krate":0,"index":2462},{"krate":0,"index":2456},{"krate":0,"index":2417},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102}],"decl_id":null,"docs":" Keyboard related WebDriver functionality.","sig":null,"attributes":[{"value":"cfg(feature = \"webdriver\")","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":601,"byte_end":630,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"! Keyboard related WebDriver functionality.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":107208,"byte_end":107253,"line_start":1,"line_end":1,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":107254,"byte_end":107257,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The low-level `dispatch_keydown` and `dispatch_keyup` API","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":107258,"byte_end":107319,"line_start":3,"line_end":3,"column_start":1,"column_end":62}},{"value":"! creates keyboard events from WebDriver codes. It is used","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":107320,"byte_end":107380,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"! in the *Perform Actions* API.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":107381,"byte_end":107414,"line_start":5,"line_end":5,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":107415,"byte_end":107418,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":107419,"byte_end":107430,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"! # extern crate keyboard_types;","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":107431,"byte_end":107465,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"! # use keyboard_types::*;","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":107466,"byte_end":107494,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"! # use keyboard_types::webdriver::*;","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":107495,"byte_end":107534,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"! let mut state = KeyInputState::new();","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":107535,"byte_end":107576,"line_start":11,"line_end":11,"column_start":1,"column_end":42}},{"value":"! let mut keyboard_event = state.dispatch_keydown('a');","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":107577,"byte_end":107634,"line_start":12,"line_end":12,"column_start":1,"column_end":58}},{"value":"! assert_eq!(keyboard_event.state, KeyState::Down);","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":107635,"byte_end":107688,"line_start":13,"line_end":13,"column_start":1,"column_end":54}},{"value":"! assert_eq!(keyboard_event.key, Key::Character(\"a\".to_owned()));","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":107689,"byte_end":107756,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"! assert_eq!(keyboard_event.code, Code::KeyA);","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":107757,"byte_end":107805,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":107806,"byte_end":107809,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! // The `\\u{E029}` code is the WebDriver id for the Numpad divide key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":107810,"byte_end":107883,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"! keyboard_event = state.dispatch_keydown('\\u{E050}');","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":107884,"byte_end":107940,"line_start":18,"line_end":18,"column_start":1,"column_end":57}},{"value":"! assert_eq!(keyboard_event.key, Key::Shift);","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":107941,"byte_end":107988,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"! assert_eq!(keyboard_event.code, Code::ShiftRight);","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":107989,"byte_end":108043,"line_start":20,"line_end":20,"column_start":1,"column_end":55}},{"value":"! assert_eq!(keyboard_event.location, Location::Right);","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":108044,"byte_end":108101,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":108102,"byte_end":108105,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! keyboard_event = state.dispatch_keyup('\\u{E050}').expect(\"key is released\");","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":108106,"byte_end":108186,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"! keyboard_event = state.dispatch_keyup('a').expect(\"key is released\");","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":108187,"byte_end":108260,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"! ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":108261,"byte_end":108268,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":108269,"byte_end":108272,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! The higher level `send_keys` function is used for the *Element Send Keys*","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":108273,"byte_end":108350,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"! WebDriver API. It accepts a string and returns a sequence of `KeyboardEvent`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":108351,"byte_end":108431,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"! and `CompositionEvent` values.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":108432,"byte_end":108466,"line_start":29,"line_end":29,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":108467,"byte_end":108470,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":108471,"byte_end":108482,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"! # extern crate keyboard_types;","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":108483,"byte_end":108517,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"! # use keyboard_types::*;","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":108518,"byte_end":108546,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"! # use keyboard_types::webdriver::*;","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":108547,"byte_end":108586,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"! let events = send_keys(\"Hello world!\\u{E006}\");","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":108587,"byte_end":108638,"line_start":35,"line_end":35,"column_start":1,"column_end":52}},{"value":"! println!(\"{:#?}\", events);","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":108639,"byte_end":108669,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":108670,"byte_end":108673,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! let events = send_keys(\"A\\u{0308}\");","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":108674,"byte_end":108714,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"! println!(\"{:#?}\", events);","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":108715,"byte_end":108745,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"! ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":108746,"byte_end":108753,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":108754,"byte_end":108757,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! Specification: https://w3c.github.io/webdriver/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":108758,"byte_end":108809,"line_start":42,"line_end":42,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2352},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":117557,"byte_end":117570,"line_start":283,"line_end":283,"column_start":12,"column_end":25},"name":"KeyInputState","qualname":"::webdriver::KeyInputState","value":"KeyInputState {  }","parent":null,"children":[{"krate":0,"index":2353},{"krate":0,"index":2354}],"decl_id":null,"docs":" Store pressed keys and modifiers.","sig":null,"attributes":[{"value":"/ Store pressed keys and modifiers.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":117345,"byte_end":117382,"line_start":278,"line_end":278,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":117383,"byte_end":117386,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ Spec: https://w3c.github.io/webdriver/#dfn-key-input-state","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":117387,"byte_end":117449,"line_start":280,"line_end":280,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":117761,"byte_end":117764,"line_start":292,"line_end":292,"column_start":12,"column_end":15},"name":"new","qualname":"<KeyInputState>::new","value":"fn () -> KeyInputState","parent":null,"children":[],"decl_id":null,"docs":" New state without any keys or modifiers pressed.","sig":null,"attributes":[{"value":"/ New state without any keys or modifiers pressed.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":117654,"byte_end":117706,"line_start":289,"line_end":289,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":117711,"byte_end":117714,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ Same as the default value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":117719,"byte_end":117749,"line_start":291,"line_end":291,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":118256,"byte_end":118272,"line_start":305,"line_end":305,"column_start":12,"column_end":28},"name":"dispatch_keydown","qualname":"<KeyInputState>::dispatch_keydown","value":"fn (&mut self, raw_key: char) -> KeyboardEvent","parent":null,"children":[],"decl_id":null,"docs":" Get a keyboard-keydown event from a WebDriver key value.","sig":null,"attributes":[{"value":"/ Get a keyboard-keydown event from a WebDriver key value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":117830,"byte_end":117890,"line_start":296,"line_end":296,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":117895,"byte_end":117898,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ Stores that the key is pressed in the state object.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":117903,"byte_end":117958,"line_start":298,"line_end":298,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":117963,"byte_end":117966,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ The input cancel list is not implemented here but can be emulated","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":117971,"byte_end":118040,"line_start":300,"line_end":300,"column_start":5,"column_end":74}},{"value":"/ by adding the `raw_key` value with a `keyUp` action to a list","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":118045,"byte_end":118110,"line_start":301,"line_end":301,"column_start":5,"column_end":70}},{"value":"/ before executing this function.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":118115,"byte_end":118150,"line_start":302,"line_end":302,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":118155,"byte_end":118158,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Specification: https://w3c.github.io/webdriver/#dfn-dispatch-a-keydown-action","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":118163,"byte_end":118244,"line_start":304,"line_end":304,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":119064,"byte_end":119078,"line_start":328,"line_end":328,"column_start":12,"column_end":26},"name":"dispatch_keyup","qualname":"<KeyInputState>::dispatch_keyup","value":"fn (&mut self, raw_key: char) -> Option<KeyboardEvent>","parent":null,"children":[],"decl_id":null,"docs":" Get a keyboard-keyup event from a WebDriver key value.","sig":null,"attributes":[{"value":"/ Get a keyboard-keyup event from a WebDriver key value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":118819,"byte_end":118877,"line_start":323,"line_end":323,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":118882,"byte_end":118885,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Updates state. Returns `None` if the key is not listed as pressed.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":118890,"byte_end":118960,"line_start":325,"line_end":325,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":118965,"byte_end":118968,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Specification: https://w3c.github.io/webdriver/#dfn-dispatch-a-keyup-action","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":118973,"byte_end":119052,"line_start":327,"line_end":327,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2411},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":120978,"byte_end":120986,"line_start":381,"line_end":381,"column_start":5,"column_end":13},"name":"Keyboard","qualname":"::webdriver::Event::Keyboard","value":"Event::Keyboard(KeyboardEvent)","parent":{"krate":0,"index":2410},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2414},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":121007,"byte_end":121018,"line_start":382,"line_end":382,"column_start":5,"column_end":16},"name":"Composition","qualname":"::webdriver::Event::Composition","value":"Event::Composition(CompositionEvent)","parent":{"krate":0,"index":2410},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2410},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":120966,"byte_end":120971,"line_start":380,"line_end":380,"column_start":10,"column_end":15},"name":"Event","qualname":"::webdriver::Event","value":"Event::{Keyboard, Composition}","parent":null,"children":[{"krate":0,"index":2411},{"krate":0,"index":2414}],"decl_id":null,"docs":" Either a `KeyboardEvent` or a `CompositionEvent`.","sig":null,"attributes":[{"value":"/ Either a `KeyboardEvent` or a `CompositionEvent`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":120749,"byte_end":120802,"line_start":375,"line_end":375,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":120803,"byte_end":120806,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ Returned by the `send_keys` function.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":120807,"byte_end":120848,"line_start":377,"line_end":377,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":121429,"byte_end":121438,"line_start":400,"line_end":400,"column_start":8,"column_end":17},"name":"send_keys","qualname":"::webdriver::send_keys","value":"fn (text: &str) -> Vec<Event>","parent":null,"children":[],"decl_id":null,"docs":" Compute the events resulting from a WebDriver *Element Send Keys* command.","sig":null,"attributes":[{"value":"/ Compute the events resulting from a WebDriver *Element Send Keys* command.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":121278,"byte_end":121356,"line_start":397,"line_end":397,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":121357,"byte_end":121360,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ Spec: https://w3c.github.io/webdriver/#element-send-keys","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":121361,"byte_end":121421,"line_start":399,"line_end":399,"column_start":1,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2477},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":899,"byte_end":903,"line_start":38,"line_end":38,"column_start":5,"column_end":9},"name":"Down","qualname":"::KeyState::Down","value":"KeyState::Down","parent":{"krate":0,"index":2476},"children":[],"decl_id":null,"docs":" Key is pressed.","sig":null,"attributes":[{"value":"/ Key is pressed.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":828,"byte_end":847,"line_start":35,"line_end":35,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":852,"byte_end":855,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ In JS: \"keydown\" event firing.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":860,"byte_end":894,"line_start":37,"line_end":37,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2479},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":972,"byte_end":974,"line_start":42,"line_end":42,"column_start":5,"column_end":7},"name":"Up","qualname":"::KeyState::Up","value":"KeyState::Up","parent":{"krate":0,"index":2476},"children":[],"decl_id":null,"docs":" Key is released.","sig":null,"attributes":[{"value":"/ Key is released.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":909,"byte_end":929,"line_start":39,"line_end":39,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":934,"byte_end":937,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ In JS: \"keyup event\".","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":942,"byte_end":967,"line_start":41,"line_end":41,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":2476},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":813,"byte_end":821,"line_start":34,"line_end":34,"column_start":10,"column_end":18},"name":"KeyState","qualname":"::KeyState","value":"KeyState::{Down, Up}","parent":null,"children":[{"krate":0,"index":2477},{"krate":0,"index":2479}],"decl_id":null,"docs":" Describes the state the key is in.\n","sig":null,"attributes":[{"value":"/ Describes the state the key is in.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":651,"byte_end":689,"line_start":31,"line_end":31,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2540},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":1173,"byte_end":1186,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"KeyboardEvent","qualname":"::KeyboardEvent","value":"KeyboardEvent { state, key, code, location, modifiers, repeat, is_composing }","parent":null,"children":[{"krate":0,"index":2541},{"krate":0,"index":2542},{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2545},{"krate":0,"index":2546},{"krate":0,"index":2547}],"decl_id":null,"docs":" Keyboard events are issued for all pressed and released keys.\n","sig":null,"attributes":[{"value":"/ Keyboard events are issued for all pressed and released keys.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":979,"byte_end":1044,"line_start":45,"line_end":45,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":2541},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":1245,"byte_end":1250,"line_start":50,"line_end":50,"column_start":9,"column_end":14},"name":"state","qualname":"::KeyboardEvent::state","value":"KeyState","parent":{"krate":0,"index":2540},"children":[],"decl_id":null,"docs":" Whether the key is pressed or released.\n","sig":null,"attributes":[{"value":"/ Whether the key is pressed or released.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":1193,"byte_end":1236,"line_start":49,"line_end":49,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2542},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":1297,"byte_end":1300,"line_start":52,"line_end":52,"column_start":9,"column_end":12},"name":"key","qualname":"::KeyboardEvent::key","value":"key::Key","parent":{"krate":0,"index":2540},"children":[],"decl_id":null,"docs":" Logical key value.\n","sig":null,"attributes":[{"value":"/ Logical key value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":1266,"byte_end":1288,"line_start":51,"line_end":51,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":2543},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":1346,"byte_end":1350,"line_start":54,"line_end":54,"column_start":9,"column_end":13},"name":"code","qualname":"::KeyboardEvent::code","value":"code::Code","parent":{"krate":0,"index":2540},"children":[],"decl_id":null,"docs":" Physical key position.\n","sig":null,"attributes":[{"value":"/ Physical key position.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":1311,"byte_end":1337,"line_start":53,"line_end":53,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2544},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":1437,"byte_end":1445,"line_start":56,"line_end":56,"column_start":9,"column_end":17},"name":"location","qualname":"::KeyboardEvent::location","value":"location::Location","parent":{"krate":0,"index":2540},"children":[],"decl_id":null,"docs":" Location for keys with multiple instances on common keyboards.\n","sig":null,"attributes":[{"value":"/ Location for keys with multiple instances on common keyboards.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":1362,"byte_end":1428,"line_start":55,"line_end":55,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":2545},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":1506,"byte_end":1515,"line_start":58,"line_end":58,"column_start":9,"column_end":18},"name":"modifiers","qualname":"::KeyboardEvent::modifiers","value":"modifiers::Modifiers","parent":{"krate":0,"index":2540},"children":[],"decl_id":null,"docs":" Flags for pressed modifier keys.\n","sig":null,"attributes":[{"value":"/ Flags for pressed modifier keys.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":1461,"byte_end":1497,"line_start":57,"line_end":57,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2546},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":1588,"byte_end":1594,"line_start":60,"line_end":60,"column_start":9,"column_end":15},"name":"repeat","qualname":"::KeyboardEvent::repeat","value":"bool","parent":{"krate":0,"index":2540},"children":[],"decl_id":null,"docs":" True if the key is currently auto-repeated.\n","sig":null,"attributes":[{"value":"/ True if the key is currently auto-repeated.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":1532,"byte_end":1579,"line_start":59,"line_end":59,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2547},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":1730,"byte_end":1742,"line_start":63,"line_end":63,"column_start":9,"column_end":21},"name":"is_composing","qualname":"::KeyboardEvent::is_composing","value":"bool","parent":{"krate":0,"index":2540},"children":[],"decl_id":null,"docs":" Events with this flag should be ignored in a text editor\n and instead composition events should be used.\n","sig":null,"attributes":[{"value":"/ Events with this flag should be ignored in a text editor","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":1606,"byte_end":1666,"line_start":61,"line_end":61,"column_start":5,"column_end":65}},{"value":"/ and instead composition events should be used.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":1671,"byte_end":1721,"line_start":62,"line_end":62,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2624},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":1990,"byte_end":1995,"line_start":71,"line_end":71,"column_start":5,"column_end":10},"name":"Start","qualname":"::CompositionState::Start","value":"CompositionState::Start","parent":{"krate":0,"index":2623},"children":[],"decl_id":null,"docs":" In JS: \"compositionstart\" event.\n","sig":null,"attributes":[{"value":"/ In JS: \"compositionstart\" event.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":1949,"byte_end":1985,"line_start":70,"line_end":70,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2626},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":2043,"byte_end":2049,"line_start":73,"line_end":73,"column_start":5,"column_end":11},"name":"Update","qualname":"::CompositionState::Update","value":"CompositionState::Update","parent":{"krate":0,"index":2623},"children":[],"decl_id":null,"docs":" In JS: \"compositionupdate\" event.\n","sig":null,"attributes":[{"value":"/ In JS: \"compositionupdate\" event.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":2001,"byte_end":2038,"line_start":72,"line_end":72,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2628},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":2188,"byte_end":2191,"line_start":78,"line_end":78,"column_start":5,"column_end":8},"name":"End","qualname":"::CompositionState::End","value":"CompositionState::End","parent":{"krate":0,"index":2623},"children":[],"decl_id":null,"docs":" In JS: \"compositionend\" event.","sig":null,"attributes":[{"value":"/ In JS: \"compositionend\" event.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":2055,"byte_end":2089,"line_start":74,"line_end":74,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":2094,"byte_end":2097,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ In a text editor in this state the data","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":2102,"byte_end":2145,"line_start":76,"line_end":76,"column_start":5,"column_end":48}},{"value":"/ should be added to the input.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":2150,"byte_end":2183,"line_start":77,"line_end":77,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":2623},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":1926,"byte_end":1942,"line_start":69,"line_end":69,"column_start":10,"column_end":26},"name":"CompositionState","qualname":"::CompositionState","value":"CompositionState::{Start, Update, End}","parent":null,"children":[{"krate":0,"index":2624},{"krate":0,"index":2626},{"krate":0,"index":2628}],"decl_id":null,"docs":" Describes the state of a composition session.\n","sig":null,"attributes":[{"value":"/ Describes the state of a composition session.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":1753,"byte_end":1802,"line_start":66,"line_end":66,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2691},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":3004,"byte_end":3020,"line_start":101,"line_end":101,"column_start":12,"column_end":28},"name":"CompositionEvent","qualname":"::CompositionEvent","value":"CompositionEvent { state, data }","parent":null,"children":[{"krate":0,"index":2692},{"krate":0,"index":2693}],"decl_id":null,"docs":" Event to expose input methods to program logic.","sig":null,"attributes":[{"value":"/ Event to expose input methods to program logic.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":2550,"byte_end":2601,"line_start":91,"line_end":91,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":2602,"byte_end":2605,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ Provides information about entered sequences from","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":2606,"byte_end":2659,"line_start":93,"line_end":93,"column_start":1,"column_end":54}},{"value":"/ dead key combinations and IMEs.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":2660,"byte_end":2695,"line_start":94,"line_end":94,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":2696,"byte_end":2699,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ A composition session is always started by a \"compositionstart\"","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":2700,"byte_end":2767,"line_start":96,"line_end":96,"column_start":1,"column_end":68}},{"value":"/ event followed my zero or more \"compositionupdate\" events","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":2768,"byte_end":2829,"line_start":97,"line_end":97,"column_start":1,"column_end":62}},{"value":"/ and terminated by a single \"compositionend\" event.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":2830,"byte_end":2884,"line_start":98,"line_end":98,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2692},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":3065,"byte_end":3070,"line_start":103,"line_end":103,"column_start":9,"column_end":14},"name":"state","qualname":"::CompositionEvent::state","value":"CompositionState","parent":{"krate":0,"index":2691},"children":[],"decl_id":null,"docs":" Describes the event kind.\n","sig":null,"attributes":[{"value":"/ Describes the event kind.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":3027,"byte_end":3056,"line_start":102,"line_end":102,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":2693},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":3146,"byte_end":3150,"line_start":105,"line_end":105,"column_start":9,"column_end":13},"name":"data","qualname":"::CompositionEvent::data","value":"std::string::String","parent":{"krate":0,"index":2691},"children":[],"decl_id":null,"docs":" Current composition data. May be empty.\n","sig":null,"attributes":[{"value":"/ Current composition data. May be empty.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":3094,"byte_end":3137,"line_start":104,"line_end":104,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":3731,"byte_end":3746,"line_start":124,"line_end":124,"column_start":12,"column_end":27},"name":"legacy_charcode","qualname":"<Key>::legacy_charcode","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Determine a *charCode* value for a key with a character value.","sig":null,"attributes":[{"value":"/ Determine a *charCode* value for a key with a character value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":3414,"byte_end":3480,"line_start":118,"line_end":118,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":3485,"byte_end":3488,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ For all other keys the value is zero.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":3493,"byte_end":3534,"line_start":120,"line_end":120,"column_start":5,"column_end":46}},{"value":"/ The *charCode* is an implementation specific legacy property of DOM keyboard events.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":3539,"byte_end":3627,"line_start":121,"line_end":121,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":3632,"byte_end":3635,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Specification: <https://w3c.github.io/uievents/#dom-keyboardevent-charcode>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":3640,"byte_end":3719,"line_start":123,"line_end":123,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":4229,"byte_end":4243,"line_start":138,"line_end":138,"column_start":12,"column_end":26},"name":"legacy_keycode","qualname":"<Key>::legacy_keycode","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Determine a *keyCode* value for a key.","sig":null,"attributes":[{"value":"/ Determine a *keyCode* value for a key.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":3984,"byte_end":4026,"line_start":133,"line_end":133,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":4031,"byte_end":4034,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ The *keyCode* is an implementation specific legacy property of DOM keyboard events.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":4039,"byte_end":4126,"line_start":135,"line_end":135,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":4131,"byte_end":4134,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Specification: <https://w3c.github.io/uievents/#dom-keyboardevent-keycode>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":4139,"byte_end":4217,"line_start":137,"line_end":137,"column_start":5,"column_end":83}}]}],"impls":[{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":23282,"byte_end":23286,"line_start":379,"line_end":379,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":70041,"byte_end":70044,"line_start":626,"line_end":626,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":85443,"byte_end":85446,"line_start":922,"line_end":922,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":98467,"byte_end":98487,"line_start":1223,"line_end":1223,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":98611,"byte_end":98631,"line_start":1229,"line_end":1229,"column_start":16,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":102145,"byte_end":102160,"line_start":26,"line_end":26,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":106835,"byte_end":106838,"line_start":163,"line_end":163,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":117634,"byte_end":117647,"line_start":288,"line_end":288,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":121070,"byte_end":121075,"line_start":385,"line_end":385,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":121187,"byte_end":121192,"line_start":391,"line_end":391,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":2218,"byte_end":2234,"line_start":81,"line_end":81,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":3185,"byte_end":3193,"line_start":108,"line_end":108,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":3404,"byte_end":3407,"line_start":117,"line_end":117,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":5703,"byte_end":5711,"line_start":182,"line_end":182,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":5794,"byte_end":5797,"line_start":188,"line_end":188,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":5878,"byte_end":5882,"line_start":194,"line_end":194,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":5965,"byte_end":5973,"line_start":200,"line_end":200,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":639,"byte_end":648,"line_start":29,"line_end":29,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":72}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\code.rs","byte_start":23282,"byte_end":23286,"line_start":379,"line_end":379,"column_start":18,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":121},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":70041,"byte_end":70044,"line_start":626,"line_end":626,"column_start":18,"column_end":21},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":869},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":85443,"byte_end":85446,"line_start":922,"line_end":922,"column_start":18,"column_end":21},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":869},"to":{"krate":2,"index":7375}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":98467,"byte_end":98487,"line_start":1223,"line_end":1223,"column_start":23,"column_end":43},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2070},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\key.rs","byte_start":98611,"byte_end":98631,"line_start":1229,"line_end":1229,"column_start":16,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2070},"to":{"krate":1,"index":1620}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":102145,"byte_end":102160,"line_start":26,"line_end":26,"column_start":9,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":46},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\shortcuts.rs","byte_start":106835,"byte_end":106838,"line_start":163,"line_end":163,"column_start":19,"column_end":22},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":869},"to":{"krate":0,"index":65}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":117634,"byte_end":117647,"line_start":288,"line_end":288,"column_start":6,"column_end":19},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":121070,"byte_end":121075,"line_start":385,"line_end":385,"column_start":30,"column_end":35},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2410},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\webdriver.rs","byte_start":121187,"byte_end":121192,"line_start":391,"line_end":391,"column_start":33,"column_end":38},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2410},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":2218,"byte_end":2234,"line_start":81,"line_end":81,"column_start":23,"column_end":39},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2623},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":3185,"byte_end":3193,"line_start":108,"line_end":108,"column_start":23,"column_end":31},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2476},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":3404,"byte_end":3407,"line_start":117,"line_end":117,"column_start":6,"column_end":9},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":5703,"byte_end":5711,"line_start":182,"line_end":182,"column_start":18,"column_end":26},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2476},"to":{"krate":2,"index":1843}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":5794,"byte_end":5797,"line_start":188,"line_end":188,"column_start":18,"column_end":21},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":869},"to":{"krate":2,"index":1843}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":5878,"byte_end":5882,"line_start":194,"line_end":194,"column_start":18,"column_end":22},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":121},"to":{"krate":2,"index":1843}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\keyboard-types-0.5.0\\src\\lib.rs","byte_start":5965,"byte_end":5973,"line_start":200,"line_end":200,"column_start":18,"column_end":26},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2076},"to":{"krate":2,"index":1843}}]}