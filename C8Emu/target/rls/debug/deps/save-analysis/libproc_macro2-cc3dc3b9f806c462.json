{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17","program":"C:\\Users\\aarav_gupta\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","proc_macro2","--edition=2018","C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"proc-macro\"","-C","metadata=cc3dc3b9f806c462","-C","extra-filename=-cc3dc3b9f806c462","--out-dir","c:\\Users\\aarav_gupta\\Chip8Emu\\C8Emu\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\aarav_gupta\\Chip8Emu\\C8Emu\\target\\rls\\debug\\deps","--extern","unicode_xid=c:\\Users\\aarav_gupta\\Chip8Emu\\C8Emu\\target\\rls\\debug\\deps\\libunicode_xid-4e3f7807ef0869ed.rmeta","--cap-lints","allow","--cfg","use_proc_macro","--cfg","wrap_proc_macro","--error-format=json","--sysroot","C:\\Users\\aarav_gupta\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\aarav_gupta\\Chip8Emu\\C8Emu\\target\\rls\\debug\\deps\\libproc_macro2-cc3dc3b9f806c462.rmeta"},"prelude":{"crate_id":{"name":"proc_macro2","disambiguator":[5969043658680578360,8307959773765705007]},"crate_root":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src","external_crates":[{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2953284957370121905,516218847044108999]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[4886921161452974022,9452701908620647308]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3203561457090851205,4632072058037203867]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[3169376498131592849,9803978538207206865]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9199649512872691809,295485750221223515]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8443236399884245798,5222098755004489868]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6875631416372754603,10839808870381595949]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1502820548942319655,12324332090615114041]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[430706850608609257,9838809896428719127]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14503357713055743246,17731918345561731946]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[5693586899772496405,17220236988479499600]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1060170945230123807,4750192540160149325]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[5837979218880944404,14867613958503134191]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","num":14,"id":{"name":"proc_macro","disambiguator":[3100768199380325622,15407310084892835620]}},{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\parse.rs","num":15,"id":{"name":"unicode_xid","disambiguator":[9535711189751034184,8764300284157299878]}}],"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":0,"byte_end":39680,"line_start":1,"line_end":1226,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":700},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":38725,"byte_end":38736,"line_start":1189,"line_end":1189,"column_start":20,"column_end":31},"alias_span":null,"name":"TokenStream","value":"","parent":{"krate":0,"index":491}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":0,"byte_end":39680,"line_start":1,"line_end":1226,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":86},{"krate":0,"index":100},{"krate":0,"index":218},{"krate":0,"index":700},{"krate":0,"index":703},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":705},{"krate":0,"index":710},{"krate":0,"index":708},{"krate":0,"index":400},{"krate":0,"index":407},{"krate":0,"index":711},{"krate":0,"index":724},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":749},{"krate":0,"index":747},{"krate":0,"index":745},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":424},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":750},{"krate":0,"index":754},{"krate":0,"index":756},{"krate":0,"index":771},{"krate":0,"index":769},{"krate":0,"index":767},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":438},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":448},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":491}],"decl_id":null,"docs":" A wrapper around the procedural macro API of the compiler's [`proc_macro`]\n crate. This library serves two purposes:","sig":null,"attributes":[{"value":"! A wrapper around the procedural macro API of the compiler's [`proc_macro`]","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":0,"byte_end":78,"line_start":1,"line_end":1,"column_start":1,"column_end":79}},{"value":"! crate. This library serves two purposes:","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":79,"byte_end":123,"line_start":2,"line_end":2,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":124,"byte_end":127,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! [`proc_macro`]: https://doc.rust-lang.org/proc_macro/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":128,"byte_end":185,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":186,"byte_end":189,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! - **Bring proc-macro-like functionality to other contexts like build.rs and","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":190,"byte_end":269,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"!   main.rs.** Types from `proc_macro` are entirely specific to procedural","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":270,"byte_end":346,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"!   macros and cannot ever exist in code outside of a procedural macro.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":347,"byte_end":420,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"!   Meanwhile `proc_macro2` types may exist anywhere including non-macro code.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":421,"byte_end":501,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"!   By developing foundational libraries like [syn] and [quote] against","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":502,"byte_end":575,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"!   `proc_macro2` rather than `proc_macro`, the procedural macro ecosystem","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":576,"byte_end":652,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"!   becomes easily applicable to many other use cases and we avoid","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":653,"byte_end":721,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"!   reimplementing non-macro equivalents of those libraries.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":722,"byte_end":784,"line_start":13,"line_end":13,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":785,"byte_end":788,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! - **Make procedural macros unit testable.** As a consequence of being","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":789,"byte_end":862,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"!   specific to procedural macros, nothing that uses `proc_macro` can be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":863,"byte_end":937,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"!   executed from a unit test. In order for helper libraries or components of","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":938,"byte_end":1017,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"!   a macro to be testable in isolation, they must be implemented using","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1018,"byte_end":1091,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"!   `proc_macro2`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1092,"byte_end":1112,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1113,"byte_end":1116,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! [syn]: https://github.com/dtolnay/syn","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1117,"byte_end":1158,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"! [quote]: https://github.com/dtolnay/quote","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1159,"byte_end":1204,"line_start":22,"line_end":22,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1205,"byte_end":1208,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1209,"byte_end":1220,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1221,"byte_end":1224,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! The skeleton of a typical procedural macro typically looks like this:","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1225,"byte_end":1298,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1299,"byte_end":1302,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1303,"byte_end":1310,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"! extern crate proc_macro;","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1311,"byte_end":1339,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1340,"byte_end":1343,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! # const IGNORE: &str = stringify! {","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1344,"byte_end":1383,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"! #[proc_macro_derive(MyDerive)]","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1384,"byte_end":1418,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"! # };","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1419,"byte_end":1427,"line_start":33,"line_end":33,"column_start":1,"column_end":9}},{"value":"! # #[cfg(wrap_proc_macro)]","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1428,"byte_end":1457,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"! pub fn my_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1458,"byte_end":1539,"line_start":35,"line_end":35,"column_start":1,"column_end":82}},{"value":"!     let input = proc_macro2::TokenStream::from(input);","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1540,"byte_end":1598,"line_start":36,"line_end":36,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1599,"byte_end":1602,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"!     let output: proc_macro2::TokenStream = {","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1603,"byte_end":1651,"line_start":38,"line_end":38,"column_start":1,"column_end":49}},{"value":"!         /* transform input */","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1652,"byte_end":1685,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"!         # input","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1686,"byte_end":1705,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"!     };","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1706,"byte_end":1716,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1717,"byte_end":1720,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"!     proc_macro::TokenStream::from(output)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1721,"byte_end":1766,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"! }","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1767,"byte_end":1772,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1773,"byte_end":1780,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1781,"byte_end":1784,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! If parsing with [Syn], you'll use [`parse_macro_input!`] instead to","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1785,"byte_end":1856,"line_start":47,"line_end":47,"column_start":1,"column_end":72}},{"value":"! propagate parse errors correctly back to the compiler when parsing fails.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1857,"byte_end":1934,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1935,"byte_end":1938,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! [`parse_macro_input!`]: https://docs.rs/syn/1.0/syn/macro.parse_macro_input.html","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":1939,"byte_end":2023,"line_start":50,"line_end":50,"column_start":1,"column_end":85}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":2024,"byte_end":2027,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! # Unstable features","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":2028,"byte_end":2051,"line_start":52,"line_end":52,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":2052,"byte_end":2055,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! The default feature set of proc-macro2 tracks the most recent stable","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":2056,"byte_end":2128,"line_start":54,"line_end":54,"column_start":1,"column_end":73}},{"value":"! compiler API. Functionality in `proc_macro` that is not yet stable is not","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":2129,"byte_end":2206,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"! exposed by proc-macro2 by default.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":2207,"byte_end":2245,"line_start":56,"line_end":56,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":2246,"byte_end":2249,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"! To opt into the additional APIs available in the most recent nightly","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":2250,"byte_end":2322,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"! compiler, the `procmacro2_semver_exempt` config flag must be passed to","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":2323,"byte_end":2397,"line_start":59,"line_end":59,"column_start":1,"column_end":75}},{"value":"! rustc. We will polyfill those nightly-only APIs back to Rust 1.31.0. As","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":2398,"byte_end":2473,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"! these are unstable APIs that track the nightly compiler, minor versions of","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":2474,"byte_end":2552,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"! proc-macro2 may make breaking changes to them at any time.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":2553,"byte_end":2615,"line_start":62,"line_end":62,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":2616,"byte_end":2619,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! ```sh","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":2620,"byte_end":2629,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"! RUSTFLAGS='--cfg procmacro2_semver_exempt' cargo build","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":2630,"byte_end":2688,"line_start":65,"line_end":65,"column_start":1,"column_end":59}},{"value":"! ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":2689,"byte_end":2696,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":2697,"byte_end":2700,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! Note that this must not only be done for your crate, but for any crate that","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":2701,"byte_end":2780,"line_start":68,"line_end":68,"column_start":1,"column_end":80}},{"value":"! depends on your crate. This infectious nature is intentional, as it serves","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":2781,"byte_end":2859,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"! as a reminder that you are outside of the normal semver guarantees.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":2860,"byte_end":2931,"line_start":70,"line_end":70,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":2932,"byte_end":2935,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"! Semver exempt methods are marked as such in the proc-macro2 documentation.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":2936,"byte_end":3014,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":3015,"byte_end":3018,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! # Thread-Safety","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":3019,"byte_end":3038,"line_start":74,"line_end":74,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":3039,"byte_end":3042,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! Most types in this crate are `!Sync` because the underlying compiler","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":3043,"byte_end":3115,"line_start":76,"line_end":76,"column_start":1,"column_end":73}},{"value":"! types make use of thread-local memory, meaning they cannot be accessed from","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":3116,"byte_end":3195,"line_start":77,"line_end":77,"column_start":1,"column_end":80}},{"value":"! a different thread.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":3196,"byte_end":3219,"line_start":78,"line_end":78,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fallback","qualname":"::fallback","value":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":531},{"krate":0,"index":533},{"krate":0,"index":118},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":535},{"krate":0,"index":544},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":546},{"krate":0,"index":559},{"krate":0,"index":558},{"krate":0,"index":556},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":561},{"krate":0,"index":569},{"krate":0,"index":568},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":161},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":571},{"krate":0,"index":575},{"krate":0,"index":169},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":577},{"krate":0,"index":581},{"krate":0,"index":181},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":199},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":214},{"krate":0,"index":216}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":64869,"byte_end":64874,"line_start":20,"line_end":20,"column_start":8,"column_end":13},"name":"force","qualname":"::fallback::force","value":"fn () -> ()","parent":null,"children":[],"decl_id":null,"docs":" Force use of proc-macro2's fallback implementation of the API for now, even\n if the compiler's implementation is available.\n","sig":null,"attributes":[{"value":"/ Force use of proc-macro2's fallback implementation of the API for now, even","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":64731,"byte_end":64810,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ if the compiler's implementation is available.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":64811,"byte_end":64861,"line_start":19,"line_end":19,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":65050,"byte_end":65057,"line_start":27,"line_end":27,"column_start":8,"column_end":15},"name":"unforce","qualname":"::fallback::unforce","value":"fn () -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resume using the compiler's implementation of the proc macro API if it is\n available.\n","sig":null,"attributes":[{"value":"/ Resume using the compiler's implementation of the proc macro API if it is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":64950,"byte_end":65027,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":65028,"byte_end":65042,"line_start":26,"line_end":26,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":700},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":4496,"byte_end":4507,"line_start":123,"line_end":123,"column_start":12,"column_end":23},"name":"TokenStream","qualname":"::TokenStream","value":"TokenStream {  }","parent":null,"children":[{"krate":0,"index":701},{"krate":0,"index":702}],"decl_id":null,"docs":" An abstract stream of tokens, or more concretely a sequence of token trees.","sig":null,"attributes":[{"value":"/ An abstract stream of tokens, or more concretely a sequence of token trees.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":4127,"byte_end":4206,"line_start":115,"line_end":115,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":4207,"byte_end":4210,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ This type provides interfaces for iterating over token trees and for","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":4211,"byte_end":4283,"line_start":117,"line_end":117,"column_start":1,"column_end":73}},{"value":"/ collecting token trees into one stream.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":4284,"byte_end":4327,"line_start":118,"line_end":118,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":4328,"byte_end":4331,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ Token stream is both the input and output of `#[proc_macro]`,","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":4332,"byte_end":4397,"line_start":120,"line_end":120,"column_start":1,"column_end":66}},{"value":"/ `#[proc_macro_attribute]` and `#[proc_macro_derive]` definitions.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":4398,"byte_end":4467,"line_start":121,"line_end":121,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":4644,"byte_end":4652,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"LexError","qualname":"::LexError","value":"LexError {  }","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362}],"decl_id":null,"docs":" Error returned from `TokenStream::from_str`.\n","sig":null,"attributes":[{"value":"/ Error returned from `TokenStream::from_str`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":4584,"byte_end":4632,"line_start":128,"line_end":128,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":5156,"byte_end":5159,"line_start":150,"line_end":150,"column_start":12,"column_end":15},"name":"new","qualname":"<TokenStream>::new","value":"fn () -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty `TokenStream` containing no token trees.\n","sig":null,"attributes":[{"value":"/ Returns an empty `TokenStream` containing no token trees.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":5083,"byte_end":5144,"line_start":149,"line_end":149,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":5295,"byte_end":5303,"line_start":155,"line_end":155,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<TokenStream>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `TokenStream` is empty.\n","sig":null,"attributes":[{"value":"/ Checks if this `TokenStream` is empty.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":5241,"byte_end":5283,"line_start":154,"line_end":154,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":10566,"byte_end":10570,"line_start":336,"line_end":336,"column_start":12,"column_end":16},"name":"Span","qualname":"::Span","value":"Span {  }","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":707}],"decl_id":null,"docs":" A region of source code, along with macro expansion information.\n","sig":null,"attributes":[{"value":"/ A region of source code, along with macro expansion information.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":10463,"byte_end":10531,"line_start":334,"line_end":334,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":11264,"byte_end":11273,"line_start":361,"line_end":361,"column_start":12,"column_end":21},"name":"call_site","qualname":"<Span>::call_site","value":"fn () -> Span","parent":null,"children":[],"decl_id":null,"docs":" The span of the invocation of the current procedural macro.","sig":null,"attributes":[{"value":"/ The span of the invocation of the current procedural macro.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":10948,"byte_end":11011,"line_start":356,"line_end":356,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":11016,"byte_end":11019,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ Identifiers created with this span will be resolved as if they were","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":11024,"byte_end":11095,"line_start":358,"line_end":358,"column_start":5,"column_end":76}},{"value":"/ written directly at the macro call location (call-site hygiene) and","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":11100,"byte_end":11171,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ other code at the macro call site will be able to refer to them as well.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":11176,"byte_end":11252,"line_start":360,"line_end":360,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":13080,"byte_end":13086,"line_start":409,"line_end":409,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Span>::unwrap","value":"fn (self) -> proc_macro::Span","parent":null,"children":[],"decl_id":null,"docs":" Convert `proc_macro2::Span` to `proc_macro::Span`.","sig":null,"attributes":[{"value":"/ Convert `proc_macro2::Span` to `proc_macro::Span`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":12596,"byte_end":12650,"line_start":398,"line_end":398,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":12655,"byte_end":12658,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ This method is available when building with a nightly compiler, or when","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":12663,"byte_end":12738,"line_start":400,"line_end":400,"column_start":5,"column_end":80}},{"value":"/ building with rustc 1.29+ *without* semver exempt features.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":12743,"byte_end":12806,"line_start":401,"line_end":401,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":12811,"byte_end":12814,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":12819,"byte_end":12831,"line_start":403,"line_end":403,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":12836,"byte_end":12839,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Panics if called from outside of a procedural macro. Unlike","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":12844,"byte_end":12907,"line_start":405,"line_end":405,"column_start":5,"column_end":68}},{"value":"/ `proc_macro2::Span`, the `proc_macro::Span` type can only exist within","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":12912,"byte_end":12986,"line_start":406,"line_end":406,"column_start":5,"column_end":79}},{"value":"/ the context of a procedural macro invocation.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":12991,"byte_end":13040,"line_start":407,"line_end":407,"column_start":5,"column_end":54}},{"value":"cfg(wrap_proc_macro)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":13045,"byte_end":13068,"line_start":408,"line_end":408,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":13257,"byte_end":13265,"line_start":416,"line_end":416,"column_start":12,"column_end":20},"name":"unstable","qualname":"<Span>::unstable","value":"fn (self) -> proc_macro::Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(wrap_proc_macro)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":13203,"byte_end":13226,"line_start":414,"line_end":414,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":14733,"byte_end":14737,"line_start":455,"line_end":455,"column_start":12,"column_end":16},"name":"join","qualname":"<Span>::join","value":"fn (&self, other: Span) -> Option<Span>","parent":null,"children":[],"decl_id":null,"docs":" Create a new span encompassing `self` and `other`.","sig":null,"attributes":[{"value":"/ Create a new span encompassing `self` and `other`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":14259,"byte_end":14313,"line_start":446,"line_end":446,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":14318,"byte_end":14321,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `self` and `other` are from different files.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":14326,"byte_end":14392,"line_start":448,"line_end":448,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":14397,"byte_end":14400,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ Warning: the underlying [`proc_macro::Span::join`] method is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":14405,"byte_end":14469,"line_start":450,"line_end":450,"column_start":5,"column_end":69}},{"value":"/ nightly-only. When called from within a procedural macro not using a","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":14474,"byte_end":14546,"line_start":451,"line_end":451,"column_start":5,"column_end":77}},{"value":"/ nightly compiler, this method will always return `None`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":14551,"byte_end":14611,"line_start":452,"line_end":452,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":14616,"byte_end":14619,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ [`proc_macro::Span::join`]: https://doc.rust-lang.org/proc_macro/struct.Span.html#method.join","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":14624,"byte_end":14721,"line_start":454,"line_end":454,"column_start":5,"column_end":102}}]},{"kind":"TupleVariant","id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":15442,"byte_end":15447,"line_start":479,"line_end":479,"column_start":5,"column_end":10},"name":"Group","qualname":"::TokenTree::Group","value":"TokenTree::Group(Group)","parent":{"krate":0,"index":711},"children":[],"decl_id":null,"docs":" A token stream surrounded by bracket delimiters.\n","sig":null,"attributes":[{"value":"/ A token stream surrounded by bracket delimiters.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":15385,"byte_end":15437,"line_start":478,"line_end":478,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":715},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":15483,"byte_end":15488,"line_start":481,"line_end":481,"column_start":5,"column_end":10},"name":"Ident","qualname":"::TokenTree::Ident","value":"TokenTree::Ident(Ident)","parent":{"krate":0,"index":711},"children":[],"decl_id":null,"docs":" An identifier.\n","sig":null,"attributes":[{"value":"/ An identifier.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":15460,"byte_end":15478,"line_start":480,"line_end":480,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":15563,"byte_end":15568,"line_start":483,"line_end":483,"column_start":5,"column_end":10},"name":"Punct","qualname":"::TokenTree::Punct","value":"TokenTree::Punct(Punct)","parent":{"krate":0,"index":711},"children":[],"decl_id":null,"docs":" A single punctuation character (`+`, `,`, `$`, etc.).\n","sig":null,"attributes":[{"value":"/ A single punctuation character (`+`, `,`, `$`, etc.).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":15501,"byte_end":15558,"line_start":482,"line_end":482,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":721},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":15659,"byte_end":15666,"line_start":485,"line_end":485,"column_start":5,"column_end":12},"name":"Literal","qualname":"::TokenTree::Literal","value":"TokenTree::Literal(Literal)","parent":{"krate":0,"index":711},"children":[],"decl_id":null,"docs":" A literal character (`'a'`), string (`\"hello\"`), number (`2.3`), etc.\n","sig":null,"attributes":[{"value":"/ A literal character (`'a'`), string (`\"hello\"`), number (`2.3`), etc.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":15581,"byte_end":15654,"line_start":484,"line_end":484,"column_start":5,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":15369,"byte_end":15378,"line_start":477,"line_end":477,"column_start":10,"column_end":19},"name":"TokenTree","qualname":"::TokenTree","value":"TokenTree::{Group, Ident, Punct, Literal}","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":721}],"decl_id":null,"docs":" A single token or a delimited sequence of token trees (e.g. `[1, (), ..]`).\n","sig":null,"attributes":[{"value":"/ A single token or a delimited sequence of token trees (e.g. `[1, (), ..]`).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":15263,"byte_end":15342,"line_start":475,"line_end":475,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":15833,"byte_end":15837,"line_start":491,"line_end":491,"column_start":12,"column_end":16},"name":"span","qualname":"<TokenTree>::span","value":"fn (&self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span of this tree, delegating to the `span` method of\n the contained token or a delimited stream.\n","sig":null,"attributes":[{"value":"/ Returns the span of this tree, delegating to the `span` method of","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":15701,"byte_end":15770,"line_start":489,"line_end":489,"column_start":5,"column_end":74}},{"value":"/ the contained token or a delimited stream.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":15775,"byte_end":15821,"line_start":490,"line_end":490,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":16351,"byte_end":16359,"line_start":505,"line_end":505,"column_start":12,"column_end":20},"name":"set_span","qualname":"<TokenTree>::set_span","value":"fn (&mut self, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Configures the span for *only this token*.","sig":null,"attributes":[{"value":"/ Configures the span for *only this token*.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":16079,"byte_end":16125,"line_start":500,"line_end":500,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":16130,"byte_end":16133,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ Note that if this token is a `Group` then this method will not configure","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":16138,"byte_end":16214,"line_start":502,"line_end":502,"column_start":5,"column_end":81}},{"value":"/ the span of each of the internal tokens, this will simply delegate to","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":16219,"byte_end":16292,"line_start":503,"line_end":503,"column_start":5,"column_end":78}},{"value":"/ the `set_span` method of each variant.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":16297,"byte_end":16339,"line_start":504,"line_end":504,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":726},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":18535,"byte_end":18540,"line_start":578,"line_end":578,"column_start":12,"column_end":17},"name":"Group","qualname":"::Group","value":"Group {  }","parent":null,"children":[{"krate":0,"index":727}],"decl_id":null,"docs":" A delimited token stream.","sig":null,"attributes":[{"value":"/ A delimited token stream.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":18382,"byte_end":18411,"line_start":573,"line_end":573,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":18412,"byte_end":18415,"line_start":574,"line_end":574,"column_start":1,"column_end":4}},{"value":"/ A `Group` internally contains a `TokenStream` which is surrounded by","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":18416,"byte_end":18488,"line_start":575,"line_end":575,"column_start":1,"column_end":73}},{"value":"/ `Delimiter`s.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":18489,"byte_end":18506,"line_start":576,"line_end":576,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":731},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":18715,"byte_end":18726,"line_start":586,"line_end":586,"column_start":5,"column_end":16},"name":"Parenthesis","qualname":"::Delimiter::Parenthesis","value":"Delimiter::Parenthesis","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" `( ... )`\n","sig":null,"attributes":[{"value":"/ `( ... )`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":18697,"byte_end":18710,"line_start":585,"line_end":585,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":733},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":18750,"byte_end":18755,"line_start":588,"line_end":588,"column_start":5,"column_end":10},"name":"Brace","qualname":"::Delimiter::Brace","value":"Delimiter::Brace","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" `{ ... }`\n","sig":null,"attributes":[{"value":"/ `{ ... }`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":18732,"byte_end":18745,"line_start":587,"line_end":587,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":735},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":18779,"byte_end":18786,"line_start":590,"line_end":590,"column_start":5,"column_end":12},"name":"Bracket","qualname":"::Delimiter::Bracket","value":"Delimiter::Bracket","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" `[ ... ]`\n","sig":null,"attributes":[{"value":"/ `[ ... ]`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":18761,"byte_end":18774,"line_start":589,"line_end":589,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":737},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":19146,"byte_end":19150,"line_start":598,"line_end":598,"column_start":5,"column_end":9},"name":"None","qualname":"::Delimiter::None","value":"Delimiter::None","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" `Ø ... Ø`","sig":null,"attributes":[{"value":"/ `Ø ... Ø`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":18792,"byte_end":18807,"line_start":591,"line_end":591,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":18812,"byte_end":18815,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ An implicit delimiter, that may, for example, appear around tokens","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":18820,"byte_end":18890,"line_start":593,"line_end":593,"column_start":5,"column_end":75}},{"value":"/ coming from a \"macro variable\" `$var`. It is important to preserve","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":18895,"byte_end":18965,"line_start":594,"line_end":594,"column_start":5,"column_end":75}},{"value":"/ operator priorities in cases like `$var * 3` where `$var` is `1 + 2`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":18970,"byte_end":19043,"line_start":595,"line_end":595,"column_start":5,"column_end":78}},{"value":"/ Implicit delimiters may not survive roundtrip of a token stream through","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":19048,"byte_end":19123,"line_start":596,"line_end":596,"column_start":5,"column_end":80}},{"value":"/ a string.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":19128,"byte_end":19141,"line_start":597,"line_end":597,"column_start":5,"column_end":18}}]},{"kind":"Enum","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":18681,"byte_end":18690,"line_start":584,"line_end":584,"column_start":10,"column_end":19},"name":"Delimiter","qualname":"::Delimiter","value":"Delimiter::{Parenthesis, Brace, Bracket, None}","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":733},{"krate":0,"index":735},{"krate":0,"index":737}],"decl_id":null,"docs":" Describes how a sequence of token trees is delimited.\n","sig":null,"attributes":[{"value":"/ Describes how a sequence of token trees is delimited.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":18569,"byte_end":18626,"line_start":582,"line_end":582,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":19609,"byte_end":19612,"line_start":617,"line_end":617,"column_start":12,"column_end":15},"name":"new","qualname":"<Group>::new","value":"fn (delimiter: Delimiter, stream: TokenStream) -> Group","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Group` with the given delimiter and token stream.","sig":null,"attributes":[{"value":"/ Creates a new `Group` with the given delimiter and token stream.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":19363,"byte_end":19431,"line_start":612,"line_end":612,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":19436,"byte_end":19439,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ This constructor will set the span for this group to","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":19444,"byte_end":19500,"line_start":614,"line_end":614,"column_start":5,"column_end":61}},{"value":"/ `Span::call_site()`. To change the span you can use the `set_span`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":19505,"byte_end":19575,"line_start":615,"line_end":615,"column_start":5,"column_end":75}},{"value":"/ method below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":19580,"byte_end":19597,"line_start":616,"line_end":616,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":19818,"byte_end":19827,"line_start":624,"line_end":624,"column_start":12,"column_end":21},"name":"delimiter","qualname":"<Group>::delimiter","value":"fn (&self) -> Delimiter","parent":null,"children":[],"decl_id":null,"docs":" Returns the delimiter of this `Group`\n","sig":null,"attributes":[{"value":"/ Returns the delimiter of this `Group`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":19765,"byte_end":19806,"line_start":623,"line_end":623,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":20086,"byte_end":20092,"line_start":632,"line_end":632,"column_start":12,"column_end":18},"name":"stream","qualname":"<Group>::stream","value":"fn (&self) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Returns the `TokenStream` of tokens that are delimited in this `Group`.","sig":null,"attributes":[{"value":"/ Returns the `TokenStream` of tokens that are delimited in this `Group`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":19892,"byte_end":19967,"line_start":628,"line_end":628,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":19972,"byte_end":19975,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ Note that the returned token stream does not include the delimiter","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":19980,"byte_end":20050,"line_start":630,"line_end":630,"column_start":5,"column_end":75}},{"value":"/ returned above.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":20055,"byte_end":20074,"line_start":631,"line_end":631,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":20385,"byte_end":20389,"line_start":643,"line_end":643,"column_start":12,"column_end":16},"name":"span","qualname":"<Group>::span","value":"fn (&self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span for the delimiters of this token stream, spanning the\n entire `Group`.","sig":null,"attributes":[{"value":"/ Returns the span for the delimiters of this token stream, spanning the","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":20175,"byte_end":20249,"line_start":636,"line_end":636,"column_start":5,"column_end":79}},{"value":"/ entire `Group`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":20254,"byte_end":20273,"line_start":637,"line_end":637,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":20278,"byte_end":20281,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":20286,"byte_end":20297,"line_start":639,"line_end":639,"column_start":5,"column_end":16}},{"value":"/ pub fn span(&self) -> Span {","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":20302,"byte_end":20334,"line_start":640,"line_end":640,"column_start":5,"column_end":37}},{"value":"/            ^^^^^^^","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":20339,"byte_end":20361,"line_start":641,"line_end":641,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":20366,"byte_end":20373,"line_start":642,"line_end":642,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":20641,"byte_end":20650,"line_start":653,"line_end":653,"column_start":12,"column_end":21},"name":"span_open","qualname":"<Group>::span_open","value":"fn (&self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span pointing to the opening delimiter of this group.","sig":null,"attributes":[{"value":"/ Returns the span pointing to the opening delimiter of this group.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":20456,"byte_end":20525,"line_start":647,"line_end":647,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":20530,"byte_end":20533,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":20538,"byte_end":20549,"line_start":649,"line_end":649,"column_start":5,"column_end":16}},{"value":"/ pub fn span_open(&self) -> Span {","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":20554,"byte_end":20591,"line_start":650,"line_end":650,"column_start":5,"column_end":42}},{"value":"/                 ^","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":20596,"byte_end":20617,"line_start":651,"line_end":651,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":20622,"byte_end":20629,"line_start":652,"line_end":652,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":20915,"byte_end":20925,"line_start":663,"line_end":663,"column_start":12,"column_end":22},"name":"span_close","qualname":"<Group>::span_close","value":"fn (&self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span pointing to the closing delimiter of this group.","sig":null,"attributes":[{"value":"/ Returns the span pointing to the closing delimiter of this group.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":20722,"byte_end":20791,"line_start":657,"line_end":657,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":20796,"byte_end":20799,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":20804,"byte_end":20815,"line_start":659,"line_end":659,"column_start":5,"column_end":16}},{"value":"/ pub fn span_close(&self) -> Span {","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":20820,"byte_end":20858,"line_start":660,"line_end":660,"column_start":5,"column_end":43}},{"value":"/                        ^","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":20863,"byte_end":20891,"line_start":661,"line_end":661,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":20896,"byte_end":20903,"line_start":662,"line_end":662,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":21311,"byte_end":21319,"line_start":673,"line_end":673,"column_start":12,"column_end":20},"name":"set_span","qualname":"<Group>::set_span","value":"fn (&mut self, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Configures the span for this `Group`'s delimiters, but not its internal\n tokens.","sig":null,"attributes":[{"value":"/ Configures the span for this `Group`'s delimiters, but not its internal","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":20998,"byte_end":21073,"line_start":667,"line_end":667,"column_start":5,"column_end":80}},{"value":"/ tokens.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":21078,"byte_end":21089,"line_start":668,"line_end":668,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":21094,"byte_end":21097,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ This method will **not** set the span of all the internal tokens spanned","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":21102,"byte_end":21178,"line_start":670,"line_end":670,"column_start":5,"column_end":81}},{"value":"/ by this group, but rather it will only set the span of the delimiter","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":21183,"byte_end":21255,"line_start":671,"line_end":671,"column_start":5,"column_end":77}},{"value":"/ tokens at the level of the `Group`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":21260,"byte_end":21299,"line_start":672,"line_end":672,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":750},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":22132,"byte_end":22137,"line_start":698,"line_end":698,"column_start":12,"column_end":17},"name":"Punct","qualname":"::Punct","value":"Punct {  }","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753}],"decl_id":null,"docs":" An `Punct` is an single punctuation character like `+`, `-` or `#`.","sig":null,"attributes":[{"value":"/ An `Punct` is an single punctuation character like `+`, `-` or `#`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":21897,"byte_end":21968,"line_start":693,"line_end":693,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":21969,"byte_end":21972,"line_start":694,"line_end":694,"column_start":1,"column_end":4}},{"value":"/ Multicharacter operators like `+=` are represented as two instances of","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":21973,"byte_end":22047,"line_start":695,"line_end":695,"column_start":1,"column_end":75}},{"value":"/ `Punct` with different forms of `Spacing` returned.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":22048,"byte_end":22103,"line_start":696,"line_end":696,"column_start":1,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":22434,"byte_end":22439,"line_start":709,"line_end":709,"column_start":5,"column_end":10},"name":"Alone","qualname":"::Spacing::Alone","value":"Spacing::Alone","parent":{"krate":0,"index":756},"children":[],"decl_id":null,"docs":" E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.\n","sig":null,"attributes":[{"value":"/ E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":22377,"byte_end":22429,"line_start":708,"line_end":708,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":759},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":22617,"byte_end":22622,"line_start":714,"line_end":714,"column_start":5,"column_end":10},"name":"Joint","qualname":"::Spacing::Joint","value":"Spacing::Joint","parent":{"krate":0,"index":756},"children":[],"decl_id":null,"docs":" E.g. `+` is `Joint` in `+=` or `'` is `Joint` in `'#`.","sig":null,"attributes":[{"value":"/ E.g. `+` is `Joint` in `+=` or `'` is `Joint` in `'#`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":22445,"byte_end":22503,"line_start":710,"line_end":710,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":22508,"byte_end":22511,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ Additionally, single quote `'` can join with identifiers to form","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":22516,"byte_end":22584,"line_start":712,"line_end":712,"column_start":5,"column_end":73}},{"value":"/ lifetimes `'ident`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":22589,"byte_end":22612,"line_start":713,"line_end":713,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":756},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":22363,"byte_end":22370,"line_start":707,"line_end":707,"column_start":10,"column_end":17},"name":"Spacing","qualname":"::Spacing","value":"Spacing::{Alone, Joint}","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":759}],"decl_id":null,"docs":" Whether an `Punct` is followed immediately by another `Punct` or followed by\n another token or whitespace.\n","sig":null,"attributes":[{"value":"/ Whether an `Punct` is followed immediately by another `Punct` or followed by","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":22195,"byte_end":22275,"line_start":704,"line_end":704,"column_start":1,"column_end":81}},{"value":"/ another token or whitespace.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":22276,"byte_end":22308,"line_start":705,"line_end":705,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":23022,"byte_end":23025,"line_start":725,"line_end":725,"column_start":12,"column_end":15},"name":"new","qualname":"<Punct>::new","value":"fn (op: char, spacing: Spacing) -> Punct","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Punct` from the given character and spacing.","sig":null,"attributes":[{"value":"/ Creates a new `Punct` from the given character and spacing.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":22644,"byte_end":22707,"line_start":718,"line_end":718,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":22712,"byte_end":22715,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ The `ch` argument must be a valid punctuation character permitted by the","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":22720,"byte_end":22796,"line_start":720,"line_end":720,"column_start":5,"column_end":81}},{"value":"/ language, otherwise the function will panic.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":22801,"byte_end":22849,"line_start":721,"line_end":721,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":22854,"byte_end":22857,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ The returned `Punct` will have the default span of `Span::call_site()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":22862,"byte_end":22936,"line_start":723,"line_end":723,"column_start":5,"column_end":79}},{"value":"/ which can be further configured with the `set_span` method below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":22941,"byte_end":23010,"line_start":724,"line_end":724,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":23250,"byte_end":23257,"line_start":734,"line_end":734,"column_start":12,"column_end":19},"name":"as_char","qualname":"<Punct>::as_char","value":"fn (&self) -> char","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of this punctuation character as `char`.\n","sig":null,"attributes":[{"value":"/ Returns the value of this punctuation character as `char`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":23176,"byte_end":23238,"line_start":733,"line_end":733,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":23661,"byte_end":23668,"line_start":743,"line_end":743,"column_start":12,"column_end":19},"name":"spacing","qualname":"<Punct>::spacing","value":"fn (&self) -> Spacing","parent":null,"children":[],"decl_id":null,"docs":" Returns the spacing of this punctuation character, indicating whether\n it's immediately followed by another `Punct` in the token stream, so\n they can potentially be combined into a multicharacter operator\n (`Joint`), or it's followed by some other token or whitespace (`Alone`)\n so the operator has certainly ended.\n","sig":null,"attributes":[{"value":"/ Returns the spacing of this punctuation character, indicating whether","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":23302,"byte_end":23375,"line_start":738,"line_end":738,"column_start":5,"column_end":78}},{"value":"/ it's immediately followed by another `Punct` in the token stream, so","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":23380,"byte_end":23452,"line_start":739,"line_end":739,"column_start":5,"column_end":77}},{"value":"/ they can potentially be combined into a multicharacter operator","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":23457,"byte_end":23524,"line_start":740,"line_end":740,"column_start":5,"column_end":72}},{"value":"/ (`Joint`), or it's followed by some other token or whitespace (`Alone`)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":23529,"byte_end":23604,"line_start":741,"line_end":741,"column_start":5,"column_end":80}},{"value":"/ so the operator has certainly ended.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":23609,"byte_end":23649,"line_start":742,"line_end":742,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":23785,"byte_end":23789,"line_start":748,"line_end":748,"column_start":12,"column_end":16},"name":"span","qualname":"<Punct>::span","value":"fn (&self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span for this punctuation character.\n","sig":null,"attributes":[{"value":"/ Returns the span for this punctuation character.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":23721,"byte_end":23773,"line_start":747,"line_end":747,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":23902,"byte_end":23910,"line_start":753,"line_end":753,"column_start":12,"column_end":20},"name":"set_span","qualname":"<Punct>::set_span","value":"fn (&mut self, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Configure the span for this punctuation character.\n","sig":null,"attributes":[{"value":"/ Configure the span for this punctuation character.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":23836,"byte_end":23890,"line_start":752,"line_end":752,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":26694,"byte_end":26699,"line_start":841,"line_end":841,"column_start":12,"column_end":17},"name":"Ident","qualname":"::Ident","value":"Ident {  }","parent":null,"children":[{"krate":0,"index":773},{"krate":0,"index":774}],"decl_id":null,"docs":" A word of Rust code, which may be a keyword or legal variable name.","sig":null,"attributes":[{"value":"/ A word of Rust code, which may be a keyword or legal variable name.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":24543,"byte_end":24614,"line_start":776,"line_end":776,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":24615,"byte_end":24618,"line_start":777,"line_end":777,"column_start":1,"column_end":4}},{"value":"/ An identifier consists of at least one Unicode code point, the first of","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":24619,"byte_end":24694,"line_start":778,"line_end":778,"column_start":1,"column_end":76}},{"value":"/ which has the XID_Start property and the rest of which have the XID_Continue","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":24695,"byte_end":24775,"line_start":779,"line_end":779,"column_start":1,"column_end":81}},{"value":"/ property.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":24776,"byte_end":24789,"line_start":780,"line_end":780,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":24790,"byte_end":24793,"line_start":781,"line_end":781,"column_start":1,"column_end":4}},{"value":"/ - The empty string is not an identifier. Use `Option<Ident>`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":24794,"byte_end":24859,"line_start":782,"line_end":782,"column_start":1,"column_end":66}},{"value":"/ - A lifetime is not an identifier. Use `syn::Lifetime` instead.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":24860,"byte_end":24927,"line_start":783,"line_end":783,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":24928,"byte_end":24931,"line_start":784,"line_end":784,"column_start":1,"column_end":4}},{"value":"/ An identifier constructed with `Ident::new` is permitted to be a Rust","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":24932,"byte_end":25005,"line_start":785,"line_end":785,"column_start":1,"column_end":74}},{"value":"/ keyword, though parsing one through its [`Parse`] implementation rejects","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25006,"byte_end":25082,"line_start":786,"line_end":786,"column_start":1,"column_end":77}},{"value":"/ Rust keywords. Use `input.call(Ident::parse_any)` when parsing to match the","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25083,"byte_end":25162,"line_start":787,"line_end":787,"column_start":1,"column_end":80}},{"value":"/ behaviour of `Ident::new`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25163,"byte_end":25193,"line_start":788,"line_end":788,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25194,"byte_end":25197,"line_start":789,"line_end":789,"column_start":1,"column_end":4}},{"value":"/ [`Parse`]: https://docs.rs/syn/1.0/syn/parse/trait.Parse.html","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25198,"byte_end":25263,"line_start":790,"line_end":790,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25264,"byte_end":25267,"line_start":791,"line_end":791,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25268,"byte_end":25282,"line_start":792,"line_end":792,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25283,"byte_end":25286,"line_start":793,"line_end":793,"column_start":1,"column_end":4}},{"value":"/ A new ident can be created from a string using the `Ident::new` function.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25287,"byte_end":25364,"line_start":794,"line_end":794,"column_start":1,"column_end":78}},{"value":"/ A span must be provided explicitly which governs the name resolution","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25365,"byte_end":25437,"line_start":795,"line_end":795,"column_start":1,"column_end":73}},{"value":"/ behavior of the resulting identifier.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25438,"byte_end":25479,"line_start":796,"line_end":796,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25480,"byte_end":25483,"line_start":797,"line_end":797,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25484,"byte_end":25491,"line_start":798,"line_end":798,"column_start":1,"column_end":8}},{"value":"/ use proc_macro2::{Ident, Span};","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25492,"byte_end":25527,"line_start":799,"line_end":799,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25528,"byte_end":25531,"line_start":800,"line_end":800,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25532,"byte_end":25547,"line_start":801,"line_end":801,"column_start":1,"column_end":16}},{"value":"/     let call_ident = Ident::new(\"calligraphy\", Span::call_site());","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25548,"byte_end":25618,"line_start":802,"line_end":802,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25619,"byte_end":25622,"line_start":803,"line_end":803,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", call_ident);","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25623,"byte_end":25658,"line_start":804,"line_end":804,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25659,"byte_end":25664,"line_start":805,"line_end":805,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25665,"byte_end":25672,"line_start":806,"line_end":806,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25673,"byte_end":25676,"line_start":807,"line_end":807,"column_start":1,"column_end":4}},{"value":"/ An ident can be interpolated into a token stream using the `quote!` macro.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25677,"byte_end":25755,"line_start":808,"line_end":808,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25756,"byte_end":25759,"line_start":809,"line_end":809,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25760,"byte_end":25767,"line_start":810,"line_end":810,"column_start":1,"column_end":8}},{"value":"/ use proc_macro2::{Ident, Span};","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25768,"byte_end":25803,"line_start":811,"line_end":811,"column_start":1,"column_end":36}},{"value":"/ use quote::quote;","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25804,"byte_end":25825,"line_start":812,"line_end":812,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25826,"byte_end":25829,"line_start":813,"line_end":813,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25830,"byte_end":25845,"line_start":814,"line_end":814,"column_start":1,"column_end":16}},{"value":"/     let ident = Ident::new(\"demo\", Span::call_site());","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25846,"byte_end":25904,"line_start":815,"line_end":815,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25905,"byte_end":25908,"line_start":816,"line_end":816,"column_start":1,"column_end":4}},{"value":"/     // Create a variable binding whose name is this ident.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25909,"byte_end":25971,"line_start":817,"line_end":817,"column_start":1,"column_end":63}},{"value":"/     let expanded = quote! { let #ident = 10; };","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":25972,"byte_end":26023,"line_start":818,"line_end":818,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":26024,"byte_end":26027,"line_start":819,"line_end":819,"column_start":1,"column_end":4}},{"value":"/     // Create a variable binding with a slightly different name.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":26028,"byte_end":26096,"line_start":820,"line_end":820,"column_start":1,"column_end":69}},{"value":"/     let temp_ident = Ident::new(&format!(\"new_{}\", ident), Span::call_site());","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":26097,"byte_end":26179,"line_start":821,"line_end":821,"column_start":1,"column_end":83}},{"value":"/     let expanded = quote! { let #temp_ident = 10; };","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":26180,"byte_end":26236,"line_start":822,"line_end":822,"column_start":1,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":26237,"byte_end":26242,"line_start":823,"line_end":823,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":26243,"byte_end":26250,"line_start":824,"line_end":824,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":26251,"byte_end":26254,"line_start":825,"line_end":825,"column_start":1,"column_end":4}},{"value":"/ A string representation of the ident is available through the `to_string()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":26255,"byte_end":26334,"line_start":826,"line_end":826,"column_start":1,"column_end":80}},{"value":"/ method.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":26335,"byte_end":26346,"line_start":827,"line_end":827,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":26347,"byte_end":26350,"line_start":828,"line_end":828,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":26351,"byte_end":26358,"line_start":829,"line_end":829,"column_start":1,"column_end":8}},{"value":"/ # use proc_macro2::{Ident, Span};","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":26359,"byte_end":26396,"line_start":830,"line_end":830,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":26397,"byte_end":26402,"line_start":831,"line_end":831,"column_start":1,"column_end":6}},{"value":"/ # let ident = Ident::new(\"another_identifier\", Span::call_site());","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":26403,"byte_end":26473,"line_start":832,"line_end":832,"column_start":1,"column_end":71}},{"value":"/ #","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":26474,"byte_end":26479,"line_start":833,"line_end":833,"column_start":1,"column_end":6}},{"value":"/ // Examine the ident as a string.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":26480,"byte_end":26517,"line_start":834,"line_end":834,"column_start":1,"column_end":38}},{"value":"/ let ident_string = ident.to_string();","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":26518,"byte_end":26559,"line_start":835,"line_end":835,"column_start":1,"column_end":42}},{"value":"/ if ident_string.len() > 60 {","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":26560,"byte_end":26592,"line_start":836,"line_end":836,"column_start":1,"column_end":33}},{"value":"/     println!(\"Very long identifier: {}\", ident_string)","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":26593,"byte_end":26651,"line_start":837,"line_end":837,"column_start":1,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":26652,"byte_end":26657,"line_start":838,"line_end":838,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":26658,"byte_end":26665,"line_start":839,"line_end":839,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":28524,"byte_end":28527,"line_start":885,"line_end":885,"column_start":12,"column_end":15},"name":"new","qualname":"<Ident>::new","value":"fn (string: &str, span: Span) -> Ident","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Ident` with the given `string` as well as the specified\n `span`.","sig":null,"attributes":[{"value":"/ Creates a new `Ident` with the given `string` as well as the specified","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":26923,"byte_end":26997,"line_start":854,"line_end":854,"column_start":5,"column_end":79}},{"value":"/ `span`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":27002,"byte_end":27013,"line_start":855,"line_end":855,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":27018,"byte_end":27021,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ The `string` argument must be a valid identifier permitted by the","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":27026,"byte_end":27095,"line_start":857,"line_end":857,"column_start":5,"column_end":74}},{"value":"/ language, otherwise the function will panic.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":27100,"byte_end":27148,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":27153,"byte_end":27156,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ Note that `span`, currently in rustc, configures the hygiene information","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":27161,"byte_end":27237,"line_start":860,"line_end":860,"column_start":5,"column_end":81}},{"value":"/ for this identifier.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":27242,"byte_end":27266,"line_start":861,"line_end":861,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":27271,"byte_end":27274,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ As of this time `Span::call_site()` explicitly opts-in to \"call-site\"","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":27279,"byte_end":27352,"line_start":863,"line_end":863,"column_start":5,"column_end":78}},{"value":"/ hygiene meaning that identifiers created with this span will be resolved","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":27357,"byte_end":27433,"line_start":864,"line_end":864,"column_start":5,"column_end":81}},{"value":"/ as if they were written directly at the location of the macro call, and","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":27438,"byte_end":27513,"line_start":865,"line_end":865,"column_start":5,"column_end":80}},{"value":"/ other code at the macro call site will be able to refer to them as well.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":27518,"byte_end":27594,"line_start":866,"line_end":866,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":27599,"byte_end":27602,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ Later spans like `Span::def_site()` will allow to opt-in to","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":27607,"byte_end":27670,"line_start":868,"line_end":868,"column_start":5,"column_end":68}},{"value":"/ \"definition-site\" hygiene meaning that identifiers created with this","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":27675,"byte_end":27747,"line_start":869,"line_end":869,"column_start":5,"column_end":77}},{"value":"/ span will be resolved at the location of the macro definition and other","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":27752,"byte_end":27827,"line_start":870,"line_end":870,"column_start":5,"column_end":80}},{"value":"/ code at the macro call site will not be able to refer to them.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":27832,"byte_end":27898,"line_start":871,"line_end":871,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":27903,"byte_end":27906,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ Due to the current importance of hygiene this constructor, unlike other","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":27911,"byte_end":27986,"line_start":873,"line_end":873,"column_start":5,"column_end":80}},{"value":"/ tokens, requires a `Span` to be specified at construction.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":27991,"byte_end":28053,"line_start":874,"line_end":874,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":28058,"byte_end":28061,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":28066,"byte_end":28078,"line_start":876,"line_end":876,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":28083,"byte_end":28086,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ Panics if the input string is neither a keyword nor a legal variable","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":28091,"byte_end":28163,"line_start":878,"line_end":878,"column_start":5,"column_end":77}},{"value":"/ name. If you are not sure whether the string contains an identifier and","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":28168,"byte_end":28243,"line_start":879,"line_end":879,"column_start":5,"column_end":80}},{"value":"/ need to handle an error case, use","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":28248,"byte_end":28285,"line_start":880,"line_end":880,"column_start":5,"column_end":42}},{"value":"/ <a href=\"https://docs.rs/syn/1.0/syn/fn.parse_str.html\"><code","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":28290,"byte_end":28355,"line_start":881,"line_end":881,"column_start":5,"column_end":70}},{"value":"/   style=\"padding-right:0;\">syn::parse_str</code></a><code","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":28360,"byte_end":28421,"line_start":882,"line_end":882,"column_start":5,"column_end":66}},{"value":"/   style=\"padding-left:0;\">::&lt;Ident&gt;</code>","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":28426,"byte_end":28478,"line_start":883,"line_end":883,"column_start":5,"column_end":57}},{"value":"/ rather than `Ident::new`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":28483,"byte_end":28512,"line_start":884,"line_end":884,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":29086,"byte_end":29090,"line_start":902,"line_end":902,"column_start":12,"column_end":16},"name":"span","qualname":"<Ident>::span","value":"fn (&self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span of this `Ident`.\n","sig":null,"attributes":[{"value":"/ Returns the span of this `Ident`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":29037,"byte_end":29074,"line_start":901,"line_end":901,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":29256,"byte_end":29264,"line_start":908,"line_end":908,"column_start":12,"column_end":20},"name":"set_span","qualname":"<Ident>::set_span","value":"fn (&mut self, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Configures the span of this `Ident`, possibly changing its hygiene\n context.\n","sig":null,"attributes":[{"value":"/ Configures the span of this `Ident`, possibly changing its hygiene","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":29157,"byte_end":29227,"line_start":906,"line_end":906,"column_start":5,"column_end":75}},{"value":"/ context.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":29232,"byte_end":29244,"line_start":907,"line_end":907,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30670,"byte_end":30677,"line_start":969,"line_end":969,"column_start":12,"column_end":19},"name":"Literal","qualname":"::Literal","value":"Literal {  }","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":779}],"decl_id":null,"docs":" A literal string (`\"hello\"`), byte string (`b\"hello\"`), character (`'a'`),\n byte character (`b'a'`), an integer or floating point number with or without\n a suffix (`1`, `1u8`, `2.3`, `2.3f32`).","sig":null,"attributes":[{"value":"/ A literal string (`\"hello\"`), byte string (`b\"hello\"`), character (`'a'`),","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30346,"byte_end":30424,"line_start":962,"line_end":962,"column_start":1,"column_end":79}},{"value":"/ byte character (`b'a'`), an integer or floating point number with or without","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30425,"byte_end":30505,"line_start":963,"line_end":963,"column_start":1,"column_end":81}},{"value":"/ a suffix (`1`, `1u8`, `2.3`, `2.3f32`).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30506,"byte_end":30549,"line_start":964,"line_end":964,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30550,"byte_end":30553,"line_start":965,"line_end":965,"column_start":1,"column_end":4}},{"value":"/ Boolean literals like `true` and `false` do not belong here, they are","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30554,"byte_end":30627,"line_start":966,"line_end":966,"column_start":1,"column_end":74}},{"value":"/ `Ident`s.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30628,"byte_end":30641,"line_start":967,"line_end":967,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32946,"byte_end":32957,"line_start":1030,"line_end":1030,"column_start":9,"column_end":20},"name":"u8_suffixed","qualname":"<Literal>::u8_suffixed","value":"fn (n: u8) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30840,"byte_end":30908,"line_start":976,"line_end":976,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30917,"byte_end":30920,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30929,"byte_end":30999,"line_start":978,"line_end":978,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31008,"byte_end":31078,"line_start":979,"line_end":979,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31087,"byte_end":31159,"line_start":980,"line_end":980,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31168,"byte_end":31237,"line_start":981,"line_end":981,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31246,"byte_end":31300,"line_start":982,"line_end":982,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31309,"byte_end":31312,"line_start":983,"line_end":983,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31321,"byte_end":31390,"line_start":984,"line_end":984,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31399,"byte_end":31470,"line_start":985,"line_end":985,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31479,"byte_end":31489,"line_start":986,"line_end":986,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32973,"byte_end":32985,"line_start":1031,"line_end":1031,"column_start":9,"column_end":21},"name":"u16_suffixed","qualname":"<Literal>::u16_suffixed","value":"fn (n: u16) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30840,"byte_end":30908,"line_start":976,"line_end":976,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30917,"byte_end":30920,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30929,"byte_end":30999,"line_start":978,"line_end":978,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31008,"byte_end":31078,"line_start":979,"line_end":979,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31087,"byte_end":31159,"line_start":980,"line_end":980,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31168,"byte_end":31237,"line_start":981,"line_end":981,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31246,"byte_end":31300,"line_start":982,"line_end":982,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31309,"byte_end":31312,"line_start":983,"line_end":983,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31321,"byte_end":31390,"line_start":984,"line_end":984,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31399,"byte_end":31470,"line_start":985,"line_end":985,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31479,"byte_end":31489,"line_start":986,"line_end":986,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33002,"byte_end":33014,"line_start":1032,"line_end":1032,"column_start":9,"column_end":21},"name":"u32_suffixed","qualname":"<Literal>::u32_suffixed","value":"fn (n: u32) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30840,"byte_end":30908,"line_start":976,"line_end":976,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30917,"byte_end":30920,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30929,"byte_end":30999,"line_start":978,"line_end":978,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31008,"byte_end":31078,"line_start":979,"line_end":979,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31087,"byte_end":31159,"line_start":980,"line_end":980,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31168,"byte_end":31237,"line_start":981,"line_end":981,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31246,"byte_end":31300,"line_start":982,"line_end":982,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31309,"byte_end":31312,"line_start":983,"line_end":983,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31321,"byte_end":31390,"line_start":984,"line_end":984,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31399,"byte_end":31470,"line_start":985,"line_end":985,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31479,"byte_end":31489,"line_start":986,"line_end":986,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33031,"byte_end":33043,"line_start":1033,"line_end":1033,"column_start":9,"column_end":21},"name":"u64_suffixed","qualname":"<Literal>::u64_suffixed","value":"fn (n: u64) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30840,"byte_end":30908,"line_start":976,"line_end":976,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30917,"byte_end":30920,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30929,"byte_end":30999,"line_start":978,"line_end":978,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31008,"byte_end":31078,"line_start":979,"line_end":979,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31087,"byte_end":31159,"line_start":980,"line_end":980,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31168,"byte_end":31237,"line_start":981,"line_end":981,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31246,"byte_end":31300,"line_start":982,"line_end":982,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31309,"byte_end":31312,"line_start":983,"line_end":983,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31321,"byte_end":31390,"line_start":984,"line_end":984,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31399,"byte_end":31470,"line_start":985,"line_end":985,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31479,"byte_end":31489,"line_start":986,"line_end":986,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33060,"byte_end":33073,"line_start":1034,"line_end":1034,"column_start":9,"column_end":22},"name":"u128_suffixed","qualname":"<Literal>::u128_suffixed","value":"fn (n: u128) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30840,"byte_end":30908,"line_start":976,"line_end":976,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30917,"byte_end":30920,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30929,"byte_end":30999,"line_start":978,"line_end":978,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31008,"byte_end":31078,"line_start":979,"line_end":979,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31087,"byte_end":31159,"line_start":980,"line_end":980,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31168,"byte_end":31237,"line_start":981,"line_end":981,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31246,"byte_end":31300,"line_start":982,"line_end":982,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31309,"byte_end":31312,"line_start":983,"line_end":983,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31321,"byte_end":31390,"line_start":984,"line_end":984,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31399,"byte_end":31470,"line_start":985,"line_end":985,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31479,"byte_end":31489,"line_start":986,"line_end":986,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33091,"byte_end":33105,"line_start":1035,"line_end":1035,"column_start":9,"column_end":23},"name":"usize_suffixed","qualname":"<Literal>::usize_suffixed","value":"fn (n: usize) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30840,"byte_end":30908,"line_start":976,"line_end":976,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30917,"byte_end":30920,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30929,"byte_end":30999,"line_start":978,"line_end":978,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31008,"byte_end":31078,"line_start":979,"line_end":979,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31087,"byte_end":31159,"line_start":980,"line_end":980,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31168,"byte_end":31237,"line_start":981,"line_end":981,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31246,"byte_end":31300,"line_start":982,"line_end":982,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31309,"byte_end":31312,"line_start":983,"line_end":983,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31321,"byte_end":31390,"line_start":984,"line_end":984,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31399,"byte_end":31470,"line_start":985,"line_end":985,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31479,"byte_end":31489,"line_start":986,"line_end":986,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33124,"byte_end":33135,"line_start":1036,"line_end":1036,"column_start":9,"column_end":20},"name":"i8_suffixed","qualname":"<Literal>::i8_suffixed","value":"fn (n: i8) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30840,"byte_end":30908,"line_start":976,"line_end":976,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30917,"byte_end":30920,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30929,"byte_end":30999,"line_start":978,"line_end":978,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31008,"byte_end":31078,"line_start":979,"line_end":979,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31087,"byte_end":31159,"line_start":980,"line_end":980,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31168,"byte_end":31237,"line_start":981,"line_end":981,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31246,"byte_end":31300,"line_start":982,"line_end":982,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31309,"byte_end":31312,"line_start":983,"line_end":983,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31321,"byte_end":31390,"line_start":984,"line_end":984,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31399,"byte_end":31470,"line_start":985,"line_end":985,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31479,"byte_end":31489,"line_start":986,"line_end":986,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33151,"byte_end":33163,"line_start":1037,"line_end":1037,"column_start":9,"column_end":21},"name":"i16_suffixed","qualname":"<Literal>::i16_suffixed","value":"fn (n: i16) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30840,"byte_end":30908,"line_start":976,"line_end":976,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30917,"byte_end":30920,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30929,"byte_end":30999,"line_start":978,"line_end":978,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31008,"byte_end":31078,"line_start":979,"line_end":979,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31087,"byte_end":31159,"line_start":980,"line_end":980,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31168,"byte_end":31237,"line_start":981,"line_end":981,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31246,"byte_end":31300,"line_start":982,"line_end":982,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31309,"byte_end":31312,"line_start":983,"line_end":983,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31321,"byte_end":31390,"line_start":984,"line_end":984,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31399,"byte_end":31470,"line_start":985,"line_end":985,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31479,"byte_end":31489,"line_start":986,"line_end":986,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33180,"byte_end":33192,"line_start":1038,"line_end":1038,"column_start":9,"column_end":21},"name":"i32_suffixed","qualname":"<Literal>::i32_suffixed","value":"fn (n: i32) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30840,"byte_end":30908,"line_start":976,"line_end":976,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30917,"byte_end":30920,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30929,"byte_end":30999,"line_start":978,"line_end":978,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31008,"byte_end":31078,"line_start":979,"line_end":979,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31087,"byte_end":31159,"line_start":980,"line_end":980,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31168,"byte_end":31237,"line_start":981,"line_end":981,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31246,"byte_end":31300,"line_start":982,"line_end":982,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31309,"byte_end":31312,"line_start":983,"line_end":983,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31321,"byte_end":31390,"line_start":984,"line_end":984,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31399,"byte_end":31470,"line_start":985,"line_end":985,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31479,"byte_end":31489,"line_start":986,"line_end":986,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33209,"byte_end":33221,"line_start":1039,"line_end":1039,"column_start":9,"column_end":21},"name":"i64_suffixed","qualname":"<Literal>::i64_suffixed","value":"fn (n: i64) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30840,"byte_end":30908,"line_start":976,"line_end":976,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30917,"byte_end":30920,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30929,"byte_end":30999,"line_start":978,"line_end":978,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31008,"byte_end":31078,"line_start":979,"line_end":979,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31087,"byte_end":31159,"line_start":980,"line_end":980,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31168,"byte_end":31237,"line_start":981,"line_end":981,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31246,"byte_end":31300,"line_start":982,"line_end":982,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31309,"byte_end":31312,"line_start":983,"line_end":983,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31321,"byte_end":31390,"line_start":984,"line_end":984,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31399,"byte_end":31470,"line_start":985,"line_end":985,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31479,"byte_end":31489,"line_start":986,"line_end":986,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33238,"byte_end":33251,"line_start":1040,"line_end":1040,"column_start":9,"column_end":22},"name":"i128_suffixed","qualname":"<Literal>::i128_suffixed","value":"fn (n: i128) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30840,"byte_end":30908,"line_start":976,"line_end":976,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30917,"byte_end":30920,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30929,"byte_end":30999,"line_start":978,"line_end":978,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31008,"byte_end":31078,"line_start":979,"line_end":979,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31087,"byte_end":31159,"line_start":980,"line_end":980,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31168,"byte_end":31237,"line_start":981,"line_end":981,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31246,"byte_end":31300,"line_start":982,"line_end":982,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31309,"byte_end":31312,"line_start":983,"line_end":983,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31321,"byte_end":31390,"line_start":984,"line_end":984,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31399,"byte_end":31470,"line_start":985,"line_end":985,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31479,"byte_end":31489,"line_start":986,"line_end":986,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33269,"byte_end":33283,"line_start":1041,"line_end":1041,"column_start":9,"column_end":23},"name":"isize_suffixed","qualname":"<Literal>::isize_suffixed","value":"fn (n: isize) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30840,"byte_end":30908,"line_start":976,"line_end":976,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30917,"byte_end":30920,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30929,"byte_end":30999,"line_start":978,"line_end":978,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31008,"byte_end":31078,"line_start":979,"line_end":979,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31087,"byte_end":31159,"line_start":980,"line_end":980,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31168,"byte_end":31237,"line_start":981,"line_end":981,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31246,"byte_end":31300,"line_start":982,"line_end":982,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31309,"byte_end":31312,"line_start":983,"line_end":983,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31321,"byte_end":31390,"line_start":984,"line_end":984,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31399,"byte_end":31470,"line_start":985,"line_end":985,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31479,"byte_end":31489,"line_start":986,"line_end":986,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33340,"byte_end":33353,"line_start":1045,"line_end":1045,"column_start":9,"column_end":22},"name":"u8_unsuffixed","qualname":"<Literal>::u8_unsuffixed","value":"fn (n: u8) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31697,"byte_end":31767,"line_start":995,"line_end":995,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31776,"byte_end":31779,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31788,"byte_end":31855,"line_start":997,"line_end":997,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31864,"byte_end":31928,"line_start":998,"line_end":998,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31937,"byte_end":31995,"line_start":999,"line_end":999,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32004,"byte_end":32053,"line_start":1000,"line_end":1000,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32062,"byte_end":32134,"line_start":1001,"line_end":1001,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32143,"byte_end":32213,"line_start":1002,"line_end":1002,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32222,"byte_end":32279,"line_start":1003,"line_end":1003,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32288,"byte_end":32291,"line_start":1004,"line_end":1004,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32300,"byte_end":32369,"line_start":1005,"line_end":1005,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32378,"byte_end":32449,"line_start":1006,"line_end":1006,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32458,"byte_end":32468,"line_start":1007,"line_end":1007,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33369,"byte_end":33383,"line_start":1046,"line_end":1046,"column_start":9,"column_end":23},"name":"u16_unsuffixed","qualname":"<Literal>::u16_unsuffixed","value":"fn (n: u16) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31697,"byte_end":31767,"line_start":995,"line_end":995,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31776,"byte_end":31779,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31788,"byte_end":31855,"line_start":997,"line_end":997,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31864,"byte_end":31928,"line_start":998,"line_end":998,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31937,"byte_end":31995,"line_start":999,"line_end":999,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32004,"byte_end":32053,"line_start":1000,"line_end":1000,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32062,"byte_end":32134,"line_start":1001,"line_end":1001,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32143,"byte_end":32213,"line_start":1002,"line_end":1002,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32222,"byte_end":32279,"line_start":1003,"line_end":1003,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32288,"byte_end":32291,"line_start":1004,"line_end":1004,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32300,"byte_end":32369,"line_start":1005,"line_end":1005,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32378,"byte_end":32449,"line_start":1006,"line_end":1006,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32458,"byte_end":32468,"line_start":1007,"line_end":1007,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33400,"byte_end":33414,"line_start":1047,"line_end":1047,"column_start":9,"column_end":23},"name":"u32_unsuffixed","qualname":"<Literal>::u32_unsuffixed","value":"fn (n: u32) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31697,"byte_end":31767,"line_start":995,"line_end":995,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31776,"byte_end":31779,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31788,"byte_end":31855,"line_start":997,"line_end":997,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31864,"byte_end":31928,"line_start":998,"line_end":998,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31937,"byte_end":31995,"line_start":999,"line_end":999,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32004,"byte_end":32053,"line_start":1000,"line_end":1000,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32062,"byte_end":32134,"line_start":1001,"line_end":1001,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32143,"byte_end":32213,"line_start":1002,"line_end":1002,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32222,"byte_end":32279,"line_start":1003,"line_end":1003,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32288,"byte_end":32291,"line_start":1004,"line_end":1004,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32300,"byte_end":32369,"line_start":1005,"line_end":1005,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32378,"byte_end":32449,"line_start":1006,"line_end":1006,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32458,"byte_end":32468,"line_start":1007,"line_end":1007,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33431,"byte_end":33445,"line_start":1048,"line_end":1048,"column_start":9,"column_end":23},"name":"u64_unsuffixed","qualname":"<Literal>::u64_unsuffixed","value":"fn (n: u64) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31697,"byte_end":31767,"line_start":995,"line_end":995,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31776,"byte_end":31779,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31788,"byte_end":31855,"line_start":997,"line_end":997,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31864,"byte_end":31928,"line_start":998,"line_end":998,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31937,"byte_end":31995,"line_start":999,"line_end":999,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32004,"byte_end":32053,"line_start":1000,"line_end":1000,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32062,"byte_end":32134,"line_start":1001,"line_end":1001,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32143,"byte_end":32213,"line_start":1002,"line_end":1002,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32222,"byte_end":32279,"line_start":1003,"line_end":1003,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32288,"byte_end":32291,"line_start":1004,"line_end":1004,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32300,"byte_end":32369,"line_start":1005,"line_end":1005,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32378,"byte_end":32449,"line_start":1006,"line_end":1006,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32458,"byte_end":32468,"line_start":1007,"line_end":1007,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33462,"byte_end":33477,"line_start":1049,"line_end":1049,"column_start":9,"column_end":24},"name":"u128_unsuffixed","qualname":"<Literal>::u128_unsuffixed","value":"fn (n: u128) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31697,"byte_end":31767,"line_start":995,"line_end":995,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31776,"byte_end":31779,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31788,"byte_end":31855,"line_start":997,"line_end":997,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31864,"byte_end":31928,"line_start":998,"line_end":998,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31937,"byte_end":31995,"line_start":999,"line_end":999,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32004,"byte_end":32053,"line_start":1000,"line_end":1000,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32062,"byte_end":32134,"line_start":1001,"line_end":1001,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32143,"byte_end":32213,"line_start":1002,"line_end":1002,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32222,"byte_end":32279,"line_start":1003,"line_end":1003,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32288,"byte_end":32291,"line_start":1004,"line_end":1004,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32300,"byte_end":32369,"line_start":1005,"line_end":1005,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32378,"byte_end":32449,"line_start":1006,"line_end":1006,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32458,"byte_end":32468,"line_start":1007,"line_end":1007,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33495,"byte_end":33511,"line_start":1050,"line_end":1050,"column_start":9,"column_end":25},"name":"usize_unsuffixed","qualname":"<Literal>::usize_unsuffixed","value":"fn (n: usize) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31697,"byte_end":31767,"line_start":995,"line_end":995,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31776,"byte_end":31779,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31788,"byte_end":31855,"line_start":997,"line_end":997,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31864,"byte_end":31928,"line_start":998,"line_end":998,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31937,"byte_end":31995,"line_start":999,"line_end":999,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32004,"byte_end":32053,"line_start":1000,"line_end":1000,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32062,"byte_end":32134,"line_start":1001,"line_end":1001,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32143,"byte_end":32213,"line_start":1002,"line_end":1002,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32222,"byte_end":32279,"line_start":1003,"line_end":1003,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32288,"byte_end":32291,"line_start":1004,"line_end":1004,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32300,"byte_end":32369,"line_start":1005,"line_end":1005,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32378,"byte_end":32449,"line_start":1006,"line_end":1006,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32458,"byte_end":32468,"line_start":1007,"line_end":1007,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33530,"byte_end":33543,"line_start":1051,"line_end":1051,"column_start":9,"column_end":22},"name":"i8_unsuffixed","qualname":"<Literal>::i8_unsuffixed","value":"fn (n: i8) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31697,"byte_end":31767,"line_start":995,"line_end":995,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31776,"byte_end":31779,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31788,"byte_end":31855,"line_start":997,"line_end":997,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31864,"byte_end":31928,"line_start":998,"line_end":998,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31937,"byte_end":31995,"line_start":999,"line_end":999,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32004,"byte_end":32053,"line_start":1000,"line_end":1000,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32062,"byte_end":32134,"line_start":1001,"line_end":1001,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32143,"byte_end":32213,"line_start":1002,"line_end":1002,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32222,"byte_end":32279,"line_start":1003,"line_end":1003,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32288,"byte_end":32291,"line_start":1004,"line_end":1004,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32300,"byte_end":32369,"line_start":1005,"line_end":1005,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32378,"byte_end":32449,"line_start":1006,"line_end":1006,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32458,"byte_end":32468,"line_start":1007,"line_end":1007,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33559,"byte_end":33573,"line_start":1052,"line_end":1052,"column_start":9,"column_end":23},"name":"i16_unsuffixed","qualname":"<Literal>::i16_unsuffixed","value":"fn (n: i16) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31697,"byte_end":31767,"line_start":995,"line_end":995,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31776,"byte_end":31779,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31788,"byte_end":31855,"line_start":997,"line_end":997,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31864,"byte_end":31928,"line_start":998,"line_end":998,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31937,"byte_end":31995,"line_start":999,"line_end":999,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32004,"byte_end":32053,"line_start":1000,"line_end":1000,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32062,"byte_end":32134,"line_start":1001,"line_end":1001,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32143,"byte_end":32213,"line_start":1002,"line_end":1002,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32222,"byte_end":32279,"line_start":1003,"line_end":1003,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32288,"byte_end":32291,"line_start":1004,"line_end":1004,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32300,"byte_end":32369,"line_start":1005,"line_end":1005,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32378,"byte_end":32449,"line_start":1006,"line_end":1006,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32458,"byte_end":32468,"line_start":1007,"line_end":1007,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33590,"byte_end":33604,"line_start":1053,"line_end":1053,"column_start":9,"column_end":23},"name":"i32_unsuffixed","qualname":"<Literal>::i32_unsuffixed","value":"fn (n: i32) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31697,"byte_end":31767,"line_start":995,"line_end":995,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31776,"byte_end":31779,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31788,"byte_end":31855,"line_start":997,"line_end":997,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31864,"byte_end":31928,"line_start":998,"line_end":998,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31937,"byte_end":31995,"line_start":999,"line_end":999,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32004,"byte_end":32053,"line_start":1000,"line_end":1000,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32062,"byte_end":32134,"line_start":1001,"line_end":1001,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32143,"byte_end":32213,"line_start":1002,"line_end":1002,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32222,"byte_end":32279,"line_start":1003,"line_end":1003,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32288,"byte_end":32291,"line_start":1004,"line_end":1004,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32300,"byte_end":32369,"line_start":1005,"line_end":1005,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32378,"byte_end":32449,"line_start":1006,"line_end":1006,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32458,"byte_end":32468,"line_start":1007,"line_end":1007,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33621,"byte_end":33635,"line_start":1054,"line_end":1054,"column_start":9,"column_end":23},"name":"i64_unsuffixed","qualname":"<Literal>::i64_unsuffixed","value":"fn (n: i64) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31697,"byte_end":31767,"line_start":995,"line_end":995,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31776,"byte_end":31779,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31788,"byte_end":31855,"line_start":997,"line_end":997,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31864,"byte_end":31928,"line_start":998,"line_end":998,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31937,"byte_end":31995,"line_start":999,"line_end":999,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32004,"byte_end":32053,"line_start":1000,"line_end":1000,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32062,"byte_end":32134,"line_start":1001,"line_end":1001,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32143,"byte_end":32213,"line_start":1002,"line_end":1002,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32222,"byte_end":32279,"line_start":1003,"line_end":1003,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32288,"byte_end":32291,"line_start":1004,"line_end":1004,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32300,"byte_end":32369,"line_start":1005,"line_end":1005,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32378,"byte_end":32449,"line_start":1006,"line_end":1006,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32458,"byte_end":32468,"line_start":1007,"line_end":1007,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33652,"byte_end":33667,"line_start":1055,"line_end":1055,"column_start":9,"column_end":24},"name":"i128_unsuffixed","qualname":"<Literal>::i128_unsuffixed","value":"fn (n: i128) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31697,"byte_end":31767,"line_start":995,"line_end":995,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31776,"byte_end":31779,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31788,"byte_end":31855,"line_start":997,"line_end":997,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31864,"byte_end":31928,"line_start":998,"line_end":998,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31937,"byte_end":31995,"line_start":999,"line_end":999,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32004,"byte_end":32053,"line_start":1000,"line_end":1000,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32062,"byte_end":32134,"line_start":1001,"line_end":1001,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32143,"byte_end":32213,"line_start":1002,"line_end":1002,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32222,"byte_end":32279,"line_start":1003,"line_end":1003,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32288,"byte_end":32291,"line_start":1004,"line_end":1004,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32300,"byte_end":32369,"line_start":1005,"line_end":1005,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32378,"byte_end":32449,"line_start":1006,"line_end":1006,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32458,"byte_end":32468,"line_start":1007,"line_end":1007,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33685,"byte_end":33701,"line_start":1056,"line_end":1056,"column_start":9,"column_end":25},"name":"isize_unsuffixed","qualname":"<Literal>::isize_unsuffixed","value":"fn (n: isize) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31697,"byte_end":31767,"line_start":995,"line_end":995,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31776,"byte_end":31779,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31788,"byte_end":31855,"line_start":997,"line_end":997,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31864,"byte_end":31928,"line_start":998,"line_end":998,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":31937,"byte_end":31995,"line_start":999,"line_end":999,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32004,"byte_end":32053,"line_start":1000,"line_end":1000,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32062,"byte_end":32134,"line_start":1001,"line_end":1001,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32143,"byte_end":32213,"line_start":1002,"line_end":1002,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32222,"byte_end":32279,"line_start":1003,"line_end":1003,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32288,"byte_end":32291,"line_start":1004,"line_end":1004,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32300,"byte_end":32369,"line_start":1005,"line_end":1005,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32378,"byte_end":32449,"line_start":1006,"line_end":1006,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32458,"byte_end":32468,"line_start":1007,"line_end":1007,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":34382,"byte_end":34396,"line_start":1072,"line_end":1072,"column_start":12,"column_end":26},"name":"f64_unsuffixed","qualname":"<Literal>::f64_unsuffixed","value":"fn (f: f64) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed floating-point literal.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed floating-point literal.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33723,"byte_end":33775,"line_start":1059,"line_end":1059,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33780,"byte_end":33783,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ This constructor is similar to those like `Literal::i8_unsuffixed` where","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33788,"byte_end":33864,"line_start":1061,"line_end":1061,"column_start":5,"column_end":81}},{"value":"/ the float's value is emitted directly into the token but no suffix is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33869,"byte_end":33942,"line_start":1062,"line_end":1062,"column_start":5,"column_end":78}},{"value":"/ used, so it may be inferred to be a `f64` later in the compiler.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":33947,"byte_end":34015,"line_start":1063,"line_end":1063,"column_start":5,"column_end":73}},{"value":"/ Literals created from negative numbers may not survive rountrips through","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":34020,"byte_end":34096,"line_start":1064,"line_end":1064,"column_start":5,"column_end":81}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":34101,"byte_end":34172,"line_start":1065,"line_end":1065,"column_start":5,"column_end":76}},{"value":"/ positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":34177,"byte_end":34199,"line_start":1066,"line_end":1066,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":34204,"byte_end":34207,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":34212,"byte_end":34224,"line_start":1068,"line_end":1068,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":34229,"byte_end":34232,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ This function requires that the specified float is finite, for example","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":34237,"byte_end":34311,"line_start":1070,"line_end":1070,"column_start":5,"column_end":79}},{"value":"/ if it is infinity or NaN this function will panic.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":34316,"byte_end":34370,"line_start":1071,"line_end":1071,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":35184,"byte_end":35196,"line_start":1090,"line_end":1090,"column_start":12,"column_end":24},"name":"f64_suffixed","qualname":"<Literal>::f64_suffixed","value":"fn (f: f64) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed floating-point literal.","sig":null,"attributes":[{"value":"/ Creates a new suffixed floating-point literal.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":34516,"byte_end":34566,"line_start":1077,"line_end":1077,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":34571,"byte_end":34574,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ This constructor will create a literal like `1.0f64` where the value","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":34579,"byte_end":34651,"line_start":1079,"line_end":1079,"column_start":5,"column_end":77}},{"value":"/ specified is the preceding part of the token and `f64` is the suffix of","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":34656,"byte_end":34731,"line_start":1080,"line_end":1080,"column_start":5,"column_end":80}},{"value":"/ the token. This token will always be inferred to be an `f64` in the","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":34736,"byte_end":34807,"line_start":1081,"line_end":1081,"column_start":5,"column_end":76}},{"value":"/ compiler. Literals created from negative numbers may not survive","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":34812,"byte_end":34880,"line_start":1082,"line_end":1082,"column_start":5,"column_end":73}},{"value":"/ rountrips through `TokenStream` or strings and may be broken into two","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":34885,"byte_end":34958,"line_start":1083,"line_end":1083,"column_start":5,"column_end":78}},{"value":"/ tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":34963,"byte_end":35001,"line_start":1084,"line_end":1084,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":35006,"byte_end":35009,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":35014,"byte_end":35026,"line_start":1086,"line_end":1086,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":35031,"byte_end":35034,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ This function requires that the specified float is finite, for example","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":35039,"byte_end":35113,"line_start":1088,"line_end":1088,"column_start":5,"column_end":79}},{"value":"/ if it is infinity or NaN this function will panic.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":35118,"byte_end":35172,"line_start":1089,"line_end":1089,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":35973,"byte_end":35987,"line_start":1108,"line_end":1108,"column_start":12,"column_end":26},"name":"f32_unsuffixed","qualname":"<Literal>::f32_unsuffixed","value":"fn (f: f32) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed floating-point literal.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed floating-point literal.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":35314,"byte_end":35366,"line_start":1095,"line_end":1095,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":35371,"byte_end":35374,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ This constructor is similar to those like `Literal::i8_unsuffixed` where","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":35379,"byte_end":35455,"line_start":1097,"line_end":1097,"column_start":5,"column_end":81}},{"value":"/ the float's value is emitted directly into the token but no suffix is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":35460,"byte_end":35533,"line_start":1098,"line_end":1098,"column_start":5,"column_end":78}},{"value":"/ used, so it may be inferred to be a `f64` later in the compiler.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":35538,"byte_end":35606,"line_start":1099,"line_end":1099,"column_start":5,"column_end":73}},{"value":"/ Literals created from negative numbers may not survive rountrips through","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":35611,"byte_end":35687,"line_start":1100,"line_end":1100,"column_start":5,"column_end":81}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":35692,"byte_end":35763,"line_start":1101,"line_end":1101,"column_start":5,"column_end":76}},{"value":"/ positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":35768,"byte_end":35790,"line_start":1102,"line_end":1102,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":35795,"byte_end":35798,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":35803,"byte_end":35815,"line_start":1104,"line_end":1104,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":35820,"byte_end":35823,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ This function requires that the specified float is finite, for example","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":35828,"byte_end":35902,"line_start":1106,"line_end":1106,"column_start":5,"column_end":79}},{"value":"/ if it is infinity or NaN this function will panic.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":35907,"byte_end":35961,"line_start":1107,"line_end":1107,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":36775,"byte_end":36787,"line_start":1126,"line_end":1126,"column_start":12,"column_end":24},"name":"f32_suffixed","qualname":"<Literal>::f32_suffixed","value":"fn (f: f32) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed floating-point literal.","sig":null,"attributes":[{"value":"/ Creates a new suffixed floating-point literal.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":36107,"byte_end":36157,"line_start":1113,"line_end":1113,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":36162,"byte_end":36165,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ This constructor will create a literal like `1.0f32` where the value","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":36170,"byte_end":36242,"line_start":1115,"line_end":1115,"column_start":5,"column_end":77}},{"value":"/ specified is the preceding part of the token and `f32` is the suffix of","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":36247,"byte_end":36322,"line_start":1116,"line_end":1116,"column_start":5,"column_end":80}},{"value":"/ the token. This token will always be inferred to be an `f32` in the","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":36327,"byte_end":36398,"line_start":1117,"line_end":1117,"column_start":5,"column_end":76}},{"value":"/ compiler. Literals created from negative numbers may not survive","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":36403,"byte_end":36471,"line_start":1118,"line_end":1118,"column_start":5,"column_end":73}},{"value":"/ rountrips through `TokenStream` or strings and may be broken into two","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":36476,"byte_end":36549,"line_start":1119,"line_end":1119,"column_start":5,"column_end":78}},{"value":"/ tokens (`-` and positive literal).","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":36554,"byte_end":36592,"line_start":1120,"line_end":1120,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":36597,"byte_end":36600,"line_start":1121,"line_end":1121,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":36605,"byte_end":36617,"line_start":1122,"line_end":1122,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":36622,"byte_end":36625,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ This function requires that the specified float is finite, for example","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":36630,"byte_end":36704,"line_start":1124,"line_end":1124,"column_start":5,"column_end":79}},{"value":"/ if it is infinity or NaN this function will panic.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":36709,"byte_end":36763,"line_start":1125,"line_end":1125,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":36936,"byte_end":36942,"line_start":1132,"line_end":1132,"column_start":12,"column_end":18},"name":"string","qualname":"<Literal>::string","value":"fn (string: &str) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" String literal.\n","sig":null,"attributes":[{"value":"/ String literal.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":36905,"byte_end":36924,"line_start":1131,"line_end":1131,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":37067,"byte_end":37076,"line_start":1137,"line_end":1137,"column_start":12,"column_end":21},"name":"character","qualname":"<Literal>::character","value":"fn (ch: char) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Character literal.\n","sig":null,"attributes":[{"value":"/ Character literal.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":37033,"byte_end":37055,"line_start":1136,"line_end":1136,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":37198,"byte_end":37209,"line_start":1142,"line_end":1142,"column_start":12,"column_end":23},"name":"byte_string","qualname":"<Literal>::byte_string","value":"fn (s: &[u8]) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Byte string literal.\n","sig":null,"attributes":[{"value":"/ Byte string literal.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":37162,"byte_end":37186,"line_start":1141,"line_end":1141,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":37355,"byte_end":37359,"line_start":1147,"line_end":1147,"column_start":12,"column_end":16},"name":"span","qualname":"<Literal>::span","value":"fn (&self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span encompassing this literal.\n","sig":null,"attributes":[{"value":"/ Returns the span encompassing this literal.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":37296,"byte_end":37343,"line_start":1146,"line_end":1146,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":37490,"byte_end":37498,"line_start":1152,"line_end":1152,"column_start":12,"column_end":20},"name":"set_span","qualname":"<Literal>::set_span","value":"fn (&mut self, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Configures the span associated for this literal.\n","sig":null,"attributes":[{"value":"/ Configures the span associated for this literal.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":37426,"byte_end":37478,"line_start":1151,"line_end":1151,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":38133,"byte_end":38140,"line_start":1165,"line_end":1165,"column_start":12,"column_end":19},"name":"subspan","qualname":"<Literal>::subspan","value":"fn <R> (&self, range: R) -> Option<Span>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Span` that is a subset of `self.span()` containing only\n the source bytes in range `range`. Returns `None` if the would-be\n trimmed span is outside the bounds of `self`.","sig":null,"attributes":[{"value":"/ Returns a `Span` that is a subset of `self.span()` containing only","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":37576,"byte_end":37646,"line_start":1156,"line_end":1156,"column_start":5,"column_end":75}},{"value":"/ the source bytes in range `range`. Returns `None` if the would-be","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":37651,"byte_end":37720,"line_start":1157,"line_end":1157,"column_start":5,"column_end":74}},{"value":"/ trimmed span is outside the bounds of `self`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":37725,"byte_end":37774,"line_start":1158,"line_end":1158,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":37779,"byte_end":37782,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ Warning: the underlying [`proc_macro::Literal::subspan`] method is","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":37787,"byte_end":37857,"line_start":1160,"line_end":1160,"column_start":5,"column_end":75}},{"value":"/ nightly-only. When called from within a procedural macro not using a","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":37862,"byte_end":37934,"line_start":1161,"line_end":1161,"column_start":5,"column_end":77}},{"value":"/ nightly compiler, this method will always return `None`.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":37939,"byte_end":37999,"line_start":1162,"line_end":1162,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":38004,"byte_end":38007,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ [`proc_macro::Literal::subspan`]: https://doc.rust-lang.org/proc_macro/struct.Literal.html#method.subspan","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":38012,"byte_end":38121,"line_start":1164,"line_end":1164,"column_start":5,"column_end":114}}]},{"kind":"Mod","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":38597,"byte_end":38609,"line_start":1183,"line_end":1183,"column_start":9,"column_end":21},"name":"token_stream","qualname":"::token_stream","value":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":504}],"decl_id":null,"docs":" Public implementation details for the `TokenStream` type, such as iterators.\n","sig":null,"attributes":[{"value":"/ Public implementation details for the `TokenStream` type, such as iterators.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":38508,"byte_end":38588,"line_start":1182,"line_end":1182,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":38980,"byte_end":38988,"line_start":1196,"line_end":1196,"column_start":16,"column_end":24},"name":"IntoIter","qualname":"::token_stream::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":808}],"decl_id":null,"docs":" An iterator over `TokenStream`'s `TokenTree`s.","sig":null,"attributes":[{"value":"/ An iterator over `TokenStream`'s `TokenTree`s.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":38743,"byte_end":38793,"line_start":1191,"line_end":1191,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":38798,"byte_end":38801,"line_start":1192,"line_end":1192,"column_start":5,"column_end":8}},{"value":"/ The iteration is \"shallow\", e.g. the iterator doesn't recurse into","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":38806,"byte_end":38876,"line_start":1193,"line_end":1193,"column_start":5,"column_end":75}},{"value":"/ delimited groups, and returns whole groups as token trees.","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":38881,"byte_end":38943,"line_start":1194,"line_end":1194,"column_start":5,"column_end":67}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\parse.rs","byte_start":40065,"byte_end":40071,"line_start":15,"line_end":15,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":65276,"byte_end":65287,"line_start":40,"line_end":40,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":65612,"byte_end":65623,"line_start":55,"line_end":55,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":66620,"byte_end":66631,"line_start":92,"line_end":92,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":67007,"byte_end":67018,"line_start":108,"line_end":108,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":68387,"byte_end":68398,"line_start":146,"line_end":146,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":68623,"byte_end":68634,"line_start":154,"line_end":154,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":68887,"byte_end":68898,"line_start":164,"line_end":164,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":69114,"byte_end":69125,"line_start":173,"line_end":173,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":69264,"byte_end":69275,"line_start":179,"line_end":179,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":69549,"byte_end":69560,"line_start":191,"line_end":191,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":69843,"byte_end":69854,"line_start":203,"line_end":203,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":70005,"byte_end":70016,"line_start":209,"line_end":209,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":70272,"byte_end":70283,"line_start":218,"line_end":218,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":70532,"byte_end":70542,"line_start":232,"line_end":232,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":70803,"byte_end":70813,"line_start":244,"line_end":244,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":74167,"byte_end":74171,"line_start":378,"line_end":378,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":76928,"byte_end":76932,"line_start":489,"line_end":489,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":77470,"byte_end":77475,"line_start":512,"line_end":512,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":78122,"byte_end":78127,"line_start":546,"line_end":546,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":78564,"byte_end":78569,"line_start":563,"line_end":563,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":78993,"byte_end":78998,"line_start":581,"line_end":581,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":80708,"byte_end":80713,"line_start":653,"line_end":653,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":80847,"byte_end":80852,"line_start":659,"line_end":659,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":81135,"byte_end":81140,"line_start":673,"line_end":673,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":81313,"byte_end":81318,"line_start":682,"line_end":682,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":82433,"byte_end":82440,"line_start":726,"line_end":726,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":85519,"byte_end":85526,"line_start":842,"line_end":842,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":85642,"byte_end":85649,"line_start":848,"line_end":848,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":86906,"byte_end":86925,"line_start":36,"line_end":36,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":87393,"byte_end":87404,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":88271,"byte_end":88282,"line_start":89,"line_end":89,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":88911,"byte_end":88922,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":89199,"byte_end":89210,"line_start":118,"line_end":118,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":89385,"byte_end":89396,"line_start":124,"line_end":124,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":89689,"byte_end":89700,"line_start":133,"line_end":133,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":90543,"byte_end":90554,"line_start":157,"line_end":157,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":90855,"byte_end":90866,"line_start":167,"line_end":167,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":91259,"byte_end":91270,"line_start":179,"line_end":179,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":92182,"byte_end":92193,"line_start":203,"line_end":203,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":92624,"byte_end":92635,"line_start":216,"line_end":216,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":93127,"byte_end":93138,"line_start":231,"line_end":231,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":93412,"byte_end":93420,"line_start":240,"line_end":240,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":93547,"byte_end":93555,"line_start":246,"line_end":246,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":93666,"byte_end":93674,"line_start":252,"line_end":252,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":94033,"byte_end":94044,"line_start":267,"line_end":267,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":94429,"byte_end":94442,"line_start":281,"line_end":281,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":95684,"byte_end":95697,"line_start":313,"line_end":313,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":97021,"byte_end":97025,"line_start":370,"line_end":370,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":101376,"byte_end":101380,"line_start":504,"line_end":504,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":101533,"byte_end":101537,"line_start":510,"line_end":510,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":101644,"byte_end":101648,"line_start":516,"line_end":516,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":102223,"byte_end":102228,"line_start":540,"line_end":540,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":105055,"byte_end":105060,"line_start":620,"line_end":620,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":105163,"byte_end":105168,"line_start":626,"line_end":626,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":105418,"byte_end":105423,"line_start":635,"line_end":635,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":105766,"byte_end":105771,"line_start":650,"line_end":650,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":107284,"byte_end":107289,"line_start":698,"line_end":698,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":107589,"byte_end":107594,"line_start":708,"line_end":708,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":107871,"byte_end":107876,"line_start":721,"line_end":721,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":108086,"byte_end":108091,"line_start":730,"line_end":730,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":109087,"byte_end":109094,"line_start":769,"line_end":769,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":112266,"byte_end":112273,"line_start":876,"line_end":876,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":112383,"byte_end":112390,"line_start":882,"line_end":882,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":112604,"byte_end":112611,"line_start":891,"line_end":891,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":4731,"byte_end":4742,"line_start":134,"line_end":134,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":5486,"byte_end":5497,"line_start":162,"line_end":162,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":5969,"byte_end":5980,"line_start":176,"line_end":176,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":6303,"byte_end":6314,"line_start":189,"line_end":189,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":6489,"byte_end":6500,"line_start":196,"line_end":196,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":6625,"byte_end":6636,"line_start":202,"line_end":202,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":6772,"byte_end":6783,"line_start":208,"line_end":208,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":6933,"byte_end":6944,"line_start":214,"line_end":214,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":7211,"byte_end":7222,"line_start":222,"line_end":222,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":7399,"byte_end":7410,"line_start":227,"line_end":227,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":7845,"byte_end":7856,"line_start":237,"line_end":237,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":8026,"byte_end":8037,"line_start":244,"line_end":244,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":8154,"byte_end":8162,"line_start":250,"line_end":250,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":10645,"byte_end":10649,"line_start":341,"line_end":341,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":15162,"byte_end":15166,"line_start":469,"line_end":469,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":15685,"byte_end":15694,"line_start":488,"line_end":488,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":16660,"byte_end":16669,"line_start":515,"line_end":515,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":16767,"byte_end":16776,"line_start":521,"line_end":521,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":16874,"byte_end":16883,"line_start":527,"line_end":527,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":16983,"byte_end":16992,"line_start":533,"line_end":533,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":17342,"byte_end":17351,"line_start":543,"line_end":543,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":17713,"byte_end":17722,"line_start":555,"line_end":555,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":19160,"byte_end":19165,"line_start":601,"line_end":601,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":21611,"byte_end":21616,"line_start":681,"line_end":681,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":21765,"byte_end":21770,"line_start":687,"line_end":687,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":22632,"byte_end":22637,"line_start":717,"line_end":717,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":24114,"byte_end":24119,"line_start":760,"line_end":760,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":24233,"byte_end":24238,"line_start":766,"line_end":766,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":26775,"byte_end":26780,"line_start":846,"line_end":846,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":29359,"byte_end":29364,"line_start":913,"line_end":913,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":29477,"byte_end":29482,"line_start":919,"line_end":919,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":29606,"byte_end":29611,"line_start":928,"line_end":928,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":29636,"byte_end":29641,"line_start":930,"line_end":930,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":29759,"byte_end":29764,"line_start":936,"line_end":936,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":29886,"byte_end":29891,"line_start":942,"line_end":942,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30122,"byte_end":30127,"line_start":950,"line_end":950,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30244,"byte_end":30249,"line_start":956,"line_end":956,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32589,"byte_end":32596,"line_start":1014,"line_end":1014,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":38278,"byte_end":38285,"line_start":1170,"line_end":1170,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":38404,"byte_end":38411,"line_start":1176,"line_end":1176,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":39101,"byte_end":39109,"line_start":1201,"line_end":1201,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":39265,"byte_end":39273,"line_start":1209,"line_end":1209,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":39412,"byte_end":39423,"line_start":1215,"line_end":1215,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":4002,"byte_end":4010,"line_start":107,"line_end":107,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":100}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\parse.rs","byte_start":40065,"byte_end":40071,"line_start":15,"line_end":15,"column_start":10,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":65276,"byte_end":65287,"line_start":40,"line_end":40,"column_start":6,"column_end":17},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":65612,"byte_end":65623,"line_start":55,"line_end":55,"column_start":15,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":527},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":66620,"byte_end":66631,"line_start":92,"line_end":92,"column_start":18,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":527},"to":{"krate":2,"index":7375}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":67007,"byte_end":67018,"line_start":108,"line_end":108,"column_start":23,"column_end":34},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":527},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":68387,"byte_end":68398,"line_start":146,"line_end":146,"column_start":21,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":527},"to":{"krate":2,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":68623,"byte_end":68634,"line_start":154,"line_end":154,"column_start":40,"column_end":51},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":527},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":68887,"byte_end":68898,"line_start":164,"line_end":164,"column_start":40,"column_end":51},"kind":{"Impl":{"id":7}},"from":{"krate":14,"index":2902},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":69114,"byte_end":69125,"line_start":173,"line_end":173,"column_start":26,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":527},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":69264,"byte_end":69275,"line_start":179,"line_end":179,"column_start":40,"column_end":51},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":527},"to":{"krate":2,"index":4627}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":69549,"byte_end":69560,"line_start":191,"line_end":191,"column_start":42,"column_end":53},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":527},"to":{"krate":2,"index":4627}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":69843,"byte_end":69854,"line_start":203,"line_end":203,"column_start":28,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":527},"to":{"krate":2,"index":4640}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":70005,"byte_end":70016,"line_start":209,"line_end":209,"column_start":30,"column_end":41},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":527},"to":{"krate":2,"index":4640}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":70272,"byte_end":70283,"line_start":218,"line_end":218,"column_start":23,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":527},"to":{"krate":2,"index":4631}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":70532,"byte_end":70542,"line_start":232,"line_end":232,"column_start":6,"column_end":16},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":70803,"byte_end":70813,"line_start":244,"line_end":244,"column_start":21,"column_end":31},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":535},"to":{"krate":2,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":74167,"byte_end":74171,"line_start":378,"line_end":378,"column_start":6,"column_end":10},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":76928,"byte_end":76932,"line_start":489,"line_end":489,"column_start":21,"column_end":25},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":561},"to":{"krate":2,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":77470,"byte_end":77475,"line_start":512,"line_end":512,"column_start":6,"column_end":11},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":78122,"byte_end":78127,"line_start":546,"line_end":546,"column_start":23,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":571},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":78564,"byte_end":78569,"line_start":563,"line_end":563,"column_start":21,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":571},"to":{"krate":2,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":78993,"byte_end":78998,"line_start":581,"line_end":581,"column_start":6,"column_end":11},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":80708,"byte_end":80713,"line_start":653,"line_end":653,"column_start":20,"column_end":25},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":577},"to":{"krate":2,"index":1588}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":80847,"byte_end":80852,"line_start":659,"line_end":659,"column_start":26,"column_end":31},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":577},"to":{"krate":2,"index":1588}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":81135,"byte_end":81140,"line_start":673,"line_end":673,"column_start":23,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":577},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":81313,"byte_end":81318,"line_start":682,"line_end":682,"column_start":21,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":577},"to":{"krate":2,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":82433,"byte_end":82440,"line_start":726,"line_end":726,"column_start":6,"column_end":13},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":85519,"byte_end":85526,"line_start":842,"line_end":842,"column_start":23,"column_end":30},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":583},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\fallback.rs","byte_start":85642,"byte_end":85649,"line_start":848,"line_end":848,"column_start":21,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":583},"to":{"krate":2,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":86906,"byte_end":86925,"line_start":36,"line_end":36,"column_start":6,"column_end":25},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":87393,"byte_end":87404,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":88271,"byte_end":88282,"line_start":89,"line_end":89,"column_start":18,"column_end":29},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":614},"to":{"krate":2,"index":7375}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":88911,"byte_end":88922,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":614},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":89199,"byte_end":89210,"line_start":118,"line_end":118,"column_start":40,"column_end":51},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":614},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":89385,"byte_end":89396,"line_start":124,"line_end":124,"column_start":40,"column_end":51},"kind":{"Impl":{"id":34}},"from":{"krate":14,"index":2902},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":89689,"byte_end":89700,"line_start":133,"line_end":133,"column_start":38,"column_end":49},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":614},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":90543,"byte_end":90554,"line_start":157,"line_end":157,"column_start":26,"column_end":37},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":614},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":90855,"byte_end":90866,"line_start":167,"line_end":167,"column_start":40,"column_end":51},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":614},"to":{"krate":2,"index":4627}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":91259,"byte_end":91270,"line_start":179,"line_end":179,"column_start":42,"column_end":53},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":614},"to":{"krate":2,"index":4627}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":92182,"byte_end":92193,"line_start":203,"line_end":203,"column_start":28,"column_end":39},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":614},"to":{"krate":2,"index":4640}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":92624,"byte_end":92635,"line_start":216,"line_end":216,"column_start":30,"column_end":41},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":614},"to":{"krate":2,"index":4640}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":93127,"byte_end":93138,"line_start":231,"line_end":231,"column_start":21,"column_end":32},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":614},"to":{"krate":2,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":93412,"byte_end":93420,"line_start":240,"line_end":240,"column_start":37,"column_end":45},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":231},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":93547,"byte_end":93555,"line_start":246,"line_end":246,"column_start":35,"column_end":43},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":231},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":93666,"byte_end":93674,"line_start":252,"line_end":252,"column_start":21,"column_end":29},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":231},"to":{"krate":2,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":94033,"byte_end":94044,"line_start":267,"line_end":267,"column_start":23,"column_end":34},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":614},"to":{"krate":2,"index":4631}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":94429,"byte_end":94442,"line_start":281,"line_end":281,"column_start":19,"column_end":32},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":628},"to":{"krate":2,"index":4723}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":95684,"byte_end":95697,"line_start":313,"line_end":313,"column_start":21,"column_end":34},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":628},"to":{"krate":2,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":97021,"byte_end":97025,"line_start":370,"line_end":370,"column_start":6,"column_end":10},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":101376,"byte_end":101380,"line_start":504,"line_end":504,"column_start":40,"column_end":44},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":705},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":101533,"byte_end":101537,"line_start":510,"line_end":510,"column_start":31,"column_end":35},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":637},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":101644,"byte_end":101648,"line_start":516,"line_end":516,"column_start":21,"column_end":25},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":637},"to":{"krate":2,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":102223,"byte_end":102228,"line_start":540,"line_end":540,"column_start":6,"column_end":11},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":105055,"byte_end":105060,"line_start":620,"line_end":620,"column_start":32,"column_end":37},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":647},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":105163,"byte_end":105168,"line_start":626,"line_end":626,"column_start":23,"column_end":28},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":647},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":105418,"byte_end":105423,"line_start":635,"line_end":635,"column_start":21,"column_end":26},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":647},"to":{"krate":2,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":105766,"byte_end":105771,"line_start":650,"line_end":650,"column_start":6,"column_end":11},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":107284,"byte_end":107289,"line_start":698,"line_end":698,"column_start":20,"column_end":25},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":656},"to":{"krate":2,"index":1588}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":107589,"byte_end":107594,"line_start":708,"line_end":708,"column_start":26,"column_end":31},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":656},"to":{"krate":2,"index":1588}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":107871,"byte_end":107876,"line_start":721,"line_end":721,"column_start":23,"column_end":28},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":656},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":108086,"byte_end":108091,"line_start":730,"line_end":730,"column_start":21,"column_end":26},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":656},"to":{"krate":2,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":109087,"byte_end":109094,"line_start":769,"line_end":769,"column_start":6,"column_end":13},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":112266,"byte_end":112273,"line_start":876,"line_end":876,"column_start":34,"column_end":41},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":665},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":112383,"byte_end":112390,"line_start":882,"line_end":882,"column_start":23,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":665},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\wrapper.rs","byte_start":112604,"byte_end":112611,"line_start":891,"line_end":891,"column_start":21,"column_end":28},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":665},"to":{"krate":2,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":4731,"byte_end":4742,"line_start":134,"line_end":134,"column_start":6,"column_end":17},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":5486,"byte_end":5497,"line_start":162,"line_end":162,"column_start":18,"column_end":29},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":700},"to":{"krate":2,"index":1843}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":5969,"byte_end":5980,"line_start":176,"line_end":176,"column_start":18,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":700},"to":{"krate":2,"index":7375}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":6303,"byte_end":6314,"line_start":189,"line_end":189,"column_start":40,"column_end":51},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":700},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":6489,"byte_end":6500,"line_start":196,"line_end":196,"column_start":40,"column_end":51},"kind":{"Impl":{"id":69}},"from":{"krate":14,"index":2902},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":6625,"byte_end":6636,"line_start":202,"line_end":202,"column_start":26,"column_end":37},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":700},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":6772,"byte_end":6783,"line_start":208,"line_end":208,"column_start":28,"column_end":39},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":700},"to":{"krate":2,"index":4640}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":6933,"byte_end":6944,"line_start":214,"line_end":214,"column_start":30,"column_end":41},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":700},"to":{"krate":2,"index":4640}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":7211,"byte_end":7222,"line_start":222,"line_end":222,"column_start":34,"column_end":45},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":700},"to":{"krate":2,"index":4627}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":7399,"byte_end":7410,"line_start":227,"line_end":227,"column_start":36,"column_end":47},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":700},"to":{"krate":2,"index":4627}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":7845,"byte_end":7856,"line_start":237,"line_end":237,"column_start":23,"column_end":34},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":700},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":8026,"byte_end":8037,"line_start":244,"line_end":244,"column_start":21,"column_end":32},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":700},"to":{"krate":2,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":8154,"byte_end":8162,"line_start":250,"line_end":250,"column_start":21,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":360},"to":{"krate":2,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":10645,"byte_end":10649,"line_start":341,"line_end":341,"column_start":6,"column_end":10},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":15162,"byte_end":15166,"line_start":469,"line_end":469,"column_start":21,"column_end":25},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":705},"to":{"krate":2,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":15685,"byte_end":15694,"line_start":488,"line_end":488,"column_start":6,"column_end":15},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":16660,"byte_end":16669,"line_start":515,"line_end":515,"column_start":22,"column_end":31},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":711},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":16767,"byte_end":16776,"line_start":521,"line_end":521,"column_start":22,"column_end":31},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":711},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":16874,"byte_end":16883,"line_start":527,"line_end":527,"column_start":22,"column_end":31},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":711},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":16983,"byte_end":16992,"line_start":533,"line_end":533,"column_start":24,"column_end":33},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":711},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":17342,"byte_end":17351,"line_start":543,"line_end":543,"column_start":23,"column_end":32},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":711},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":17713,"byte_end":17722,"line_start":555,"line_end":555,"column_start":21,"column_end":30},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":711},"to":{"krate":2,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":19160,"byte_end":19165,"line_start":601,"line_end":601,"column_start":6,"column_end":11},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":21611,"byte_end":21616,"line_start":681,"line_end":681,"column_start":23,"column_end":28},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":726},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":21765,"byte_end":21770,"line_start":687,"line_end":687,"column_start":21,"column_end":26},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":726},"to":{"krate":2,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":22632,"byte_end":22637,"line_start":717,"line_end":717,"column_start":6,"column_end":11},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":750},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":24114,"byte_end":24119,"line_start":760,"line_end":760,"column_start":23,"column_end":28},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":750},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":24233,"byte_end":24238,"line_start":766,"line_end":766,"column_start":21,"column_end":26},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":750},"to":{"krate":2,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":26775,"byte_end":26780,"line_start":846,"line_end":846,"column_start":6,"column_end":11},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":29359,"byte_end":29364,"line_start":913,"line_end":913,"column_start":20,"column_end":25},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":772},"to":{"krate":2,"index":1588}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":29477,"byte_end":29482,"line_start":919,"line_end":919,"column_start":26,"column_end":31},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":772},"to":{"krate":2,"index":1588}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":29606,"byte_end":29611,"line_start":928,"line_end":928,"column_start":13,"column_end":18},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":772},"to":{"krate":2,"index":1593}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":29636,"byte_end":29641,"line_start":930,"line_end":930,"column_start":21,"column_end":26},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":772},"to":{"krate":2,"index":1625}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":29759,"byte_end":29764,"line_start":936,"line_end":936,"column_start":14,"column_end":19},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":772},"to":{"krate":2,"index":1614}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":29886,"byte_end":29891,"line_start":942,"line_end":942,"column_start":15,"column_end":20},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":772},"to":{"krate":2,"index":6114}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30122,"byte_end":30127,"line_start":950,"line_end":950,"column_start":23,"column_end":28},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":772},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":30244,"byte_end":30249,"line_start":956,"line_end":956,"column_start":21,"column_end":26},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":772},"to":{"krate":2,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":32589,"byte_end":32596,"line_start":1014,"line_end":1014,"column_start":6,"column_end":13},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":38278,"byte_end":38285,"line_start":1170,"line_end":1170,"column_start":21,"column_end":28},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":777},"to":{"krate":2,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":38404,"byte_end":38411,"line_start":1176,"line_end":1176,"column_start":23,"column_end":30},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":777},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":39101,"byte_end":39109,"line_start":1201,"line_end":1201,"column_start":23,"column_end":31},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":806},"to":{"krate":2,"index":4723}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":39265,"byte_end":39273,"line_start":1209,"line_end":1209,"column_start":25,"column_end":33},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":806},"to":{"krate":2,"index":5923}},{"span":{"file_name":"C:\\Users\\aarav_gupta\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.17\\src\\lib.rs","byte_start":39412,"byte_end":39423,"line_start":1215,"line_end":1215,"column_start":27,"column_end":38},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":700},"to":{"krate":2,"index":4631}}]}